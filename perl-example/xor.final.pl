$data = bless( {
  'population' => {
    '16203' => {
      'fitness' => '0.749908256634825',
      'topology' => 15261,
      'id' => 16203,
      'elite' => 0,
      'nodes' => {
        '4920' => {
          '4639' => '0.790439841936758',
          'bias' => 0,
          '6083' => 0
        },
        '4639' => {
          'bias' => 0,
          'two' => '0.76460898698508'
        },
        '6083' => {
          'bias' => '0.997206149425171'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '3.42950683908511',
          '1863' => '-1.08905140190094',
          'two' => '3.65933525971299',
          'bias' => '0.0669476099868338',
          '601' => '-0.641371434146639'
        },
        '601' => {
          'one' => '-0.829528360014206',
          '4920' => '0.816803188508477',
          'bias' => '0.324468464035847'
        },
        '1863' => {
          'one' => '0.498583445647793',
          'two' => '-0.0464421682088412',
          'bias' => 0,
          '601' => '0.953236337723491'
        },
        'one' => {}
      }
    },
    '16200' => {
      'fitness' => '0.749999999999932',
      'topology' => 15515,
      'nodes' => {
        '4639' => {
          'one' => '-0.756890751983624',
          'two' => '1.02173872594324',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.875874431047371',
          '4639' => '0.730874276191017',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.263323031782794'
        },
        '14941' => {
          'bias' => '0.969975979169662'
        },
        '7065' => {
          '4639' => '0.846276977294643',
          '6083' => '-0.355801842283427',
          'bias' => 0,
          '601' => '0.555112388569675'
        },
        '6083' => {
          '14941' => '0.965441658664882',
          'bias' => 0
        },
        'output' => {
          '1863' => '-4.02504960499814',
          'one' => 10,
          '4920' => '0.148038340727866',
          '7065' => '-0.254823330286521',
          'bias' => '0.0525574474184348',
          'two' => 10,
          '601' => '-2.00613629728659'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.64513030772989',
          '4639' => '-0.763353947231596',
          '4920' => '0.662697074673099',
          'bias' => '0.326545121176972',
          'two' => '-1.01167174561698'
        },
        'one' => {},
        '1863' => {
          'one' => '0.364425658106815',
          '4639' => '0.958887283880007',
          'bias' => 0,
          'two' => '-0.0181178518012161',
          '601' => '0.562940490332601'
        }
      },
      'elite' => 0,
      'id' => 16200
    },
    '16170' => {
      'fitness' => '0.749999998187149',
      'topology' => 10443,
      'nodes' => {
        '4639' => {
          'two' => '1.17484501815419',
          'bias' => 0
        },
        '4920' => {
          '4639' => '0.589455329944663',
          'bias' => 0
        },
        'output' => {
          '1863' => '-3.14574087060756',
          'one' => '8.98218215630182',
          '4639' => '-0.0962918031466602',
          '4920' => '-0.476183773207684',
          'bias' => '0.0613945702478435',
          'two' => '7.80908659593523',
          '601' => '-0.528198114199741'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-0.880238318314217',
          '4639' => '-0.563959780429909',
          '4920' => '0.293816641885395',
          'bias' => '0.423680965659417'
        },
        '1863' => {
          'one' => '0.425127688238158',
          '4639' => '0.750628904246411',
          'bias' => 0,
          'two' => '-0.0664092711370899',
          '601' => '1.13208169546376'
        },
        'one' => {}
      },
      'elite' => 0,
      'id' => 16170
    },
    '16133' => {
      'fitness' => '0.749999999999837',
      'topology' => 14661,
      'id' => 16133,
      'elite' => 1,
      'nodes' => {
        '4920' => {
          'one' => '0.827858764653565',
          '4639' => '0.490968357595885',
          'two' => '-0.25321770908545',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.84062668342683',
          'bias' => 0,
          'two' => '0.801473892419512'
        },
        '7065' => {
          '4639' => '0.830871961540551',
          'bias' => 0
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '9.73635981163391',
          '1863' => '-3.60275117612385',
          '4920' => '0.171742263528346',
          '7065' => '-0.230674324499748',
          'two' => 10,
          'bias' => '0.0462575594488473',
          '601' => '-2.12946098158755'
        },
        '6083' => {
          'bias' => '1.07242592196957'
        },
        '601' => {
          'one' => '-1.51699304734952',
          '4920' => '0.730257010466798',
          'two' => '-1.01563320144578',
          'bias' => '0.234300525198189'
        },
        '1863' => {
          'one' => '0.431771435176528',
          '4639' => '0.796402175536851',
          '6083' => '0.744924730607302',
          'two' => '-0.0210747482145011',
          'bias' => 0,
          '601' => '0.767212394395799'
        },
        'one' => {}
      }
    },
    '16213' => {
      'fitness' => '0.653882895670818',
      'topology' => 16214,
      'id' => 16213,
      'elite' => 0,
      'nodes' => {
        '549' => {
          'one' => '1.04187898074661',
          'bias' => 0
        },
        '4920' => {
          '4639' => '1.02490275447767',
          'two' => '-0.269377255189397',
          'bias' => 0
        },
        '4639' => {
          '549' => '0.75683979709396',
          'bias' => 0,
          'two' => '0.930788569328464'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          '549' => '3.20523224797128',
          '1863' => '-1.15448324278314',
          '4639' => '-0.135800061574209',
          'two' => '4.0802725360189',
          'bias' => '0.0688208905103387',
          '601' => '-0.495511183901079'
        },
        '601' => {
          'one' => '-0.978918074475015',
          '4920' => '0.803646918676541',
          'bias' => '0.321085511447368'
        },
        '1863' => {
          'one' => '0.468511781725094',
          '4639' => '0.816318894040748',
          'two' => '-0.0485027036571635',
          'bias' => 0,
          '601' => '0.919666843176843'
        },
        'one' => {}
      }
    },
    '16201' => {
      'fitness' => '0.749999999999941',
      'topology' => 15515,
      'nodes' => {
        '4639' => {
          'one' => '-0.692233378084844',
          'two' => '0.99564042119525',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.94704885841148',
          '4639' => '0.782876758718147',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.271186824018596'
        },
        '14941' => {
          'bias' => '0.883729101172639'
        },
        '7065' => {
          '4639' => '0.787099761449825',
          '6083' => '-0.351095959871703',
          'bias' => 0,
          '601' => '0.542879122770484'
        },
        '6083' => {
          '14941' => '0.899653122849882',
          'bias' => 0
        },
        'output' => {
          '1863' => '-3.86012157135222',
          'one' => 10,
          '4920' => '0.154785029875269',
          '7065' => '-0.250740111382599',
          'bias' => '0.0568963822711977',
          'two' => 10,
          '601' => '-2.14423911738034'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.80122278311814',
          '4639' => '-0.801914911361587',
          '4920' => '0.674592105997369',
          'bias' => '0.311379712687051',
          'two' => '-1.04379695314142'
        },
        'one' => {},
        '1863' => {
          'one' => '0.339059093937628',
          '4639' => '1.02354399757182',
          'bias' => 0,
          'two' => '-0.0167894498597128',
          '601' => '0.601862932540094'
        }
      },
      'elite' => 0,
      'id' => 16201
    },
    '16191' => {
      'fitness' => '0.749999999999626',
      'topology' => 14041,
      'id' => 16191,
      'elite' => 0,
      'nodes' => {
        '4920' => {
          'one' => '0.863402876472661',
          '4639' => '0.67445560447376',
          'two' => '-0.275828349210611',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.697995006322268',
          'bias' => 0,
          'two' => '0.919105637222358'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '9.60264288363152',
          '1863' => '-3.67534096065341',
          '4639' => '-0.210568358954971',
          '4920' => '0.205641214027951',
          'two' => 10,
          'bias' => '0.0444502907770139',
          '601' => '-2.34213246391214'
        },
        '6083' => {
          'bias' => '0.931344671448865'
        },
        '601' => {
          'one' => '-1.53553722643952',
          '4920' => '0.680071426282656',
          '6083' => '0.0139940247167836',
          'two' => '-0.942854625105398',
          'bias' => '0.238294960435852'
        },
        '1863' => {
          'one' => '0.423171622469618',
          '4639' => '0.917970696065767',
          'two' => '-0.0226897827944371',
          'bias' => 0,
          '6083' => '-0.210310201483896',
          '601' => '0.612023694531412'
        },
        'one' => {}
      }
    },
    '16212' => {
      'fitness' => '0.749149631621584',
      'topology' => 12370,
      'nodes' => {
        'one' => {},
        '549' => {
          'one' => '-1.12350978484419',
          'bias' => 0,
          '3130' => '0.150615699418984'
        },
        '3130' => {
          'bias' => '0.87139873681688'
        },
        'output' => {
          '549' => '5.69911213159638',
          'two' => '-2.59482251952874',
          'bias' => '1.15828206551265'
        },
        'bias' => {},
        'two' => {}
      },
      'elite' => 0,
      'id' => 16212
    },
    '16157' => {
      'fitness' => '0.749954943005707',
      'topology' => 15653,
      'nodes' => {
        '2016' => {
          'two' => '-0.805314807753753',
          'bias' => '0.876816083101453'
        },
        '4639' => {
          'two' => '0.981616690653005',
          'bias' => 0
        },
        '4920' => {
          '4639' => '0.88081772685591',
          'bias' => 0
        },
        'output' => {
          '1863' => '-1.33963106260921',
          'one' => '3.84856394196904',
          '4639' => '-0.126226887400902',
          'bias' => '0.0848849924506123',
          'two' => '3.88705033443759',
          '601' => '-0.531587653088962'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          '2016' => '0.290431364006987',
          'one' => '-0.69405345156306',
          '4920' => '0.739118788253678',
          '4639' => '0.201519542806653',
          'bias' => 0
        },
        '1863' => {
          'one' => '0.398564489907506',
          '4639' => '0.605433977347662',
          'bias' => 0,
          'two' => '-0.0581478265699701',
          '601' => '1.0748948646596'
        },
        'one' => {}
      },
      'elite' => 0,
      'id' => 16157
    },
    '15967' => {
      'fitness' => '0.749836178899929',
      'topology' => 14346,
      'id' => 15967,
      'elite' => 1,
      'nodes' => {
        '2016' => {
          'bias' => '0.804005038927531',
          'two' => '-0.695698633916713'
        },
        '4920' => {
          '4639' => '0.809427589735072',
          'bias' => 0
        },
        '4639' => {
          'bias' => 0,
          'two' => '0.718800784936868'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '3.22784656513704',
          '1863' => '-1.08617278338407',
          '4639' => '-0.123812045651445',
          'two' => '3.35750069040172',
          'bias' => '0.0652577650722912',
          '601' => '-0.518259118639014'
        },
        '601' => {
          '2016' => '0.241073087995759',
          'one' => '-0.763141932703845',
          '4920' => '0.693759928320595',
          'two' => '0.197109783560432',
          'bias' => 0
        },
        '1863' => {
          'one' => '0.306362762318975',
          '4639' => '0.87786367003428',
          'two' => '-0.0492806767940368',
          'bias' => 0,
          '601' => '0.960173453419591'
        },
        'one' => {}
      }
    },
    '16172' => {
      'fitness' => '0.749999999992206',
      'topology' => 14388,
      'nodes' => {
        '4639' => {
          'one' => '-0.752048409033282',
          'two' => '0.845155271768391',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.853416712659417',
          '4639' => '0.709512549030391',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.242197087433968'
        },
        '6083' => {
          'bias' => '0.975092898784844'
        },
        'output' => {
          '1863' => '-3.13882123620943',
          'one' => '9.13654178509628',
          '4920' => '0.154011312802047',
          '4639' => '-0.228689010138607',
          'bias' => '0.0515627418099936',
          'two' => 10,
          '601' => '-1.84770261279148'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.91210304678794',
          '4920' => '0.553042589648246',
          '4639' => '0.652515568301381',
          'bias' => '0.21247920782689',
          'two' => '-0.838492146916272'
        },
        '1863' => {
          'one' => '0.539126968314572',
          '4639' => '1.10682124761959',
          'bias' => 0,
          'two' => '-0.0202867425593221',
          '601' => '0.654904908407288'
        },
        'one' => {}
      },
      'elite' => 0,
      'id' => 16172
    },
    '16090' => {
      'fitness' => '0.749999999999968',
      'topology' => 15963,
      'id' => 16090,
      'elite' => 1,
      'nodes' => {
        '15400' => {
          '4639' => '0.394818857229048',
          'bias' => '1.01522511039501'
        },
        '4920' => {
          'one' => '0.764677505696626',
          '4639' => '0.720816089471203',
          'two' => '-0.254259080461883',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.740846112100489',
          'bias' => 0,
          'two' => '0.849596772657647'
        },
        '7065' => {
          '15400' => 0,
          '4639' => '0.898038384478704',
          'bias' => 0
        },
        'two' => {},
        'bias' => {},
        'output' => {
          '1863' => '-3.88250583485404',
          'one' => 10,
          '15005' => '0.193298957142422',
          '7065' => '-0.298767761863803',
          'two' => 10,
          'bias' => '0.0547087175929212',
          '601' => '-2.39753806231609'
        },
        '6083' => {
          '4639' => '0.473230261888713',
          'bias' => '0.958944098191'
        },
        '601' => {
          'one' => '-1.5516835235558',
          '4920' => '0.805282860821832',
          '4639' => '-0.820424634347233',
          'two' => '-0.972193894956376',
          'bias' => '0.240516539098082'
        },
        '1863' => {
          'one' => '0.425883061341092',
          '4639' => '0.868812773047928',
          'two' => '-0.0203029006087107',
          'bias' => 0,
          '601' => '0.688508801594894'
        },
        'one' => {},
        '15005' => {
          '4920' => '1.00233861630301',
          'bias' => 0
        }
      }
    },
    '16105' => {
      'fitness' => '0.749979692341427',
      'topology' => 12871,
      'id' => 16105,
      'elite' => 1,
      'nodes' => {
        '4920' => {
          '4639' => '1.03512163056796',
          'two' => '-0.336731785551813'
        },
        '4639' => {
          'bias' => 0,
          'two' => '0.853463497403103'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '4.18922476410839',
          '1863' => '-1.4842487030429',
          '4920' => '-0.0803019701880094',
          '4639' => '-0.188505793657816',
          'two' => '4.21768585152594',
          'bias' => '0.0778824932932264',
          '601' => '-0.452227976199316'
        },
        '601' => {
          'one' => '-0.66551669789898',
          '4920' => '0.676884362249674',
          'bias' => '0.326257554285384'
        },
        '1863' => {
          'one' => '0.528748042650612',
          '4639' => '0.556762970628185',
          '4920' => '0.262338934491753',
          'two' => '-0.0618150144795355',
          'bias' => 0,
          '601' => '1.20007925671331'
        },
        'one' => {}
      }
    },
    '16027' => {
      'fitness' => '0.500000004000617',
      'topology' => 15440,
      'id' => 16027,
      'elite' => 1,
      'nodes' => {
        '14941' => {
          'bias' => '0.969975979169662'
        },
        '4920' => {
          'one' => '0.875874431047371',
          '4639' => '0.730874276191017',
          'two' => '-0.263323031782794',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.756890751983624',
          'bias' => 0,
          'two' => '1.12230230262831'
        },
        '7065' => {
          '4639' => '0.846276977294643',
          'bias' => 0
        },
        'two' => {},
        'bias' => {},
        'output' => {
          '1863' => '-4.02504960499814',
          '4920' => '0.148038340727866',
          '7065' => '-0.254823330286521',
          'two' => 10,
          'bias' => '0.0525574474184348',
          '601' => '-2.1953581303166'
        },
        '6083' => {
          '14941' => '0.965441658664882',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.64513030772989',
          '4920' => '0.662697074673099',
          '4639' => '-0.763353947231596',
          'two' => '-1.01167174561698',
          'bias' => '0.326545121176972'
        },
        '1863' => {
          'one' => '0.380004593395456',
          '4639' => '0.958887283880007',
          'two' => '-0.0181178518012161',
          'bias' => 0,
          '601' => '0.562940490332601'
        },
        'one' => {}
      }
    },
    '16167' => {
      'fitness' => '0.749979721930996',
      'topology' => 12871,
      'id' => 16167,
      'elite' => 0,
      'nodes' => {
        '4920' => {
          '4639' => '0.987120086089163',
          'two' => '-0.336731785551813'
        },
        '4639' => {
          'bias' => 0,
          'two' => '0.853463497403103'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '4.18922476410839',
          '1863' => '-1.4842487030429',
          '4920' => '-0.0803019701880094',
          '4639' => '-0.188505793657816',
          'two' => '4.21768585152594',
          'bias' => '0.0778824932932264',
          '601' => '-0.452227976199316'
        },
        '601' => {
          'one' => '-0.66551669789898',
          '4920' => '0.676884362249674',
          'bias' => '0.326257554285384'
        },
        '1863' => {
          'one' => '0.528748042650612',
          '4639' => '0.556762970628185',
          '4920' => '0.262338934491753',
          'two' => '-0.0618150144795355',
          'bias' => 0,
          '601' => '1.20007925671331'
        },
        'one' => {}
      }
    },
    '16181' => {
      'fitness' => '0.749999999999962',
      'topology' => 15478,
      'id' => 16181,
      'elite' => 0,
      'nodes' => {
        '14941' => {
          'bias' => '1.00199445005898'
        },
        '4920' => {
          'one' => '0.921729632751144',
          '4639' => '0.77412759067162',
          'two' => '-0.228332284374262',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.772039605430058',
          'bias' => 0,
          'two' => '0.880319372766154'
        },
        '7065' => {
          '4639' => '0.708361059939282',
          'bias' => 0,
          '601' => '0.63529443389206'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => 10,
          '1863' => '-3.97507330753409',
          '4920' => '0.143153098989579',
          '7065' => '-0.232051060311991',
          'two' => 10,
          'bias' => '0.0480206339594631',
          '601' => '-2.42271780532361'
        },
        '6083' => {
          '14941' => '0.921156595343108',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.72422578787602',
          '4920' => '0.653535106812237',
          '4639' => '-0.732232883661773',
          'two' => '-0.960957031257227',
          'bias' => '0.353565708672801'
        },
        '1863' => {
          'one' => '0.44806741993128',
          '4639' => '0.890628149165944',
          'two' => '-0.0157607723127472',
          'bias' => 0,
          '601' => '0.477716979512454'
        },
        'one' => {}
      }
    },
    '16064' => {
      'fitness' => '0.749999999856363',
      'topology' => 9062,
      'nodes' => {
        '1863' => {
          'one' => '-0.363698714721895',
          'bias' => '-1.55751621201981',
          'two' => '2.72860162914371',
          '601' => '-0.651224997129459'
        },
        'one' => {},
        'output' => {
          '1863' => '5.7179166861018',
          'one' => 10,
          'bias' => '-4.38474545662926',
          'two' => '3.1075005991353'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-0.0455430212387701',
          'bias' => '-0.235634525891272'
        }
      },
      'elite' => 1,
      'id' => 16064
    },
    '16166' => {
      'fitness' => '0.749999999999839',
      'topology' => 14309,
      'id' => 16166,
      'elite' => 0,
      'nodes' => {
        '4920' => {
          'one' => '0.723896086043379',
          '4639' => '0.953541931510471',
          'two' => '-0.29177304432873',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.614798649620842',
          'bias' => 0,
          'two' => '0.644961190956613'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '8.78602965032313',
          '1863' => '-3.52440480333881',
          '4639' => '-0.254051009986005',
          '4920' => '0.225673191282992',
          'two' => 10,
          'bias' => '0.051373114764595',
          '601' => '-2.42095008212947'
        },
        '6083' => {
          'one' => '-0.479145096410828',
          '4639' => '-0.584097763012059',
          'bias' => '1.24962209235472'
        },
        '601' => {
          'one' => '-1.23308747292669',
          '4920' => '0.665202943590214',
          'two' => '-1.08031105306719',
          'bias' => '0.237129930015885'
        },
        '1863' => {
          'one' => '0.320771366548245',
          '4639' => '1.05594508105482',
          'two' => '-0.0218707094630817',
          'bias' => 0,
          '6083' => '-0.213151486264592',
          '601' => '0.725752767179249'
        },
        'one' => {}
      }
    },
    '16140' => {
      'fitness' => '0.749801486063379',
      'topology' => 14877,
      'nodes' => {
        '1863' => {
          '3880' => '0.494891152383502',
          'bias' => 0,
          'two' => '-0.0689150673458593',
          '601' => '0.641431503388947'
        },
        'one' => {},
        '3880' => {
          'one' => '0.741538484145932',
          'two' => '-0.405172927236954',
          'bias' => 0
        },
        'output' => {
          '1863' => '-1.65063867361068',
          'one' => '3.45097176059475',
          'bias' => '0.0410599809633893',
          'two' => '3.14659959864522'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          '3880' => '-0.117625036142805',
          'one' => '-0.159505766280339',
          'bias' => '0.361755132061988',
          'two' => '0.642972399419093'
        }
      },
      'elite' => 1,
      'id' => 16140
    },
    '16194' => {
      'fitness' => '0.749999999996752',
      'topology' => 15401,
      'nodes' => {
        '15400' => {
          'bias' => '0.848386969470506'
        },
        '4639' => {
          'one' => '-0.696229359523639',
          'two' => '0.829548962456274',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.814480787428765',
          '4639' => '0.64193132412064',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.215152104107713'
        },
        '7065' => {
          '15400' => 0,
          '4639' => '0.906659037036505',
          'bias' => 0
        },
        '6083' => {
          '4639' => '0.492162497858986',
          'bias' => '0.984799146147124'
        },
        'output' => {
          '15005' => '0.188753047286211',
          'one' => '9.3375508496684',
          '1863' => '-4.10084002487548',
          '7065' => '-0.304288296983539',
          'bias' => '0.0551444049542407',
          'two' => '9.21382894305246',
          '601' => '-2.73358340050763'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.57993148117013',
          '4639' => '-0.773296653008452',
          '4920' => '0.840637143356335',
          'bias' => '0.21912850431957',
          'two' => '-0.868257328463561'
        },
        '15005' => {
          '4920' => '0.969623553746873',
          'bias' => 0
        },
        'one' => {},
        '1863' => {
          'one' => '0.478572795415798',
          '4639' => '0.78435011487466',
          'bias' => 0,
          'two' => '-0.0223846075191427',
          '601' => '0.643138190580542'
        }
      },
      'elite' => 0,
      'id' => 16194
    },
    '16165' => {
      'fitness' => '0.749999999999056',
      'topology' => 15589,
      'id' => 16165,
      'elite' => 0,
      'nodes' => {
        '14941' => {
          'two' => '0.10149841276605',
          'bias' => '1.0187566288767'
        },
        '4920' => {
          'one' => '0.916927177009894',
          '4639' => '0.717575662564507',
          'two' => '-0.250986700293521',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.754290637790162',
          'bias' => 0,
          'two' => '1.02231914848494'
        },
        '7065' => {
          '4639' => '0.831120296858503',
          'bias' => 0,
          '6083' => '-0.350154557050133',
          '601' => '0.522125471811781'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => 10,
          '1863' => '-4.27393713225531',
          '4920' => '0.141446544804947',
          '7065' => '-0.280048181054107',
          'two' => '9.61072940946649',
          'bias' => '0.0550646039057912',
          '601' => '-2.32029799907536'
        },
        '6083' => {
          '14941' => '0.882963440617856',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.9003930298353',
          '4920' => '0.609163849706908',
          '4639' => '-0.742935288722491',
          'two' => '-0.990946728573794',
          'bias' => '0.264860924076289'
        },
        '1863' => {
          'one' => '0.33065923747678',
          '4639' => '1.066533614872',
          'two' => '-0.0198651816424871',
          'bias' => 0,
          '601' => '0.634384953291999'
        },
        'one' => {}
      }
    },
    '16163' => {
      'fitness' => '0.749999999999846',
      'topology' => 15006,
      'id' => 16163,
      'elite' => 0,
      'nodes' => {
        '4920' => {
          'one' => '0.902688832972154',
          '4639' => '0.808946118030178',
          'two' => '-0.234359302745744',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.844914590350121',
          'bias' => 0,
          'two' => '0.746612222063269'
        },
        '7065' => {
          '4639' => '0.791587392324149',
          'bias' => 0
        },
        'two' => {},
        'bias' => {},
        'output' => {
          '1863' => '-4.00297374207816',
          'one' => '9.98980673196672',
          '15005' => '0.173944302691109',
          '7065' => '-0.258525219379964',
          'two' => '9.67937706788229',
          'bias' => '0.0464673079991559',
          '601' => '-2.41034798311731'
        },
        '6083' => {
          '4639' => '0.512238968538354',
          'bias' => '0.987433296901093'
        },
        '601' => {
          'one' => '-1.55711131331581',
          '4920' => '0.807009325959274',
          '4639' => '-0.858101457707884',
          'two' => '-0.908847600579121',
          'bias' => '0.247570535182079'
        },
        'one' => {},
        '15005' => {
          '4920' => '0.953990985221619',
          'bias' => 0
        },
        '1863' => {
          'one' => '0.38647147922151',
          '4639' => '0.879137831202077',
          'two' => '-0.0221482168302541',
          'bias' => 0,
          '601' => '0.621132816437862'
        }
      }
    },
    '16013' => {
      'fitness' => '0.749999999999951',
      'topology' => 15515,
      'nodes' => {
        '4639' => {
          'one' => '-0.756890751983624',
          'two' => '1.02173872594324',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.875874431047371',
          '4639' => '0.730874276191017',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.263323031782794'
        },
        '14941' => {
          'bias' => '0.969975979169662'
        },
        '7065' => {
          '4639' => '0.846276977294643',
          '6083' => '-0.355801842283427',
          'bias' => 0,
          '601' => '0.555112388569675'
        },
        '6083' => {
          '14941' => '0.965441658664882',
          'bias' => 0
        },
        'output' => {
          '1863' => '-4.02504960499814',
          'one' => 10,
          '4920' => '0.148038340727866',
          '7065' => '-0.254823330286521',
          'bias' => '0.0525574474184348',
          'two' => 10,
          '601' => '-2.1953581303166'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.64513030772989',
          '4639' => '-0.763353947231596',
          '4920' => '0.662697074673099',
          'bias' => '0.326545121176972',
          'two' => '-1.01167174561698'
        },
        'one' => {},
        '1863' => {
          'one' => '0.364425658106815',
          '4639' => '0.958887283880007',
          'bias' => 0,
          'two' => '-0.0181178518012161',
          '601' => '0.562940490332601'
        }
      },
      'elite' => 1,
      'id' => 16013
    },
    '16189' => {
      'fitness' => '0.749780902999449',
      'topology' => 15900,
      'nodes' => {
        '4639' => {
          'two' => '0.892301063865834',
          'bias' => 0
        },
        '4920' => {
          '4639' => '0.798721000577184',
          'bias' => 0
        },
        'output' => {
          '1863' => '-1.10949553549857',
          'one' => '3.60780348257894',
          'bias' => '0.0711828354012376',
          'two' => '3.15135084737426',
          '601' => '-0.42997470119376'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-0.853245940751012',
          '4920' => '0.804285443063132',
          '4639' => '-0.813434797888388',
          'bias' => '0.32440410088749'
        },
        '1863' => {
          'one' => '0.523688939852903',
          '4639' => '0.816823503664859',
          'bias' => 0,
          'two' => '-0.0467046184334436',
          '601' => '0.77946102246837'
        },
        'one' => {}
      },
      'elite' => 0,
      'id' => 16189
    },
    '15985' => {
      'fitness' => '0.749999999993284',
      'topology' => 14388,
      'nodes' => {
        '4639' => {
          'one' => '-0.693039194464127',
          'two' => '0.886734969684357',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.855923878701785',
          '4639' => '0.711813906813447',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.23739832193562'
        },
        '6083' => {
          'bias' => '0.909432665025555'
        },
        'output' => {
          '1863' => '-3.30197576183839',
          'one' => '9.67094529656186',
          '4920' => '0.167565227831531',
          '4639' => '-0.225545243211408',
          'bias' => '0.0495354058975829',
          'two' => 10,
          '601' => '-1.80247200868192'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.74574846578041',
          '4920' => '0.590746278557682',
          '4639' => '0.612475581438852',
          'bias' => '0.231462590151812',
          'two' => '-0.871470709072418'
        },
        '1863' => {
          'one' => '0.533356469889955',
          '4639' => '1.04660476652572',
          'bias' => 0,
          'two' => '-0.0203431169294252',
          '601' => '0.607714667063519'
        },
        'one' => {}
      },
      'elite' => 1,
      'id' => 15985
    },
    '16171' => {
      'fitness' => '0.749999999993284',
      'topology' => 14388,
      'nodes' => {
        '4639' => {
          'one' => '-0.693039194464127',
          'two' => '0.886734969684357',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.855923878701785',
          '4639' => '0.711813906813447',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.23739832193562'
        },
        '6083' => {
          'bias' => '0.909432665025555'
        },
        'output' => {
          '1863' => '-3.30197576183839',
          'one' => '9.67094529656186',
          '4920' => '0.167565227831531',
          '4639' => '-0.225545243211408',
          'bias' => '0.0495354058975829',
          'two' => 10,
          '601' => '-1.80247200868192'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.74574846578041',
          '4920' => '0.590746278557682',
          '4639' => '0.612475581438852',
          'bias' => '0.231462590151812',
          'two' => '-0.871470709072418'
        },
        '1863' => {
          'one' => '0.533356469889955',
          '4639' => '1.04660476652572',
          'bias' => 0,
          'two' => '-0.0219526988269099',
          '601' => '0.607714667063519'
        },
        'one' => {}
      },
      'elite' => 0,
      'id' => 16171
    },
    '16179' => {
      'fitness' => '0.749999999999921',
      'topology' => 15362,
      'nodes' => {
        '4639' => {
          'one' => '-0.789059138254083',
          'two' => '0.797392843838522',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.830184157349972',
          '4639' => '0.832787461469161',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.250960521109716'
        },
        '7065' => {
          '4639' => '0.823797369551354',
          'bias' => 0
        },
        '6083' => {
          '4639' => '0.516043012815754',
          'bias' => '1.10358392566837'
        },
        'output' => {
          '15005' => '0.174985038771674',
          'one' => 10,
          '1863' => '-3.98061330262503',
          '7065' => '-0.253192198752137',
          'bias' => '0.0512600784596415',
          'two' => 10,
          '601' => '-2.08793751891109'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.53675125013032',
          '4639' => '-0.760029791163951',
          '4920' => '0.746703587456477',
          'bias' => '0.253155432738357',
          'two' => '-0.973020068257078'
        },
        '1863' => {
          'one' => '0.403453267740469',
          '4920' => '0.370555464327978',
          '4639' => '0.837204567087668',
          'bias' => 0,
          'two' => '-0.0212244242808698',
          '601' => '0.652150293409306'
        },
        'one' => {},
        '15005' => {
          '4920' => '0.996061116250089',
          'bias' => 0
        }
      },
      'elite' => 0,
      'id' => 16179
    },
    '16149' => {
      'fitness' => '0.738199096887839',
      'topology' => 16150,
      'nodes' => {
        '4920' => {
          'one' => '0.399678855756235',
          '4639' => 1,
          'bias' => 0
        },
        '4639' => {
          'one' => '0.752581809101276',
          'two' => 1,
          'bias' => 0
        },
        'output' => {
          '1863' => '-1.11823547443776',
          'one' => '3.49185984168382',
          '4639' => '-0.994089460612003',
          'bias' => '0.074429753902327',
          'two' => '3.15939663495568',
          '601' => '-0.526647115749034'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-0.877804811548979',
          '4920' => '0.86079157493664',
          'bias' => '0.321085511447368'
        },
        'one' => {},
        '1863' => {
          'one' => '0.513351698528216',
          'bias' => 0,
          'two' => '-0.0443270863407186',
          '601' => '0.81906082502257'
        }
      },
      'elite' => 1,
      'id' => 16149
    },
    '16186' => {
      'fitness' => '0.749999999999758',
      'topology' => 14114,
      'nodes' => {
        '4639' => {
          'one' => '-0.652391264179374',
          'two' => '1.01570679011475',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.931702548366935',
          '4639' => '0.713184224085984',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.24279089004793'
        },
        '6083' => {
          'bias' => '0.97509990351159'
        },
        'output' => {
          '4920' => '0.227906850288736',
          '4639' => '-0.235854263483477',
          '6083' => '0.4522353275746',
          'bias' => '0.0390876517776172',
          'two' => 10,
          '601' => '-2.77986361292416',
          'one' => '8.82943550348443',
          '1863' => '-3.40186247034914'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.45873242528162',
          '4920' => '0.582434875472305',
          'bias' => '0.288325161862288',
          'two' => '-1.02971305577017'
        },
        '1863' => {
          'one' => '0.3961354593064',
          '4639' => '0.939836677765159',
          '6083' => '-0.186368694950443',
          'bias' => 0,
          'two' => '-0.0221284129693653',
          '601' => '0.691807604862918'
        },
        'one' => {}
      },
      'elite' => 0,
      'id' => 16186
    },
    '16207' => {
      'fitness' => '0.749999999999972',
      'topology' => 16026,
      'nodes' => {
        '15400' => {
          'bias' => '1.01522511039501'
        },
        '4639' => {
          'one' => '-0.740846112100489',
          'two' => '0.849596772657647',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.764677505696626',
          '4639' => '0.720816089471203',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.254259080461883'
        },
        '7065' => {
          '15400' => 0,
          '4639' => '0.898038384478704',
          'bias' => 0
        },
        '6083' => {
          '4639' => '0.473230261888713',
          'bias' => '0.958944098191'
        },
        'output' => {
          '15005' => '0.193298957142422',
          'one' => 10,
          '1863' => '-3.88250583485404',
          '7065' => '-0.298767761863803',
          'bias' => '0.0547087175929212',
          'two' => 10,
          '601' => '-2.39968738852891'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.5516835235558',
          '4639' => '-0.820424634347233',
          '4920' => '0.805282860821832',
          'bias' => '0.240516539098082',
          'two' => '-0.972193894956376'
        },
        '15005' => {
          '4920' => '1.00233861630301',
          'bias' => 0
        },
        'one' => {},
        '1863' => {
          'one' => '0.425883061341092',
          '4639' => '0.868812773047928',
          '7065' => '-0.114984991737771',
          'bias' => 0,
          'two' => '-0.0203029006087107',
          '601' => '0.688508801594894'
        }
      },
      'elite' => 0,
      'id' => 16207
    },
    '16152' => {
      'fitness' => '0.749999999999968',
      'topology' => 15963,
      'id' => 16152,
      'elite' => 0,
      'nodes' => {
        '15400' => {
          '4639' => '0.394818857229048',
          'bias' => '1.01522511039501'
        },
        '4920' => {
          'one' => '0.764677505696626',
          '4639' => '0.720816089471203',
          'two' => '-0.254259080461883',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.740846112100489',
          'bias' => 0,
          'two' => '0.849596772657647'
        },
        '7065' => {
          '15400' => 0,
          '4639' => '0.898038384478704',
          'bias' => 0
        },
        'two' => {},
        'bias' => {},
        'output' => {
          '1863' => '-3.88250583485404',
          'one' => 10,
          '15005' => '0.193298957142422',
          '7065' => '-0.298767761863803',
          'two' => 10,
          'bias' => '0.0547087175929212',
          '601' => '-2.39753806231609'
        },
        '6083' => {
          '4639' => '0.473230261888713',
          'bias' => '0.958944098191'
        },
        '601' => {
          'one' => '-1.5516835235558',
          '4920' => '0.805282860821832',
          '4639' => '-0.820424634347233',
          'two' => '-0.972193894956376',
          'bias' => '0.240516539098082'
        },
        '1863' => {
          'one' => '0.425883061341092',
          '4639' => '0.868812773047928',
          'two' => '-0.0203029006087107',
          'bias' => 0,
          '601' => '0.628421880310671'
        },
        'one' => {},
        '15005' => {
          '4920' => '1.00233861630301',
          'bias' => 0
        }
      }
    },
    '16161' => {
      'fitness' => '0.749999999999973',
      'topology' => 15776,
      'nodes' => {
        '4639' => {
          'one' => '-0.786572957152946',
          'two' => '0.880934693005357',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.814314855490864',
          '4639' => '0.766397502379163',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.254630543343811'
        },
        '14941' => {
          'bias' => '0.827849284299737'
        },
        '7065' => {
          '4639' => '0.796833279917739',
          '14941' => '-0.0624284556390736',
          'bias' => 0,
          '601' => '0.541724466630369'
        },
        '6083' => {
          '14941' => '0.833834893500647',
          'bias' => 0
        },
        'output' => {
          '1863' => '-3.84563831680425',
          'one' => 10,
          '4920' => '0.152471333958676',
          '7065' => '-0.213858023734793',
          'bias' => '0.0520650055457408',
          'two' => 10,
          '601' => '-2.4282240918725'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.75796436867988',
          '4639' => '-0.71170264364929',
          '4920' => '0.660054318274124',
          'bias' => '0.305029374076448',
          'two' => '-1.03123034479796'
        },
        'one' => {},
        '1863' => {
          'one' => '0.40671024734228',
          '4639' => '0.893570868447393',
          'bias' => 0,
          'two' => '-0.0171564060099979',
          '601' => '0.511101247527743'
        }
      },
      'elite' => 0,
      'id' => 16161
    },
    '16197' => {
      'fitness' => '0.749999999999738',
      'topology' => 14661,
      'id' => 16197,
      'elite' => 0,
      'nodes' => {
        '4920' => {
          'one' => '0.827858764653565',
          '4639' => '0.490968357595885',
          'two' => '-0.25321770908545',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.84062668342683',
          'bias' => 0,
          'two' => '0.801473892419512'
        },
        '7065' => {
          '4639' => '0.830871961540551',
          'bias' => 0
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '9.73635981163391',
          '1863' => '-3.60275117612385',
          '4920' => '0.171742263528346',
          '7065' => '-0.230674324499748',
          'two' => 10,
          'bias' => '0.0462575594488473',
          '601' => '-2.12946098158755'
        },
        '6083' => {
          'bias' => '1.07242592196957'
        },
        '601' => {
          'one' => '-1.51699304734952',
          '4920' => '0.730257010466798',
          'two' => '-0.920568377259549',
          'bias' => '0.234300525198189'
        },
        '1863' => {
          'one' => '0.431771435176528',
          '4639' => '0.796402175536851',
          '6083' => '0.744924730607302',
          'two' => '-0.0210747482145011',
          'bias' => 0,
          '601' => '0.767212394395799'
        },
        'one' => {}
      }
    },
    '16198' => {
      'fitness' => '0.749999999999454',
      'topology' => 14661,
      'id' => 16198,
      'elite' => 0,
      'nodes' => {
        '4920' => {
          'one' => '0.757958744232777',
          '4639' => '0.534021007320663',
          'two' => '-0.254770918783441',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.814840813432991',
          'bias' => 0,
          'two' => '0.746834016658501'
        },
        '7065' => {
          '4639' => '0.758024175696874',
          'bias' => 0
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => 10,
          '1863' => '-3.33282153439396',
          '4920' => '0.165402527961174',
          '7065' => '-0.239342546027186',
          'two' => '9.57096758144596',
          'bias' => '0.0503366774852327',
          '601' => '-2.2914914750884'
        },
        '6083' => {
          'bias' => '1.08548186557258'
        },
        '601' => {
          'one' => '-1.42085703450919',
          '4920' => '0.709562940448302',
          'two' => '-0.936534366669184',
          'bias' => '0.228110761592136'
        },
        '1863' => {
          'one' => '0.451717063871026',
          '4639' => '0.724273070633108',
          '6083' => '0.714332760942634',
          'two' => '-0.0224204358768847',
          'bias' => 0,
          '601' => '0.691857174324926'
        },
        'one' => {}
      }
    },
    '16069' => {
      'fitness' => '0.749999999999973',
      'topology' => 15401,
      'nodes' => {
        '15400' => {
          'bias' => '0.936670003969818'
        },
        '4639' => {
          'one' => '-0.708782047630469',
          'two' => '0.794888017621053',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.768382065120033',
          '4639' => '0.694002128552999',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.233554893584987'
        },
        '7065' => {
          '15400' => 0,
          '4639' => '0.906891060463882',
          'bias' => 0
        },
        '6083' => {
          '4639' => '0.494467940529544',
          'bias' => '0.972409227409902'
        },
        'output' => {
          '15005' => '0.207872860444669',
          'one' => 10,
          '1863' => '-3.90916408092117',
          '7065' => '-0.278976699735253',
          'bias' => '0.058641142037788',
          'two' => 10,
          '601' => '-2.54492288003864'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.51930426187057',
          '4639' => '-0.794717029537337',
          '4920' => '0.788960073555388',
          'bias' => '0.227922108991647',
          'two' => '-0.89518050060115'
        },
        '15005' => {
          '4920' => '0.922022188875977',
          'bias' => 0
        },
        'one' => {},
        '1863' => {
          'one' => '0.458672322127919',
          '4639' => '0.813444678729258',
          'bias' => 0,
          'two' => '-0.021940274256734',
          '601' => '0.650216855146504'
        }
      },
      'elite' => 1,
      'id' => 16069
    },
    '16162' => {
      'fitness' => '0.749999999999951',
      'topology' => 15006,
      'id' => 16162,
      'elite' => 0,
      'nodes' => {
        '4920' => {
          'one' => '0.830184157349972',
          '4639' => '0.759687702176913',
          'two' => '-0.250960521109716',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.791576326301189',
          'bias' => 0,
          'two' => '0.817003836063886'
        },
        '7065' => {
          '4639' => '0.823797369551354',
          'bias' => 0
        },
        'two' => {},
        'bias' => {},
        'output' => {
          '1863' => '-3.98061330262503',
          'one' => 10,
          '15005' => '0.174985038771674',
          '7065' => '-0.277022226142029',
          'two' => 10,
          'bias' => '0.0463682137716427',
          '601' => '-2.23243790864895'
        },
        '6083' => {
          '4639' => '0.516043012815754',
          'bias' => '1.04495902185915'
        },
        '601' => {
          'one' => '-1.52417915522199',
          '4920' => '0.746703587456477',
          '4639' => '-0.819790786027658',
          'two' => '-0.917618013491675',
          'bias' => '0.253155432738357'
        },
        'one' => {},
        '15005' => {
          '4920' => '0.996061116250089',
          'bias' => 0
        },
        '1863' => {
          'one' => '0.41233057193786',
          '4639' => '0.837204567087668',
          'two' => '-0.0212244242808698',
          'bias' => 0,
          '601' => '0.652150293409306'
        }
      }
    },
    '16107' => {
      'fitness' => '0.74999999942196',
      'topology' => 10443,
      'nodes' => {
        '4639' => {
          'two' => '1.11595904813886',
          'bias' => 0
        },
        '4920' => {
          '4639' => '0.591194628667654',
          'bias' => 0
        },
        'output' => {
          '1863' => '-3.26276800555068',
          'one' => '8.22665952870093',
          '4639' => '-0.102293434575215',
          '4920' => '-0.442481840980792',
          'bias' => '0.0591499626147604',
          'two' => '8.29822654718356',
          '601' => '-0.510617999255357'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-0.927843340462494',
          '4639' => '-0.575667683908536',
          '4920' => '0.304353010526961',
          'bias' => '0.394883829732671'
        },
        '1863' => {
          'one' => '0.442901882645799',
          '4639' => '0.697148893095542',
          'bias' => 0,
          'two' => '-0.0637410446997384',
          '601' => '1.05633352450603'
        },
        'one' => {}
      },
      'elite' => 1,
      'id' => 16107
    },
    '16122' => {
      'fitness' => '0.74999999999997',
      'topology' => 15715,
      'id' => 16122,
      'elite' => 1,
      'nodes' => {
        '14941' => {
          '15714' => '1.04749914969966',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.924931603035461',
          '4639' => '0.68068504884433',
          'two' => '-0.238870659791816',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.731630767616259',
          'bias' => 0,
          'two' => '0.945733305333831'
        },
        '7065' => {
          '4639' => '0.805103362161658',
          'bias' => 0,
          '6083' => '-0.323173239125185',
          '601' => '0.550501653490412'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => 10,
          '1863' => '-3.92295024243986',
          '4920' => '0.155112462455947',
          '7065' => '-0.277696531697446',
          'two' => 10,
          'bias' => '0.0483366914975657',
          '601' => '-2.48320411743114'
        },
        '6083' => {
          '14941' => '0.963256163234184',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.56611463526347',
          '4920' => '0.656073182124121',
          '4639' => '-0.775934578443355',
          'two' => '-0.931272048626625',
          'bias' => '0.297538127144574'
        },
        '1863' => {
          'one' => '0.404002742198397',
          '4639' => '0.871622366353709',
          'two' => '-0.0193792016236484',
          'bias' => 0,
          '601' => '0.546883228987512'
        },
        'one' => {},
        '15714' => {
          'bias' => '1.02690192023271'
        }
      }
    },
    '16199' => {
      'fitness' => '0.5344947938028',
      'topology' => 16088,
      'id' => 16199,
      'elite' => 0,
      'nodes' => {
        '981' => {
          'one' => '0.585482914242263',
          'bias' => 0,
          'two' => 1
        },
        'one' => {},
        '1863' => {
          'one' => '0.488585053632672',
          'two' => '-0.0443270863407186',
          'bias' => 0,
          '601' => '0.88316747995409'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          '981' => '3.31518648644247',
          'one' => '2.99050426066213',
          '1863' => '-0.99503610076787',
          'bias' => '0.0758417247612818',
          '601' => '-0.463509631260245'
        },
        '601' => {
          'two' => '0.825066331637297',
          'bias' => '0.349379786981963'
        }
      }
    },
    '16210' => {
      'fitness' => '0.749999999999844',
      'topology' => 15326,
      'id' => 16210,
      'elite' => 0,
      'nodes' => {
        '14941' => {
          'bias' => '0.940701166323458'
        },
        '4920' => {
          'one' => '0.915834476004158',
          '4639' => '0.79703627202119',
          'two' => '-0.317597017289681',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.747953867504747',
          'bias' => 0,
          'two' => '1.00327674200243'
        },
        '7065' => {
          '4639' => '0.75591641439609',
          'bias' => 0
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => 10,
          '1863' => '-4.0456254079605',
          '4920' => '0.157878229172537',
          '7065' => '-0.273120309833855',
          'two' => 10,
          'bias' => '0.0565432321217377',
          '601' => '-2.09370847605493'
        },
        '6083' => {
          '14941' => '0.818838879821959',
          '7065' => '0.997662751087066',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.78153856738492',
          '4920' => '0.646036624046222',
          '4639' => '-0.903561438906003',
          '14941' => '0.583619383592161',
          'two' => '-1.12393535666871',
          'bias' => '0.332470055391669'
        },
        '1863' => {
          'one' => '0.43808822923822',
          '4639' => '0.945336163595243',
          'two' => '-0.0215272229883411',
          'bias' => 0,
          '601' => '0.547346949372378'
        },
        'one' => {}
      }
    },
    '16178' => {
      'fitness' => '0.749999999978565',
      'topology' => 5970,
      'nodes' => {
        '4639' => {
          'two' => '1.40791251799331',
          'bias' => 0
        },
        '4920' => {
          'one' => '-0.769073701263361',
          '4639' => '1.63223998956187',
          'bias' => 0
        },
        'output' => {
          '1863' => '-2.60289166570357',
          'one' => 10,
          '4639' => '-0.211977111268086',
          '4920' => '-1.42165313877355',
          'bias' => '0.0731956736764076',
          'two' => '9.84769996374872',
          '601' => '-0.690640006307694'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.34218779344188',
          '4920' => '0.556011489430712',
          'bias' => '0.262645583907238'
        },
        '1863' => {
          'one' => '0.363477491396475',
          '4639' => '0.386695373107091',
          'bias' => 0,
          'two' => '-0.0658260973047747',
          '601' => '0.618245391687845'
        },
        'one' => {}
      },
      'elite' => 0,
      'id' => 16178
    },
    '15925' => {
      'fitness' => '0.749999999999956',
      'topology' => 15837,
      'id' => 15925,
      'elite' => 1,
      'nodes' => {
        '14941' => {
          'bias' => '0.870617382773356'
        },
        '4920' => {
          'one' => '0.885328459665327',
          '4639' => '0.74818269290369',
          'two' => '-0.26328696396865',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.813190399667706',
          'bias' => 0,
          'two' => '0.922952418267393'
        },
        '7065' => {
          'one' => '-0.480080803715552',
          '14941' => '-0.0583717664415744',
          '4639' => '0.772105773171098',
          'bias' => 0,
          '601' => '0.589004279822695'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '9.70662371456309',
          '1863' => '-3.69581600195527',
          '4920' => '0.12605005076848',
          '7065' => '-0.231250165869107',
          'two' => 10,
          'bias' => '0.0488006401349257',
          '601' => '-2.32940902258125'
        },
        '6083' => {
          '14941' => '0.872373519036789',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.8075566236214',
          '4920' => '0.696863027294279',
          '4639' => '-0.774208687257148',
          'two' => '-1.01833251924781',
          'bias' => '0.323495560023782'
        },
        '1863' => {
          'one' => '0.416736701810705',
          '4639' => '0.92589482452091',
          'two' => '-0.0163541192303563',
          'bias' => 0,
          '601' => '0.518989863496797'
        },
        'one' => {}
      }
    },
    '16148' => {
      'fitness' => '0.748672296730443',
      'topology' => 12370,
      'nodes' => {
        'one' => {},
        '549' => {
          'one' => '-1.16722106754512',
          'bias' => 0,
          '3130' => '0.139687066047136'
        },
        '3130' => {
          'bias' => '0.959639515084801'
        },
        'output' => {
          '549' => '5.22729849337435',
          'two' => '-2.38069129120954',
          'bias' => '1.11934881507844'
        },
        'bias' => {},
        'two' => {}
      },
      'elite' => 1,
      'id' => 16148
    },
    '16095' => {
      'fitness' => '0.749953533440705',
      'topology' => 15653,
      'nodes' => {
        '2016' => {
          'two' => '-0.849703792546167',
          'bias' => '0.894854484760917'
        },
        '4639' => {
          'two' => '0.9670509098087',
          'bias' => 0
        },
        '4920' => {
          '4639' => '0.943597909303996',
          'bias' => 0
        },
        'output' => {
          '1863' => '-1.28491553943036',
          'one' => '3.77301971610763',
          '4639' => '-0.130755200010055',
          'bias' => '0.0781168395462866',
          'two' => '3.9352972100842',
          '601' => '-0.553957534143827'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          '2016' => '0.279298318746205',
          'one' => '-0.683615446607632',
          '4920' => '0.727840960217013',
          '4639' => '0.192490909306895',
          'bias' => 0
        },
        '1863' => {
          'one' => '0.380639066296856',
          '4639' => '0.66086535582586',
          'bias' => 0,
          'two' => '-0.0573982761477687',
          '601' => '1.06353068834619'
        },
        'one' => {}
      },
      'elite' => 1,
      'id' => 16095
    },
    '15956' => {
      'fitness' => '0.749993672470984',
      'topology' => 10622,
      'id' => 15956,
      'elite' => 1,
      'nodes' => {
        'one' => {},
        '1863' => {
          'two' => '-0.165548280507315',
          'bias' => 0,
          '601' => '0.77362383391275'
        },
        '2665' => {
          '1863' => '1.22127021608853',
          'bias' => 0
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '4.80593526967544',
          '2665' => '-2.53522830143552',
          'two' => '4.56559334929907',
          'bias' => '0.0667863482932033',
          '601' => '0.185699645923906'
        },
        '601' => {
          'bias' => '0.716182509385334'
        }
      }
    },
    '16151' => {
      'fitness' => '0.500000003988709',
      'topology' => 15440,
      'id' => 16151,
      'elite' => 0,
      'nodes' => {
        '14941' => {
          'bias' => '0.969975979169662'
        },
        '4920' => {
          'one' => '0.938981328246091',
          '4639' => '0.730874276191017',
          'two' => '-0.263323031782794',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.756890751983624',
          'bias' => 0,
          'two' => '1.12230230262831'
        },
        '7065' => {
          '4639' => '0.846276977294643',
          'bias' => 0
        },
        'two' => {},
        'bias' => {},
        'output' => {
          '1863' => '-4.02504960499814',
          '4920' => '0.148038340727866',
          '7065' => '-0.254823330286521',
          'two' => 10,
          'bias' => '0.0525574474184348',
          '601' => '-2.1953581303166'
        },
        '6083' => {
          '14941' => '0.965441658664882',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.64513030772989',
          '4920' => '0.662697074673099',
          '4639' => '-0.763353947231596',
          'two' => '-1.01167174561698',
          'bias' => '0.326545121176972'
        },
        '1863' => {
          'one' => '0.380004593395456',
          '4639' => '0.958887283880007',
          'two' => '-0.0181178518012161',
          'bias' => 0,
          '601' => '0.562940490332601'
        },
        'one' => {}
      }
    },
    '16158' => {
      'fitness' => '0.749999999999888',
      'topology' => 14505,
      'nodes' => {
        '4639' => {
          'one' => '-0.480728360225916',
          'two' => '0.718246699412822',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.863718168236075',
          '4639' => '0.543113706793953',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.317095526744358'
        },
        '6083' => {
          'bias' => '1.01620178195346'
        },
        'output' => {
          '1863' => '-3.84170309803498',
          'one' => '8.97263647953589',
          '4920' => '0.166180950823429',
          '4639' => '-0.24551917231283',
          'bias' => '0.0504567776592935',
          'two' => 10,
          '601' => '-2.12573590494441'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.53132503460888',
          '4920' => '0.684551451900388',
          'bias' => '0.254624418454323',
          'two' => '-1.12833044500208'
        },
        '1863' => {
          '4639' => '1.31196769741668',
          '6083' => '-0.347289482428568',
          'bias' => 0,
          'two' => '-0.0199612719707992',
          '601' => '0.58938652876428'
        },
        'one' => {}
      },
      'elite' => 0,
      'id' => 16158
    },
    '16153' => {
      'fitness' => '0.74999999999988',
      'topology' => 15963,
      'id' => 16153,
      'elite' => 0,
      'nodes' => {
        '15400' => {
          '4639' => '0.366601465407174',
          'bias' => '1.07548501824575'
        },
        '4920' => {
          'one' => '0.75808653540923',
          '4639' => '0.745598937343155',
          'two' => '-0.244195341488027',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.715508343765231',
          'bias' => 0,
          'two' => '0.80222016402466'
        },
        '7065' => {
          '15400' => 0,
          '4639' => '0.932575801564959',
          'bias' => 0
        },
        'two' => {},
        'bias' => {},
        'output' => {
          '1863' => '-3.51032866129983',
          'one' => '9.57763513033916',
          '15005' => '0.185290747126393',
          '7065' => '-0.328050711558028',
          'two' => '9.34609111647709',
          'bias' => '0.0519573841571',
          '601' => '-2.58101885675739'
        },
        '6083' => {
          '4639' => '0.507421069646917',
          'bias' => '0.98410723064407'
        },
        '601' => {
          'one' => '-1.50064979699743',
          '4920' => '0.836891650409091',
          '4639' => '-0.884585890388287',
          'two' => '-1.03278796654711',
          'bias' => '0.218584229896432'
        },
        '1863' => {
          'one' => '0.443084145180663',
          '4639' => '0.938692318159401',
          'two' => '-0.018374267518062',
          'bias' => 0,
          '601' => '0.743466164484229'
        },
        'one' => {},
        '15005' => {
          '4920' => '0.996469155119996',
          'bias' => 0
        }
      }
    },
    '16177' => {
      'fitness' => '0.749999999988844',
      'topology' => 5970,
      'nodes' => {
        '4639' => {
          'two' => '1.32030224852881',
          'bias' => 0
        },
        '4920' => {
          'one' => '-0.760199343369218',
          '4639' => '1.51879957507953',
          'bias' => 0
        },
        'output' => {
          '1863' => '-2.9450991747906',
          'one' => '9.79759650725988',
          '4639' => '-0.20785636061795',
          '4920' => '-1.37199713363109',
          'bias' => '0.0667254119103062',
          'two' => 10,
          '601' => '-0.737211300268103'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.26822427045454',
          '4920' => '0.612243107388409',
          'bias' => '0.269658874419856'
        },
        '1863' => {
          'one' => '0.38961117093688',
          '4639' => '0.404197396227757',
          'bias' => 0,
          'two' => '-0.0718071876030817',
          '601' => '0.630165332261681'
        },
        'one' => {}
      },
      'elite' => 0,
      'id' => 16177
    },
    '16097' => {
      'fitness' => '0.749999999999916',
      'topology' => 14505,
      'nodes' => {
        '4639' => {
          'one' => '-0.480728360225916',
          'two' => '0.718246699412822',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.863718168236075',
          '4639' => '0.543113706793953',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.317095526744358'
        },
        '6083' => {
          'bias' => '1.01620178195346'
        },
        'output' => {
          '1863' => '-3.84170309803498',
          'one' => '8.97263647953589',
          '4920' => '0.166180950823429',
          '4639' => '-0.24551917231283',
          'bias' => '0.0504567776592935',
          'two' => 10,
          '601' => '-2.35019234843579'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.53132503460888',
          '4920' => '0.684551451900388',
          'bias' => '0.254624418454323',
          'two' => '-1.12833044500208'
        },
        '1863' => {
          '4639' => '1.31196769741668',
          '6083' => '-0.347289482428568',
          'bias' => 0,
          'two' => '-0.0199612719707992',
          '601' => '0.58938652876428'
        },
        'one' => {}
      },
      'elite' => 1,
      'id' => 16097
    },
    '16164' => {
      'fitness' => '0.749999999999967',
      'topology' => 15589,
      'id' => 16164,
      'elite' => 0,
      'nodes' => {
        '14941' => {
          'two' => '0.110525690082902',
          'bias' => '0.99455733043835'
        },
        '4920' => {
          'one' => '0.837200703485629',
          '4639' => '0.795688149456735',
          'two' => '-0.247984872516426',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.756946947968286',
          'bias' => 0,
          'two' => '0.975792013553024'
        },
        '7065' => {
          '4639' => '0.855885304395304',
          'bias' => 0,
          '6083' => '-0.322616597289138',
          '601' => '0.50009627842417'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => 10,
          '1863' => '-3.92258154026198',
          '4920' => '0.143831810533909',
          '7065' => '-0.267379496304519',
          'two' => 10,
          'bias' => '0.0551540178417586',
          '601' => '-2.3961702032696'
        },
        '6083' => {
          '14941' => '0.95542436664214',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.77828300808483',
          '4920' => '0.635173241834085',
          '4639' => '-0.751192123736269',
          'two' => '-1.0204010526221',
          'bias' => '0.293980940120308'
        },
        '1863' => {
          'one' => '0.361283297056354',
          '4639' => '1.01114840302202',
          'two' => '-0.0198344117653077',
          'bias' => 0,
          '601' => '0.580639210432434'
        },
        'one' => {}
      }
    },
    '16103' => {
      'fitness' => '0.749999999999842',
      'topology' => 14309,
      'id' => 16103,
      'elite' => 1,
      'nodes' => {
        '4920' => {
          'one' => '0.723896086043379',
          '4639' => '0.953541931510471',
          'two' => '-0.29177304432873',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.614798649620842',
          'bias' => 0,
          'two' => '0.644961190956613'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '8.78602965032313',
          '1863' => '-3.52440480333881',
          '4639' => '-0.254051009986005',
          '4920' => '0.225673191282992',
          'two' => 10,
          'bias' => '0.051373114764595',
          '601' => '-2.42095008212947'
        },
        '6083' => {
          'one' => '-0.479145096410828',
          '4639' => '-0.584097763012059',
          'bias' => '1.24962209235472'
        },
        '601' => {
          'one' => '-1.23308747292669',
          '4920' => '0.665202943590214',
          'two' => '-1.08031105306719',
          'bias' => '0.237129930015885'
        },
        '1863' => {
          'one' => '0.320771366548245',
          '4639' => '1.05594508105482',
          'two' => '-0.0218707094630817',
          'bias' => 0,
          '6083' => '-0.213151486264592',
          '601' => '0.670171219103298'
        },
        'one' => {}
      }
    },
    '16145' => {
      'fitness' => '0.749999999999802',
      'topology' => 15326,
      'id' => 16145,
      'elite' => 1,
      'nodes' => {
        '14941' => {
          'bias' => '0.955223878057281'
        },
        '4920' => {
          'one' => '0.840555535739377',
          '4639' => '0.74529835189222',
          'two' => '-0.29087319444848',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.7206584096366',
          'bias' => 0,
          'two' => '1.02408240789687'
        },
        '7065' => {
          '4639' => '0.785613006326375',
          'bias' => 0
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => 10,
          '1863' => '-3.75906856205432',
          '4920' => '0.165370427844004',
          '7065' => '-0.271611660541111',
          'two' => '9.67725337424673',
          'bias' => '0.0547653081457571',
          '601' => '-2.00726217579481'
        },
        '6083' => {
          '14941' => '0.783155938423414',
          '7065' => '0.943865305275076',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.76967774449626',
          '4920' => '0.651070519499068',
          '4639' => '-0.833259824467983',
          '14941' => '0.576135882420606',
          'two' => '-1.09890300553794',
          'bias' => '0.321445621235546'
        },
        '1863' => {
          'one' => '0.41690815356245',
          '4639' => '0.947754437402546',
          'two' => '-0.0197627171097382',
          'bias' => 0,
          '601' => '0.560003992612271'
        },
        'one' => {}
      }
    },
    '16202' => {
      'fitness' => '0.74991003833691',
      'topology' => 15261,
      'id' => 16202,
      'elite' => 0,
      'nodes' => {
        '4920' => {
          '4639' => '0.748193605554093',
          'bias' => 0,
          '6083' => 0
        },
        '4639' => {
          'bias' => 0,
          'two' => '0.844810057575412'
        },
        '6083' => {
          'bias' => '0.964905897698156'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '3.43050967304345',
          '1863' => '-1.20073988662792',
          'two' => '3.5853423928072',
          'bias' => '0.0661023763687548',
          '601' => '-0.662135495098946'
        },
        '601' => {
          'one' => '-0.804923118144999',
          '4920' => '0.785660412027397',
          'bias' => '0.298406115698083'
        },
        '1863' => {
          'one' => '0.496296307620057',
          'two' => '-0.0497921462826677',
          'bias' => 0,
          '601' => '0.882920568887861'
        },
        'one' => {}
      }
    },
    '16176' => {
      'fitness' => '0.749999999999952',
      'topology' => 15837,
      'id' => 16176,
      'elite' => 0,
      'nodes' => {
        '14941' => {
          'bias' => '0.793241290032089'
        },
        '4920' => {
          'one' => '0.864223915586946',
          '4639' => '0.687822589559606',
          'two' => '-0.253600896050837',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.793078328432827',
          'bias' => 0,
          'two' => '0.907492633637985'
        },
        '7065' => {
          'one' => '-0.525344885577596',
          '14941' => '-0.0543982820058398',
          '4639' => '0.757331118181392',
          'bias' => 0,
          '601' => '0.641839523124618'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '9.40962373468723',
          '1863' => '-3.64927691001764',
          '4920' => '0.11409416887841',
          '7065' => '-0.229921578693091',
          'two' => 10,
          'bias' => '0.0521970154702684',
          '601' => '-2.42388199360487'
        },
        '6083' => {
          '14941' => '0.813554282192111',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.67337358099817',
          '4920' => '0.649650270934088',
          '4639' => '-0.707949047610834',
          'two' => '-0.94844626152573',
          'bias' => '0.303274537503805'
        },
        '1863' => {
          'one' => '0.44229197782748',
          '4639' => '0.853141320566975',
          'two' => '-0.0167047391013406',
          'bias' => 0,
          '601' => '0.549158277066872'
        },
        'one' => {}
      }
    },
    '16183' => {
      'fitness' => '0.74999999999997',
      'topology' => 15715,
      'id' => 16183,
      'elite' => 0,
      'nodes' => {
        '14941' => {
          '15714' => '1.04749914969966',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.924931603035461',
          '4639' => '0.68068504884433',
          'two' => '-0.238870659791816',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.731630767616259',
          'bias' => 0,
          'two' => '0.945733305333831'
        },
        '7065' => {
          '4639' => '0.805103362161658',
          'bias' => 0,
          '6083' => '-0.323173239125185',
          '601' => '0.550501653490412'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => 10,
          '1863' => '-3.92295024243986',
          '4920' => '0.155112462455947',
          '7065' => '-0.277696531697446',
          'two' => 10,
          'bias' => '0.0483366914975657',
          '601' => '-2.48320411743114'
        },
        '6083' => {
          '14941' => '0.963256163234184',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.56611463526347',
          '4920' => '0.703204729556484',
          '4639' => '-0.775934578443355',
          'two' => '-0.931272048626625',
          'bias' => '0.297538127144574'
        },
        '1863' => {
          'one' => '0.404002742198397',
          '4639' => '0.871622366353709',
          'two' => '-0.0193792016236484',
          'bias' => 0,
          '601' => '0.546883228987512'
        },
        'one' => {},
        '15714' => {
          'bias' => '1.02690192023271'
        }
      }
    },
    '16204' => {
      'fitness' => '0.749801455886661',
      'topology' => 14877,
      'nodes' => {
        '1863' => {
          '3880' => '0.494891152383502',
          'bias' => 0,
          'two' => '-0.0689150673458593',
          '601' => '0.641431503388947'
        },
        'one' => {},
        '3880' => {
          'one' => '0.741538484145932',
          'two' => '-0.405172927236954',
          'bias' => 0
        },
        'output' => {
          '1863' => '-1.65063867361068',
          'one' => '3.45097176059475',
          'bias' => '0.0410599809633893',
          'two' => '3.14659959864522'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          '3880' => '-0.120763420529417',
          'one' => '-0.159505766280339',
          'bias' => '0.361755132061988',
          'two' => '0.642972399419093'
        }
      },
      'elite' => 0,
      'id' => 16204
    },
    '16180' => {
      'fitness' => '0.74999999999971',
      'topology' => 15362,
      'nodes' => {
        '4639' => {
          'one' => '-0.729649442371222',
          'two' => '0.804272493369047',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.838320586018533',
          '4639' => '0.91362778834797',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.229934293898837'
        },
        '7065' => {
          '4639' => '0.792193094038682',
          'bias' => 0
        },
        '6083' => {
          '4639' => '0.558033256974454',
          'bias' => '1.18150747068031'
        },
        'output' => {
          '15005' => '0.171047987235629',
          'one' => '9.99534573490082',
          '1863' => '-4.26715064162879',
          '7065' => '-0.231528404311693',
          'bias' => '0.0485693851967904',
          'two' => 10,
          '601' => '-2.03812263360737'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.44789687879875',
          '4639' => '-0.72991392806102',
          '4920' => '0.810416402846179',
          'bias' => '0.278091031763966',
          'two' => '-1.00500276359172'
        },
        '1863' => {
          'one' => '0.435363718842276',
          '4920' => '0.334833836540761',
          '4639' => '0.910075182999299',
          'bias' => 0,
          'two' => '-0.0231446493810884',
          '601' => '0.701908145584971'
        },
        'one' => {},
        '15005' => {
          '4920' => '1.01957836731467',
          'bias' => 0
        }
      },
      'elite' => 0,
      'id' => 16180
    },
    '16187' => {
      'fitness' => '0.749999999861295',
      'topology' => 9062,
      'nodes' => {
        '1863' => {
          'one' => '-0.363698714721895',
          'bias' => '-1.4320759728346',
          'two' => '2.72860162914371',
          '601' => '-0.651224997129459'
        },
        'one' => {},
        'output' => {
          '1863' => '5.7179166861018',
          'one' => 10,
          'bias' => '-4.38474545662926',
          'two' => '3.1075005991353'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-0.0455430212387701',
          'bias' => '-0.235634525891272'
        }
      },
      'elite' => 0,
      'id' => 16187
    },
    '15664' => {
      'fitness' => '0.749999999999952',
      'topology' => 15006,
      'id' => 15664,
      'elite' => 1,
      'nodes' => {
        '4920' => {
          'one' => '0.830184157349972',
          '4639' => '0.759687702176913',
          'two' => '-0.250960521109716',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.791576326301189',
          'bias' => 0,
          'two' => '0.817003836063886'
        },
        '7065' => {
          '4639' => '0.823797369551354',
          'bias' => 0
        },
        'two' => {},
        'bias' => {},
        'output' => {
          '1863' => '-3.98061330262503',
          'one' => 10,
          '15005' => '0.174985038771674',
          '7065' => '-0.277022226142029',
          'two' => 10,
          'bias' => '0.0512600784596415',
          '601' => '-2.23243790864895'
        },
        '6083' => {
          '4639' => '0.516043012815754',
          'bias' => '1.04495902185915'
        },
        '601' => {
          'one' => '-1.52417915522199',
          '4920' => '0.746703587456477',
          '4639' => '-0.819790786027658',
          'two' => '-0.917618013491675',
          'bias' => '0.253155432738357'
        },
        'one' => {},
        '15005' => {
          '4920' => '0.996061116250089',
          'bias' => 0
        },
        '1863' => {
          'one' => '0.41233057193786',
          '4639' => '0.837204567087668',
          'two' => '-0.0212244242808698',
          'bias' => 0,
          '601' => '0.652150293409306'
        }
      }
    },
    '16188' => {
      'fitness' => '0.749999999450972',
      'topology' => 9062,
      'nodes' => {
        '1863' => {
          'one' => '-0.369265540782854',
          'bias' => '-1.52284929767376',
          'two' => '2.96319245401329',
          '601' => '-0.637570027216546'
        },
        'one' => {},
        'output' => {
          '1863' => '5.45513041623011',
          'one' => 10,
          'bias' => '-3.99475682900533',
          'two' => '3.23274488604521'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-0.0418114025835347',
          'bias' => '-0.214962593968521'
        }
      },
      'elite' => 0,
      'id' => 16188
    },
    '16190' => {
      'fitness' => '0.749639605569711',
      'topology' => 15900,
      'nodes' => {
        '4639' => {
          'two' => '0.958803655996674',
          'bias' => 0
        },
        '4920' => {
          '4639' => '0.720388294941887',
          'bias' => 0
        },
        'output' => {
          '1863' => '-1.02612130954589',
          'one' => '3.78003141053009',
          'bias' => '0.0742721678670978',
          'two' => '3.00323196642587',
          '601' => '-0.402491822372524'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-0.811052028633079',
          '4920' => '0.851385684736687',
          '4639' => '-0.791706790493583',
          'bias' => '0.321460902301577'
        },
        '1863' => {
          'one' => '0.472504228923846',
          '4639' => '0.880354645730367',
          'bias' => 0,
          'two' => '-0.0498225990653222',
          '601' => '0.855552811209959'
        },
        'one' => {}
      },
      'elite' => 0,
      'id' => 16190
    },
    '16117' => {
      'fitness' => '0.749999999999921',
      'topology' => 15362,
      'nodes' => {
        '4639' => {
          'one' => '-0.789059138254083',
          'two' => '0.797392843838522',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.830184157349972',
          '4639' => '0.832787461469161',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.250960521109716'
        },
        '7065' => {
          '4639' => '0.823797369551354',
          'bias' => 0
        },
        '6083' => {
          '4639' => '0.516043012815754',
          'bias' => '1.10358392566837'
        },
        'output' => {
          '15005' => '0.174985038771674',
          'one' => 10,
          '1863' => '-3.98061330262503',
          '7065' => '-0.253192198752137',
          'bias' => '0.0512600784596415',
          'two' => 10,
          '601' => '-2.08793751891109'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.53675125013032',
          '4639' => '-0.760029791163951',
          '4920' => '0.746703587456477',
          'bias' => '0.253155432738357',
          'two' => '-0.973020068257078'
        },
        '1863' => {
          'one' => '0.403453267740469',
          '4920' => '0.370555464327978',
          '4639' => '0.837204567087668',
          'bias' => 0,
          'two' => '-0.0212244242808698',
          '601' => '0.652150293409306'
        },
        'one' => {},
        '15005' => {
          '4920' => '0.996061116250089',
          'bias' => 0
        }
      },
      'elite' => 1,
      'id' => 16117
    },
    '16211' => {
      'fitness' => '0.748672296730443',
      'topology' => 12370,
      'nodes' => {
        'one' => {},
        '549' => {
          'one' => '-1.16722106754512',
          'bias' => 0,
          '3130' => '0.139687066047136'
        },
        '3130' => {
          'bias' => '0.959639515084801'
        },
        'output' => {
          '549' => '5.22729849337435',
          'two' => '-2.38069129120954',
          'bias' => '1.11934881507844'
        },
        'bias' => {},
        'two' => {}
      },
      'elite' => 0,
      'id' => 16211
    },
    '16184' => {
      'fitness' => '0.749999999999286',
      'topology' => 15715,
      'id' => 16184,
      'elite' => 0,
      'nodes' => {
        '14941' => {
          '15714' => '1.14769138773749',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.986889103600368',
          '4639' => '0.618502686584065',
          'two' => '-0.231483188610683',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.66770887326267',
          'bias' => 0,
          'two' => '0.87636213063896'
        },
        '7065' => {
          '4639' => '0.730168248964727',
          'bias' => 0,
          '6083' => '-0.321400116867331',
          '601' => '0.535292183181085'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '9.40799012626424',
          '1863' => '-3.85918662910227',
          '4920' => '0.164501494477388',
          '7065' => '-0.277738897051518',
          'two' => '9.26162890426404',
          'bias' => '0.0479878947622787',
          '601' => '-2.47685063270831'
        },
        '6083' => {
          '14941' => '0.896671146022502',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.42625557986492',
          '4920' => '0.64556234708765',
          '4639' => '-0.781004579621614',
          'two' => '-0.848282682266073',
          'bias' => '0.313299529643539'
        },
        '1863' => {
          'one' => '0.409584114512486',
          '4639' => '0.897400681716846',
          'two' => '-0.0200281417862657',
          'bias' => 0,
          '601' => '0.50351479315919'
        },
        'one' => {},
        '15714' => {
          'bias' => '1.12452610326097'
        }
      }
    },
    '16195' => {
      'fitness' => '0.738202205408361',
      'topology' => 16150,
      'nodes' => {
        '4920' => {
          'one' => '0.399678855756235',
          '4639' => 1,
          'bias' => 0
        },
        '4639' => {
          'one' => '0.752581809101276',
          'two' => 1,
          'bias' => 0
        },
        'output' => {
          '1863' => '-1.11823547443776',
          'one' => '3.49185984168382',
          '4639' => '-0.994089460612003',
          'bias' => '0.074429753902327',
          'two' => '3.15939663495568',
          '601' => '-0.526647115749034'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-0.877804811548979',
          '4920' => '0.86079157493664',
          'bias' => '0.321085511447368'
        },
        'one' => {},
        '1863' => {
          'one' => '0.483752492033583',
          'bias' => 0,
          'two' => '-0.0443270863407186',
          '601' => '0.81906082502257'
        }
      },
      'elite' => 0,
      'id' => 16195
    },
    '16182' => {
      'fitness' => '0.749999999999602',
      'topology' => 15478,
      'id' => 16182,
      'elite' => 0,
      'nodes' => {
        '14941' => {
          'bias' => '1.07430995444216'
        },
        '4920' => {
          'one' => '0.843609965976805',
          '4639' => '0.789947597548379',
          'two' => '-0.247905958420082',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.79046526901692',
          'bias' => 0,
          'two' => '0.951154121883091'
        },
        '7065' => {
          '4639' => '0.705887137223823',
          'bias' => 0,
          '601' => '0.698061450210213'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => 10,
          '1863' => '-3.8403558879774',
          '4920' => '0.142865741640042',
          '7065' => '-0.218042024544212',
          'two' => '9.37810455770962',
          'bias' => '0.0491147074044557',
          '601' => '-2.58065772154138'
        },
        '6083' => {
          '14941' => '0.985112316331937',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.82526856952626',
          '4920' => '0.685005457753206',
          '4639' => '-0.711420010316407',
          'two' => '-0.904120105029641',
          'bias' => '0.336541398752238'
        },
        '1863' => {
          'one' => '0.419179183892092',
          '4639' => '0.947859244485475',
          'two' => '-0.0148916235522126',
          'bias' => 0,
          '601' => '0.50707804835353'
        },
        'one' => {}
      }
    },
    '16205' => {
      'fitness' => '0.74990171015427',
      'topology' => 14877,
      'nodes' => {
        '1863' => {
          '3880' => '0.458025068698533',
          'bias' => 0,
          'two' => '-0.0645518904396352',
          '601' => '0.642195289073082'
        },
        'one' => {},
        '3880' => {
          'one' => '0.68571617893059',
          'two' => '-0.42115121004476',
          'bias' => 0
        },
        'output' => {
          '1863' => '-1.77407464842841',
          'one' => '3.7636247049497',
          'bias' => '0.0393458876276367',
          'two' => '3.42035091557074'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          '3880' => '-0.119118531223033',
          'one' => '-0.145780772041209',
          'bias' => '0.355001145250946',
          'two' => '0.583781269798902'
        }
      },
      'elite' => 0,
      'id' => 16205
    },
    '16168' => {
      'fitness' => '0.74989789023266',
      'topology' => 12871,
      'id' => 16168,
      'elite' => 0,
      'nodes' => {
        '4920' => {
          '4639' => '1.01029685618704',
          'two' => '-0.342198360282235'
        },
        '4639' => {
          'bias' => 0,
          'two' => '0.857482415114366'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '3.77723214355173',
          '1863' => '-1.51420464787406',
          '4920' => '-0.0871654798435009',
          '4639' => '-0.195758725018022',
          'two' => '3.83417473085983',
          'bias' => '0.082916424088329',
          '601' => '-0.454897514682405'
        },
        '601' => {
          'one' => '-0.6078876807474',
          '4920' => '0.723561413839346',
          'bias' => '0.322759281151726'
        },
        '1863' => {
          'one' => '0.501511698722798',
          '4639' => '0.605901440078638',
          '4920' => '0.270766404238416',
          'two' => '-0.0577226675029876',
          'bias' => 0,
          '601' => '1.30378194546944'
        },
        'one' => {}
      }
    },
    '16159' => {
      'fitness' => '0.749999999997472',
      'topology' => 14505,
      'nodes' => {
        '4639' => {
          'one' => '-0.475399001765139',
          'two' => '0.68201094205343',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.851126198560662',
          '4639' => '0.548072687806474',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.291841143458188'
        },
        '6083' => {
          'bias' => '0.925862415922616'
        },
        'output' => {
          '1863' => '-4.06104959956835',
          'one' => '8.07772019271737',
          '4920' => '0.164944275614812',
          '4639' => '-0.235896811090935',
          'bias' => '0.0462851999373003',
          'two' => '9.61760592379794',
          '601' => '-2.38193166117715'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.38011309045246',
          '4920' => '0.699302602614478',
          'bias' => '0.245768539832332',
          'two' => '-1.07098086930565'
        },
        '1863' => {
          '4639' => '1.34931852446569',
          '6083' => '-0.319027955906793',
          'bias' => 0,
          'two' => '-0.0213897356628691',
          '601' => '0.598010524317519'
        },
        'one' => {}
      },
      'elite' => 0,
      'id' => 16159
    },
    '16185' => {
      'fitness' => '0.749999999999886',
      'topology' => 14114,
      'nodes' => {
        '4639' => {
          'one' => '-0.638902688113302',
          'two' => '0.927629888225935',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.851759453453911',
          '4639' => '0.675255238947453',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.255560225769298'
        },
        '6083' => {
          'bias' => '0.956932596230542'
        },
        'output' => {
          '4920' => '0.218704639343872',
          '4639' => '-0.214855144462092',
          '6083' => '0.484604010436996',
          'bias' => '0.0405384053167402',
          'two' => '9.98866227319026',
          '601' => '-2.8233125773832',
          'one' => '9.05345195027613',
          '1863' => '-3.59037218769902'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.47533157990865',
          '4920' => '0.611690941752034',
          'bias' => '0.279881419779531',
          'two' => '-0.955649391868786'
        },
        '1863' => {
          'one' => '0.420148915420318',
          '4639' => '0.900386800394611',
          '6083' => '-0.176067487842335',
          'bias' => 0,
          'two' => '-0.0244946171357634',
          '601' => '0.728533085107138'
        },
        'one' => {}
      },
      'elite' => 0,
      'id' => 16185
    },
    '16209' => {
      'fitness' => '0.749999999999802',
      'topology' => 15326,
      'id' => 16209,
      'elite' => 0,
      'nodes' => {
        '14941' => {
          'bias' => '0.955223878057281'
        },
        '4920' => {
          'one' => '0.840555535739377',
          '4639' => '0.74529835189222',
          'two' => '-0.29087319444848',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.698097719948787',
          'bias' => 0,
          'two' => '1.02408240789687'
        },
        '7065' => {
          '4639' => '0.785613006326375',
          'bias' => 0
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => 10,
          '1863' => '-3.75906856205432',
          '4920' => '0.165370427844004',
          '7065' => '-0.271611660541111',
          'two' => '9.67725337424673',
          'bias' => '0.0547653081457571',
          '601' => '-2.00726217579481'
        },
        '6083' => {
          '14941' => '0.783155938423414',
          '7065' => '0.943865305275076',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.76967774449626',
          '4920' => '0.651070519499068',
          '4639' => '-0.833259824467983',
          '14941' => '0.576135882420606',
          'two' => '-1.09890300553794',
          'bias' => '0.321445621235546'
        },
        '1863' => {
          'one' => '0.41690815356245',
          '4639' => '0.947754437402546',
          'two' => '-0.0197627171097382',
          'bias' => 0,
          '601' => '0.560003992612271'
        },
        'one' => {}
      }
    },
    '16208' => {
      'fitness' => '0.74999999999992',
      'topology' => 16026,
      'nodes' => {
        '15400' => {
          'bias' => '1.0344848371106'
        },
        '4639' => {
          'one' => '-0.767235716175495',
          'two' => '0.774209971395618',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.806341470294778',
          '4639' => '0.745493515732665',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.255910176317909'
        },
        '7065' => {
          '15400' => 0,
          '4639' => '0.928618777750582',
          'bias' => 0
        },
        '6083' => {
          '4639' => '0.459828384905239',
          'bias' => '0.930551170375227'
        },
        'output' => {
          '15005' => '0.175211889320325',
          'one' => 10,
          '1863' => '-3.51731794990499',
          '7065' => '-0.295312779278996',
          'bias' => '0.0586239082929545',
          'two' => '9.84366335826542',
          '601' => '-2.38917903830977'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.58950440177123',
          '4639' => '-0.883490157578649',
          '4920' => '0.867669589257134',
          'bias' => '0.245214121552436',
          'two' => '-0.926268196385409'
        },
        '15005' => {
          '4920' => '1.09714477951367',
          'bias' => 0
        },
        'one' => {},
        '1863' => {
          'one' => '0.430699266543939',
          '4639' => '0.816869297585963',
          '7065' => '-0.106284113471843',
          'bias' => 0,
          'two' => '-0.0188062545341709',
          '601' => '0.642085377957214'
        }
      },
      'elite' => 0,
      'id' => 16208
    },
    '16169' => {
      'fitness' => '0.749999999422074',
      'topology' => 10443,
      'nodes' => {
        '4639' => {
          'two' => '1.11595904813886',
          'bias' => 0
        },
        '4920' => {
          '4639' => '0.591194628667654',
          'bias' => 0
        },
        'output' => {
          '1863' => '-3.26276800555068',
          'one' => '8.22665952870093',
          '4639' => '-0.102293434575215',
          '4920' => '-0.442481840980792',
          'bias' => '0.0591499626147604',
          'two' => '8.29822654718356',
          '601' => '-0.510617999255357'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-0.927843340462494',
          '4639' => '-0.575667683908536',
          '4920' => '0.304353010526961',
          'bias' => '0.394883829732671'
        },
        '1863' => {
          'one' => '0.442901882645799',
          '4639' => '0.697148893095542',
          'bias' => 0,
          'two' => '-0.0700442770861456',
          '601' => '1.05633352450603'
        },
        'one' => {}
      },
      'elite' => 0,
      'id' => 16169
    },
    '16206' => {
      'fitness' => '0.749993676839256',
      'topology' => 10622,
      'id' => 16206,
      'elite' => 0,
      'nodes' => {
        'one' => {},
        '1863' => {
          'two' => '-0.165548280507315',
          'bias' => 0,
          '601' => '0.77362383391275'
        },
        '2665' => {
          '1863' => '1.22127021608853',
          'bias' => 0
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '4.80593526967544',
          '2665' => '-2.53522830143552',
          'two' => '4.56559334929907',
          'bias' => '0.0679548606118852',
          '601' => '0.185699645923906'
        },
        '601' => {
          'bias' => '0.716182509385334'
        }
      }
    },
    '16193' => {
      'fitness' => '0.749999999999973',
      'topology' => 15401,
      'nodes' => {
        '15400' => {
          'bias' => '0.936670003969818'
        },
        '4639' => {
          'one' => '-0.708782047630469',
          'two' => '0.794888017621053',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.768382065120033',
          '4639' => '0.694002128552999',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.233554893584987'
        },
        '7065' => {
          '15400' => 0,
          '4639' => '0.906891060463882',
          'bias' => 0
        },
        '6083' => {
          '4639' => '0.494467940529544',
          'bias' => '0.972409227409902'
        },
        'output' => {
          '15005' => '0.207872860444669',
          'one' => 10,
          '1863' => '-3.90916408092117',
          '7065' => '-0.278976699735253',
          'bias' => '0.058641142037788',
          'two' => 10,
          '601' => '-2.54492288003864'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.51930426187057',
          '4639' => '-0.794717029537337',
          '4920' => '0.788960073555388',
          'bias' => '0.227922108991647',
          'two' => '-0.89518050060115'
        },
        '15005' => {
          '4920' => '0.922022188875977',
          'bias' => 0
        },
        'one' => {},
        '1863' => {
          'one' => '0.458672322127919',
          '4639' => '0.813444678729258',
          'bias' => 0,
          'two' => '-0.021940274256734',
          '601' => '0.650216855146504'
        }
      },
      'elite' => 0,
      'id' => 16193
    },
    '16128' => {
      'fitness' => '0.749786885167564',
      'topology' => 15900,
      'nodes' => {
        '4639' => {
          'two' => '0.892301063865834',
          'bias' => 0
        },
        '4920' => {
          '4639' => '0.798721000577184',
          'bias' => 0
        },
        'output' => {
          '1863' => '-1.10949553549857',
          'one' => '3.60780348257894',
          'bias' => '0.0711828354012376',
          'two' => '3.15135084737426',
          '601' => '-0.438704305655747'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-0.853245940751012',
          '4920' => '0.804285443063132',
          '4639' => '-0.813434797888388',
          'bias' => '0.32440410088749'
        },
        '1863' => {
          'one' => '0.523688939852903',
          '4639' => '0.816823503664859',
          'bias' => 0,
          'two' => '-0.0467046184334436',
          '601' => '0.77946102246837'
        },
        'one' => {}
      },
      'elite' => 1,
      'id' => 16128
    },
    '16130' => {
      'fitness' => '0.749999999999626',
      'topology' => 14041,
      'id' => 16130,
      'elite' => 1,
      'nodes' => {
        '4920' => {
          'one' => '0.913075044845904',
          '4639' => '0.67445560447376',
          'two' => '-0.275828349210611',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.697995006322268',
          'bias' => 0,
          'two' => '0.919105637222358'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '9.60264288363152',
          '1863' => '-3.67534096065341',
          '4639' => '-0.210568358954971',
          '4920' => '0.205641214027951',
          'two' => 10,
          'bias' => '0.0444502907770139',
          '601' => '-2.34213246391214'
        },
        '6083' => {
          'bias' => '0.931344671448865'
        },
        '601' => {
          'one' => '-1.53553722643952',
          '4920' => '0.680071426282656',
          '6083' => '0.0139940247167836',
          'two' => '-0.942854625105398',
          'bias' => '0.238294960435852'
        },
        '1863' => {
          'one' => '0.423171622469618',
          '4639' => '0.917970696065767',
          'two' => '-0.0226897827944371',
          'bias' => 0,
          '6083' => '-0.210310201483896',
          '601' => '0.612023694531412'
        },
        'one' => {}
      }
    },
    '16135' => {
      'fitness' => '0.548751659015342',
      'topology' => 16088,
      'id' => 16135,
      'elite' => 1,
      'nodes' => {
        '981' => {
          'one' => '0.585482914242263',
          'bias' => 0,
          'two' => 1
        },
        'one' => {},
        '1863' => {
          'one' => '0.488585053632672',
          'two' => '-0.0443270863407186',
          'bias' => 0,
          '601' => '0.88316747995409'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          '981' => '3.14927581474822',
          'one' => '2.99050426066213',
          '1863' => '-0.99503610076787',
          'bias' => '0.0758417247612818',
          '601' => '-0.463509631260245'
        },
        '601' => {
          'two' => '0.825066331637297',
          'bias' => '0.349379786981963'
        }
      }
    },
    '16196' => {
      'fitness' => '0.737411853596985',
      'topology' => 16150,
      'nodes' => {
        '4920' => {
          'one' => '0.374758431166968',
          '4639' => '1.02646414491726',
          'bias' => 0
        },
        '4639' => {
          'one' => '0.766310989819797',
          'two' => '0.955710182599741',
          'bias' => 0
        },
        'output' => {
          '1863' => '-1.07487943540146',
          'one' => '3.38483222909984',
          '4639' => '-1.0077965880616',
          'bias' => '0.0805860502626203',
          'two' => '3.1603908415197',
          '601' => '-0.561677302234119'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-0.910387745604536',
          '4920' => '0.841682192868517',
          'bias' => '0.348421912460581'
        },
        'one' => {},
        '1863' => {
          'one' => '0.510516660399139',
          'bias' => 0,
          'two' => '-0.0465712331791081',
          '601' => '0.854519480081386'
        }
      },
      'elite' => 0,
      'id' => 16196
    },
    '16155' => {
      'fitness' => '0.749657687596063',
      'topology' => 14346,
      'id' => 16155,
      'elite' => 0,
      'nodes' => {
        '2016' => {
          'bias' => '0.766183181203182',
          'two' => '-0.718748912581069'
        },
        '4920' => {
          '4639' => '0.831373333706713',
          'bias' => 0
        },
        '4639' => {
          'bias' => 0,
          'two' => '0.672076495020637'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '2.91004610960306',
          '1863' => '-1.06125310852517',
          '4639' => '-0.127209183608039',
          'two' => '3.0968523491272',
          'bias' => '0.0707798166802139',
          '601' => '-0.482013363083962'
        },
        '601' => {
          '2016' => '0.2454244358333',
          'one' => '-0.83876320447603',
          '4920' => '0.721321170821591',
          'two' => '0.205143645066358',
          'bias' => 0
        },
        '1863' => {
          'one' => '0.288320445085169',
          '4639' => '0.866997138012674',
          'two' => '-0.0462824769381242',
          'bias' => 0,
          '601' => '0.952608993373806'
        },
        'one' => {}
      }
    },
    '16175' => {
      'fitness' => '0.749999999999956',
      'topology' => 15837,
      'id' => 16175,
      'elite' => 0,
      'nodes' => {
        '14941' => {
          'bias' => '0.870617382773356'
        },
        '4920' => {
          'one' => '0.885328459665327',
          '4639' => '0.74818269290369',
          'two' => '-0.26328696396865',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.813190399667706',
          'bias' => 0,
          'two' => '0.922952418267393'
        },
        '7065' => {
          'one' => '-0.480080803715552',
          '14941' => '-0.0583717664415744',
          '4639' => '0.772105773171098',
          'bias' => 0,
          '601' => '0.589004279822695'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '9.70662371456309',
          '1863' => '-3.69581600195527',
          '4920' => '0.12605005076848',
          '7065' => '-0.231250165869107',
          'two' => 10,
          'bias' => '0.0488006401349257',
          '601' => '-2.32940902258125'
        },
        '6083' => {
          '14941' => '0.872373519036789',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.8075566236214',
          '4920' => '0.696863027294279',
          '4639' => '-0.774208687257148',
          'two' => '-1.01833251924781',
          'bias' => '0.323495560023782'
        },
        '1863' => {
          'one' => '0.416736701810705',
          '4639' => '0.92589482452091',
          'two' => '-0.0163541192303563',
          'bias' => 0,
          '601' => '0.518989863496797'
        },
        'one' => {}
      }
    },
    '16054' => {
      'fitness' => '0.749999999989647',
      'topology' => 5970,
      'nodes' => {
        '4639' => {
          'two' => '1.32030224852881',
          'bias' => 0
        },
        '4920' => {
          'one' => '-0.760199343369218',
          '4639' => '1.51879957507953',
          'bias' => 0
        },
        'output' => {
          '1863' => '-2.83071441546955',
          'one' => '9.79759650725988',
          '4639' => '-0.20785636061795',
          '4920' => '-1.37199713363109',
          'bias' => '0.0667254119103062',
          'two' => 10,
          '601' => '-0.737211300268103'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.26822427045454',
          '4920' => '0.612243107388409',
          'bias' => '0.269658874419856'
        },
        '1863' => {
          'one' => '0.38961117093688',
          '4639' => '0.404197396227757',
          'bias' => 0,
          'two' => '-0.0718071876030817',
          '601' => '0.630165332261681'
        },
        'one' => {}
      },
      'elite' => 1,
      'id' => 16054
    },
    '16173' => {
      'fitness' => '0.749956895738211',
      'topology' => 13913,
      'id' => 16173,
      'elite' => 0,
      'nodes' => {
        '2016' => {
          'bias' => '0.966447713167801'
        },
        '4920' => {
          '4639' => '0.923009708200735',
          'bias' => 0
        },
        '4639' => {
          'bias' => 0,
          'two' => '0.860780481636632'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '4.79043605673986',
          '1863' => '-1.28303367384499',
          'two' => '4.27196349244991',
          'bias' => '0.0434223869643894',
          '601' => '-0.514742246807809'
        },
        '601' => {
          '2016' => '0.338261859451856',
          'one' => '-0.817421682815118',
          '4920' => '1.25519488202725',
          'bias' => 0
        },
        '1863' => {
          'one' => '0.398788559091019',
          'two' => '-0.0502115470515555',
          'bias' => 0,
          '601' => '0.861416227613597'
        },
        'one' => {}
      }
    },
    '16120' => {
      'fitness' => '0.749999999999962',
      'topology' => 15478,
      'id' => 16120,
      'elite' => 1,
      'nodes' => {
        '14941' => {
          'bias' => '1.00199445005898'
        },
        '4920' => {
          'one' => '0.921729632751144',
          '4639' => '0.77412759067162',
          'two' => '-0.24898724807452',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.772039605430058',
          'bias' => 0,
          'two' => '0.880319372766154'
        },
        '7065' => {
          '4639' => '0.708361059939282',
          'bias' => 0,
          '601' => '0.63529443389206'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => 10,
          '1863' => '-3.97507330753409',
          '4920' => '0.143153098989579',
          '7065' => '-0.232051060311991',
          'two' => 10,
          'bias' => '0.0480206339594631',
          '601' => '-2.42271780532361'
        },
        '6083' => {
          '14941' => '0.921156595343108',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.72422578787602',
          '4920' => '0.653535106812237',
          '4639' => '-0.732232883661773',
          'two' => '-0.960957031257227',
          'bias' => '0.353565708672801'
        },
        '1863' => {
          'one' => '0.44806741993128',
          '4639' => '0.890628149165944',
          'two' => '-0.0157607723127472',
          'bias' => 0,
          '601' => '0.477716979512454'
        },
        'one' => {}
      }
    },
    '16139' => {
      'fitness' => '0.749910038716147',
      'topology' => 15261,
      'id' => 16139,
      'elite' => 1,
      'nodes' => {
        '4920' => {
          '4639' => '0.748193605554093',
          'bias' => 0,
          '6083' => 0
        },
        '4639' => {
          'bias' => 0,
          'two' => '0.817771823319366'
        },
        '6083' => {
          'bias' => '0.964905897698156'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '3.43050967304345',
          '1863' => '-1.20073988662792',
          'two' => '3.5853423928072',
          'bias' => '0.0661023763687548',
          '601' => '-0.662135495098946'
        },
        '601' => {
          'one' => '-0.804923118144999',
          '4920' => '0.785660412027397',
          'bias' => '0.298406115698083'
        },
        '1863' => {
          'one' => '0.496296307620057',
          'two' => '-0.0497921462826677',
          'bias' => 0,
          '601' => '0.882920568887861'
        },
        'one' => {}
      }
    },
    '16174' => {
      'fitness' => '0.749978866555623',
      'topology' => 13913,
      'id' => 16174,
      'elite' => 0,
      'nodes' => {
        '2016' => {
          'bias' => '1.0041560191007'
        },
        '4920' => {
          '4639' => '0.979314791170067',
          'bias' => 0
        },
        '4639' => {
          'bias' => 0,
          'two' => '0.806774301739839'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '5.00536323603925',
          '1863' => '-1.39763842159267',
          'two' => '4.22573904115676',
          'bias' => '0.045861872365794',
          '601' => '-0.56018750481092'
        },
        '601' => {
          '2016' => '0.333268015368456',
          'one' => '-0.891433216386276',
          '4920' => '1.21591522055204',
          'bias' => 0
        },
        '1863' => {
          'one' => '0.400039952957985',
          'two' => '-0.0527203389834214',
          'bias' => 0,
          '601' => '0.919965816447243'
        },
        'one' => {}
      }
    },
    '16102' => {
      'fitness' => '0.749999999999967',
      'topology' => 15589,
      'id' => 16102,
      'elite' => 1,
      'nodes' => {
        '14941' => {
          'two' => '0.110525690082902',
          'bias' => '0.99455733043835'
        },
        '4920' => {
          'one' => '0.837200703485629',
          '4639' => '0.795688149456735',
          'two' => '-0.247984872516426',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.756946947968286',
          'bias' => 0,
          'two' => '0.975792013553024'
        },
        '7065' => {
          '4639' => '0.855885304395304',
          'bias' => 0,
          '6083' => '-0.322616597289138',
          '601' => '0.50009627842417'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => 10,
          '1863' => '-3.92258154026198',
          '4920' => '0.143831810533909',
          '7065' => '-0.267379496304519',
          'two' => 10,
          'bias' => '0.0551540178417586',
          '601' => '-2.3961702032696'
        },
        '6083' => {
          '14941' => '0.95542436664214',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.77828300808483',
          '4920' => '0.635173241834085',
          '4639' => '-0.751192123736269',
          'two' => '-1.0204010526221',
          'bias' => '0.293980940120308'
        },
        '1863' => {
          'one' => '0.361283297056354',
          '4639' => '1.01114840302202',
          'two' => '-0.0198344117653077',
          'bias' => 0,
          '601' => '0.580639210432434'
        },
        'one' => {}
      }
    },
    '16111' => {
      'fitness' => '0.749956895738211',
      'topology' => 13913,
      'id' => 16111,
      'elite' => 1,
      'nodes' => {
        '2016' => {
          'bias' => '0.966447713167801'
        },
        '4920' => {
          '4639' => '0.923009708200735',
          'bias' => 0
        },
        '4639' => {
          'bias' => 0,
          'two' => '0.860780481636632'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '4.79043605673986',
          '1863' => '-1.28303367384499',
          'two' => '4.27196349244991',
          'bias' => '0.0434223869643894',
          '601' => '-0.514742246807809'
        },
        '601' => {
          '2016' => '0.338261859451856',
          'one' => '-0.817421682815118',
          '4920' => '1.25519488202725',
          'bias' => 0
        },
        '1863' => {
          'one' => '0.398788559091019',
          'two' => '-0.0502115470515555',
          'bias' => 0,
          '601' => '0.861416227613597'
        },
        'one' => {}
      }
    },
    '16156' => {
      'fitness' => '0.749957471940443',
      'topology' => 15653,
      'nodes' => {
        '2016' => {
          'two' => '-0.849703792546167',
          'bias' => '0.894854484760917'
        },
        '4639' => {
          'two' => '0.9670509098087',
          'bias' => 0
        },
        '4920' => {
          '4639' => '0.943597909303996',
          'bias' => 0
        },
        'output' => {
          '1863' => '-1.28491553943036',
          'one' => '3.77301971610763',
          '4639' => '-0.130755200010055',
          'bias' => '0.0781168395462866',
          'two' => '4.0515094679287',
          '601' => '-0.553957534143827'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          '2016' => '0.279298318746205',
          'one' => '-0.683615446607632',
          '4920' => '0.727840960217013',
          '4639' => '0.192490909306895',
          'bias' => 0
        },
        '1863' => {
          'one' => '0.380639066296856',
          '4639' => '0.66086535582586',
          'bias' => 0,
          'two' => '-0.0573982761477687',
          '601' => '1.06353068834619'
        },
        'one' => {}
      },
      'elite' => 0,
      'id' => 16156
    },
    '16061' => {
      'fitness' => '0.749999999999862',
      'topology' => 14114,
      'nodes' => {
        '4639' => {
          'one' => '-0.638902688113302',
          'two' => '0.927629888225935',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.851759453453911',
          '4639' => '0.675255238947453',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.255560225769298'
        },
        '6083' => {
          'bias' => '0.956932596230542'
        },
        'output' => {
          '4920' => '0.218704639343872',
          '4639' => '-0.214855144462092',
          '6083' => '0.484604010436996',
          'bias' => '0.0405384053167402',
          'two' => '9.98866227319026',
          '601' => '-2.7694292802136',
          'one' => '9.05345195027613',
          '1863' => '-3.59037218769902'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.47533157990865',
          '4920' => '0.611690941752034',
          'bias' => '0.279881419779531',
          'two' => '-0.955649391868786'
        },
        '1863' => {
          'one' => '0.420148915420318',
          '4639' => '0.900386800394611',
          '6083' => '-0.176067487842335',
          'bias' => 0,
          'two' => '-0.0244946171357634',
          '601' => '0.728533085107138'
        },
        'one' => {}
      },
      'elite' => 1,
      'id' => 16061
    },
    '16160' => {
      'fitness' => '0.749999999999956',
      'topology' => 15776,
      'nodes' => {
        '4639' => {
          'one' => '-0.813190399667706',
          'two' => '0.922952418267393',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.834609729802492',
          '4639' => '0.74818269290369',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.26328696396865'
        },
        '14941' => {
          'bias' => '0.913127090586547'
        },
        '7065' => {
          '4639' => '0.772105773171098',
          '14941' => '-0.0583717664415744',
          'bias' => 0,
          '601' => '0.584956499672433'
        },
        '6083' => {
          '14941' => '0.872373519036789',
          'bias' => 0
        },
        'output' => {
          '1863' => '-3.69581600195527',
          'one' => '9.70662371456309',
          '4920' => '0.139883345192798',
          '7065' => '-0.251142112999573',
          'bias' => '0.0488006401349257',
          'two' => 10,
          '601' => '-2.32940902258125'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.8075566236214',
          '4639' => '-0.774208687257148',
          '4920' => '0.696863027294279',
          'bias' => '0.323495560023782',
          'two' => '-1.01833251924781'
        },
        'one' => {},
        '1863' => {
          'one' => '0.416736701810705',
          '4639' => '0.92589482452091',
          'bias' => 0,
          'two' => '-0.0163541192303563',
          '601' => '0.526396188070477'
        }
      },
      'elite' => 0,
      'id' => 16160
    },
    '16025' => {
      'fitness' => '0.749999999999972',
      'topology' => 16026,
      'nodes' => {
        '15400' => {
          'bias' => '1.01522511039501'
        },
        '4639' => {
          'one' => '-0.740846112100489',
          'two' => '0.849596772657647',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.764677505696626',
          '4639' => '0.720816089471203',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.254259080461883'
        },
        '7065' => {
          '15400' => 0,
          '4639' => '0.898038384478704',
          'bias' => 0
        },
        '6083' => {
          '4639' => '0.473230261888713',
          'bias' => '0.958944098191'
        },
        'output' => {
          '15005' => '0.193298957142422',
          'one' => 10,
          '1863' => '-3.88250583485404',
          '7065' => '-0.298767761863803',
          'bias' => '0.0547087175929212',
          'two' => 10,
          '601' => '-2.39968738852891'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.5516835235558',
          '4639' => '-0.820424634347233',
          '4920' => '0.805282860821832',
          'bias' => '0.240516539098082',
          'two' => '-0.972193894956376'
        },
        '15005' => {
          '4920' => '1.00233861630301',
          'bias' => 0
        },
        'one' => {},
        '1863' => {
          'one' => '0.425883061341092',
          '4639' => '0.868812773047928',
          '7065' => '-0.114984991737771',
          'bias' => 0,
          'two' => '-0.0203029006087107',
          '601' => '0.688508801594894'
        }
      },
      'elite' => 1,
      'id' => 16025
    },
    '16098' => {
      'fitness' => '0.749999999999953',
      'topology' => 15776,
      'nodes' => {
        '4639' => {
          'one' => '-0.813190399667706',
          'two' => '0.922952418267393',
          'bias' => 0
        },
        '4920' => {
          'one' => '0.834609729802492',
          '4639' => '0.74818269290369',
          'bias' => 0,
          '6083' => 0,
          'two' => '-0.26328696396865'
        },
        '14941' => {
          'bias' => '0.913127090586547'
        },
        '7065' => {
          '4639' => '0.772105773171098',
          '14941' => '-0.0583717664415744',
          'bias' => 0,
          '601' => '0.584956499672433'
        },
        '6083' => {
          '14941' => '0.872373519036789',
          'bias' => 0
        },
        'output' => {
          '1863' => '-3.69581600195527',
          'one' => '9.70662371456309',
          '4920' => '0.139883345192798',
          '7065' => '-0.231250165869107',
          'bias' => '0.0488006401349257',
          'two' => 10,
          '601' => '-2.32940902258125'
        },
        'bias' => {},
        'two' => {},
        '601' => {
          'one' => '-1.8075566236214',
          '4639' => '-0.774208687257148',
          '4920' => '0.696863027294279',
          'bias' => '0.323495560023782',
          'two' => '-1.01833251924781'
        },
        'one' => {},
        '1863' => {
          'one' => '0.416736701810705',
          '4639' => '0.92589482452091',
          'bias' => 0,
          'two' => '-0.0163541192303563',
          '601' => '0.526396188070477'
        }
      },
      'elite' => 1,
      'id' => 16098
    },
    '16154' => {
      'fitness' => '0.749836322795462',
      'topology' => 14346,
      'id' => 16154,
      'elite' => 0,
      'nodes' => {
        '2016' => {
          'bias' => '0.750837723135875',
          'two' => '-0.695698633916713'
        },
        '4920' => {
          '4639' => '0.809427589735072',
          'bias' => 0
        },
        '4639' => {
          'bias' => 0,
          'two' => '0.718800784936868'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => '3.22784656513704',
          '1863' => '-1.08617278338407',
          '4639' => '-0.123812045651445',
          'two' => '3.35750069040172',
          'bias' => '0.0652577650722912',
          '601' => '-0.518259118639014'
        },
        '601' => {
          '2016' => '0.241073087995759',
          'one' => '-0.763141932703845',
          '4920' => '0.693759928320595',
          'two' => '0.197109783560432',
          'bias' => 0
        },
        '1863' => {
          'one' => '0.306362762318975',
          '4639' => '0.87786367003428',
          'two' => '-0.0492806767940368',
          'bias' => 0,
          '601' => '0.960173453419591'
        },
        'one' => {}
      }
    },
    '16192' => {
      'fitness' => '0.74999999999984',
      'topology' => 14041,
      'id' => 16192,
      'elite' => 0,
      'nodes' => {
        '4920' => {
          'one' => '0.850591733400912',
          '4639' => '0.607292757161652',
          'two' => '-0.283254119286323',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.695697947549279',
          'bias' => 0,
          'two' => '0.991896727996045'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => 10,
          '1863' => '-3.56842888584605',
          '4639' => '-0.193000141123954',
          '4920' => '0.21925824128791',
          'two' => 10,
          'bias' => '0.0485340818809128',
          '601' => '-2.48431622637118'
        },
        '6083' => {
          'bias' => '1.0140575401689'
        },
        '601' => {
          'one' => '-1.40725877608788',
          '4920' => '0.681047577205426',
          '6083' => '0.0136524167080413',
          'two' => '-0.973364215539073',
          'bias' => '0.248355108087151'
        },
        '1863' => {
          'one' => '0.415648475104068',
          '4639' => '0.93971199603667',
          'two' => '-0.0249332773502244',
          'bias' => 0,
          '6083' => '-0.192976863975639',
          '601' => '0.590550471042817'
        },
        'one' => {}
      }
    }
  },
  'topologies' => {
    '5412' => {
      'penalty' => '10.8142849347311',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.74999058823089',
        '0.74999058823089',
        '0.74999058823089',
        '0.74999058823089',
        '0.74999058823089',
        '0.74999058823089',
        '0.749990587643498',
        '0.749990587622351',
        '0.749988289593061',
        '0.749988289593061',
        '0.749988289593061',
        '0.749986875363486',
        '0.749986875363486',
        '0.749986875363486',
        '0.749986875363486',
        '0.7499744297164',
        '0.749969505332375',
        '0.749969505332375',
        '0.749960302112093',
        '0.749960302112093',
        '0.749960302112093',
        '0.749960302112093',
        '0.749960302112093',
        '0.749960302112093',
        '0.749957806521877',
        '0.7499465805639',
        '0.749946249508915',
        '0.749946249508915',
        '0.749946249508915',
        '0.749903051655765',
        '0.749903051655765',
        '0.749903051655765',
        '0.749890747683463',
        '0.749779775289004',
        '0.749662124465088',
        '0.749543247928549',
        '0.749437157524757',
        '0.749437156846389',
        '0.749437156846389',
        '0.749437156846389',
        '0.749436127724676',
        '0.749436127717726',
        '0.749433472267119',
        '0.749433472267119',
        '0.749433443734757',
        '0.749433443734757',
        '0.749433443734757',
        '0.749433443734757',
        '0.749433397045037',
        '0.749290697233895',
        '0.749281270205903',
        '0.74928116440108',
        '0.749281164203684',
        '0.749279603538066',
        '0.749271027630752',
        '0.749269358107679',
        '0.749269358107679',
        '0.749269358107679',
        '0.749266449343967',
        '0.749266449302529',
        '0.749266449302529',
        '0.749266449132654',
        '0.749266449132654',
        '0.749266092324661',
        '0.749266092324661',
        '0.749246466730335',
        '0.749246466485641',
        '0.749246466485641',
        '0.749226700149212',
        '0.749226700149212',
        '0.749216824493599',
        '0.749215774472063',
        '0.749215774472063',
        '0.749174571427304',
        '0.749174571427304',
        '0.749174571427304',
        '0.749172009791223',
        '0.749171872572398',
        '0.749171182076122',
        '0.749129990477113',
        '0.749129983377238',
        '0.749129983377238',
        '0.749129982544',
        '0.749085466980324',
        '0.749048716259196',
        '0.749045340601501',
        '0.749045123278604',
        '0.748907381637893',
        '0.748857948018163',
        '0.748831971664937',
        '0.748831971664937',
        '0.748831971664937',
        '0.748831971664937',
        '0.7486868229101'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.74999058823089',
        'topology' => 5412,
        'id' => 9590,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          '1863' => {
            'two' => '-0.078108381603847',
            'bias' => 0,
            '601' => '2.03116206122971'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '4.44640553799',
            '1863' => '-2.12466010986691',
            'two' => '4.57274417412074',
            'bias' => '0.0468328846749967',
            '601' => '-0.0614076947122407'
          },
          '601' => {
            'one' => '0.332160700227001',
            'two' => '0.681687263400575',
            'bias' => '0.993008079371035'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.74999058823089',
      'func' => sub { "DUMMY" }
    },
    '8712' => {
      'penalty' => '10.7597667117278',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6948',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6948\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6948\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'6948\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6948\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6948\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999959701301',
        '0.749999959701301',
        '0.749999959701301',
        '0.749999959273335',
        '0.749999959273335',
        '0.749999959273335',
        '0.749999959273335',
        '0.749999959273335',
        '0.749999959273335',
        '0.749999905684004',
        '0.749999905681221',
        '0.749999905681221',
        '0.749999905681221',
        '0.749999905681221',
        '0.749999905635393',
        '0.749999867898668',
        '0.749999867898668',
        '0.749999837638619',
        '0.749999835933635',
        '0.749999726004877',
        '0.749999726004877',
        '0.749999631718637',
        '0.749999631718637',
        '0.749999631718637',
        '0.749999631345709',
        '0.749999631345709',
        '0.749999423177382',
        '0.749999423177382',
        '0.749999423177382',
        '0.749998551638817',
        '0.749998551638765',
        '0.749998345911052',
        '0.749996543990248',
        '0.749996543990248',
        '0.749996543990248',
        '0.749995864371275',
        '0.749992629913717',
        '0.749988481627788',
        '0.749988481627788',
        '0.749981414239962',
        '0.749975304340229',
        '0.749975304340229',
        '0.749975304340229',
        '0.749975304340229'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999959701301',
        'topology' => 8712,
        'id' => 11045,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.7690558968199',
            '6948' => '-0.201391942686547',
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.558973292823739',
            'bias' => 0,
            'two' => '0.766512843045938'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '6.69627123474891',
            '1863' => '-2.42311398162122',
            '4639' => '-0.152164186806687',
            'two' => '6.78977778358432',
            'bias' => '0.036421529272496',
            '601' => '-0.695045010033506'
          },
          '601' => {
            'one' => '-1.06271219431934',
            '4920' => '0.908296476491671',
            'bias' => '0.307120012396523'
          },
          '1863' => {
            'one' => '0.477837787948692',
            '4639' => '1.25469110404293',
            'two' => '-0.0413144042656355',
            'bias' => 0,
            '601' => '0.989344760249499'
          },
          'one' => {},
          '6948' => {
            'bias' => 0,
            'two' => '0.868202752852411'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999959701301',
      'func' => sub { "DUMMY" }
    },
    '15440' => {
      'penalty' => '7.13',
      'max' => '0.500000004000617',
      'adj-total' => '0.500000004000617',
      'ignore' => {},
      'adj-count' => 1,
      'order' => [
        'bias',
        '14941',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'14941\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'14941\'}->{\'bias\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'14941\'}*$n->{\'nodes\'}->{\'6083\'}->{\'14941\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.500000004000617',
        '0.500000004000617',
        '0.500000004000617',
        '0.500000004000616',
        '0.500000004000616',
        '0.500000004000616',
        '0.500000004000616',
        '0.500000004000616',
        '0.500000004000616',
        '0.500000004000616',
        '0.500000004000616',
        '0.500000004000616',
        '0.500000004000616',
        '0.500000004000616',
        '0.500000004000616'
      ],
      'count' => 2,
      'adjusted' => '0.496253943794637',
      'avg' => '0.500000003994663',
      'min' => '0.500000003988709',
      'last' => '0.500000004000617',
      'champion' => {
        'fitness' => '0.500000004000617',
        'topology' => 15440,
        'id' => 16027,
        'elite' => 1,
        'nodes' => {
          '14941' => {
            'bias' => '0.969975979169662'
          },
          '4920' => {
            'one' => '0.875874431047371',
            '4639' => '0.730874276191017',
            'two' => '-0.263323031782794',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.756890751983624',
            'bias' => 0,
            'two' => '1.12230230262831'
          },
          '7065' => {
            '4639' => '0.846276977294643',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            '1863' => '-4.02504960499814',
            '4920' => '0.148038340727866',
            '7065' => '-0.254823330286521',
            'two' => 10,
            'bias' => '0.0525574474184348',
            '601' => '-2.1953581303166'
          },
          '6083' => {
            '14941' => '0.965441658664882',
            'bias' => 0
          },
          '601' => {
            'one' => '-1.64513030772989',
            '4920' => '0.662697074673099',
            '4639' => '-0.763353947231596',
            'two' => '-1.01167174561698',
            'bias' => '0.326545121176972'
          },
          '1863' => {
            'one' => '0.380004593395456',
            '4639' => '0.958887283880007',
            'two' => '-0.0181178518012161',
            'bias' => 0,
            '601' => '0.562940490332601'
          },
          'one' => {}
        }
      },
      'adj-avg' => '0.500000004000617',
      'total' => '1.00000000798933',
      'offspring' => 0,
      'members' => [
        16027,
        16151
      ],
      'best' => '0.500000004000617',
      'func' => sub { "DUMMY" }
    },
    '13499' => {
      'penalty' => '10.99098',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'6083\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999998586',
        '0.749999999998586',
        '0.749999999998586',
        '0.749999999998586',
        '0.749999999998586',
        '0.749999999998586',
        '0.749999999998586',
        '0.749999999998586',
        '0.749999999998586',
        '0.749999999998586',
        '0.749999999998586',
        '0.749999999998378',
        '0.749999999998378',
        '0.749999999998378',
        '0.749999999998368',
        '0.749999999997014',
        '0.749999999997014',
        '0.749999999997014',
        '0.749999999997014',
        '0.749999999997014',
        '0.749999999996987',
        '0.749999999996987'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999998586',
        'topology' => 13499,
        'id' => 13978,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '0.921912377838043',
            '4639' => '0.617716475152633',
            'two' => '-0.28116722496249',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.710449979856739',
            'bias' => 0,
            'two' => '0.824079769752436'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.59731419154427',
            '1863' => '-3.5205985743358',
            '4639' => '-0.193259047102945',
            '4920' => '0.194261264922334',
            'two' => 10,
            'bias' => '0.050551433905199',
            '601' => '-1.96968299200564'
          },
          '6083' => {
            'two' => '-0.784786151424345',
            'bias' => '0.953815012945929'
          },
          '601' => {
            'one' => '-1.45561918223336',
            '4920' => '0.786194060179743',
            'two' => '-0.845725873384936',
            'bias' => '0.280729434292816'
          },
          '1863' => {
            'one' => '0.457090006558804',
            '4639' => '1.0641851281327',
            'two' => '-0.0218737682674282',
            'bias' => 0,
            '601' => '0.593263225420358'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999998586',
      'func' => sub { "DUMMY" }
    },
    '4839' => {
      'penalty' => '10.4428460401',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749796513740904',
        '0.749796513740904',
        '0.749796513740904',
        '0.749796513740904',
        '0.749796513740904',
        '0.749796513740904',
        '0.749796513740904',
        '0.749796513740904',
        '0.749796513740904',
        '0.749788307312848',
        '0.74976484788262',
        '0.74974148530847',
        '0.749723024549474',
        '0.749723024549474',
        '0.749723024549474',
        '0.749723024549474',
        '0.749716566686345',
        '0.749716566686345',
        '0.749716566686345',
        '0.749716566686345',
        '0.749716566686345',
        '0.749716566686345',
        '0.749673482015589',
        '0.749672498100593',
        '0.749672498100593',
        '0.749672498100593',
        '0.749670874747166',
        '0.749670874747166',
        '0.749661998262461'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749796513740904',
        'topology' => 4839,
        'nodes' => {
          '1863' => {
            'one' => '0.513351698528216',
            'bias' => 0,
            'two' => '-0.0443270863407186',
            '601' => '0.88316747995409'
          },
          'one' => {},
          '4639' => {
            'one' => '0.819058253382146',
            'two' => 1,
            'bias' => 0
          },
          'output' => {
            '1863' => '-1.11823547443776',
            'one' => '3.49185984168382',
            'bias' => '0.074429753902327',
            'two' => '3.15939663495568',
            '601' => '-0.526647115749034'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.803701691413352',
            '4639' => '0.86079157493664',
            'bias' => '0.321085511447368'
          }
        },
        'elite' => 1,
        'id' => 5613
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749796513740904',
      'func' => sub { "DUMMY" }
    },
    '5611' => {
      'penalty' => '10.13497636747',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '5610',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'5610\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'5610\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'5610\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'5610\'}*$n->{\'nodes\'}->{\'1863\'}->{\'5610\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.74983134730523',
        '0.74983134730523',
        '0.74983134730523',
        '0.74983134730523',
        '0.74983134730523',
        '0.749831347054212',
        '0.749831347054212',
        '0.74982998634566',
        '0.74982998634566',
        '0.749828275288054',
        '0.749827499869916',
        '0.749827499869916',
        '0.749827499869916',
        '0.749827499869916',
        '0.749827499869916',
        '0.749827136803332',
        '0.749827126891073',
        '0.749826229385683',
        '0.749826229385683',
        '0.749826175318588',
        '0.749826175318588',
        '0.749826162123399',
        '0.749826162123399',
        '0.749826162123399',
        '0.749786450319835',
        '0.749786450319835',
        '0.749786450319835',
        '0.749786450319835',
        '0.749786450319835',
        '0.749786450319835',
        '0.749786446476772',
        '0.749786446476772'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.74983134730523',
        'topology' => 5611,
        'id' => 6639,
        'elite' => 1,
        'nodes' => {
          '5610' => {
            '4639' => '1.00220714097249',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.910478597119998',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '0.903803642015125'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.20523224797128',
            '1863' => '-1.06278687639809',
            '4639' => '-0.135800061574209',
            'two' => '3.45586213248087',
            'bias' => '0.0581640910466108',
            '601' => '-0.486306909555659'
          },
          '601' => {
            'one' => '-0.803701691413352',
            '4920' => '0.803646918676541',
            'bias' => '0.315840675694421'
          },
          '1863' => {
            '5610' => '0.748730898051697',
            'one' => '0.466443448130699',
            'two' => '-0.0480958728125836',
            'bias' => 0,
            '601' => '0.895210303064228'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.74983134730523',
      'func' => sub { "DUMMY" }
    },
    '6987' => {
      'penalty' => '10.0126639143371',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        '3880',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3880\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3880\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'3880\'}->{\'one\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3880\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3880\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749979166535025',
        '0.749979166535025',
        '0.749979166535025',
        '0.749979166535025',
        '0.749979166535025',
        '0.749977288727219',
        '0.749977059357883',
        '0.749977059357883',
        '0.749977059357883',
        '0.749976807649773',
        '0.749974792304827',
        '0.749974792304827',
        '0.749974792304827',
        '0.749966007714915',
        '0.749965476530209',
        '0.749965476524067',
        '0.749965476524067',
        '0.749965476524067',
        '0.749960156431974',
        '0.749960156431974',
        '0.749935945225171',
        '0.749935511043235',
        '0.749935317776356',
        '0.749935317776356',
        '0.749935317776356',
        '0.749935317776356',
        '0.749935317776356',
        '0.749935317776356',
        '0.749930315151278',
        '0.749930315151278',
        '0.749930314956106',
        '0.749930314956106',
        '0.749930314956106',
        '0.74993031460875',
        '0.749930314564303',
        '0.749930057140212',
        '0.749930057140212',
        '0.749930057140212'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749979166535025',
        'topology' => 6987,
        'id' => 8546,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.894385611989527',
            'two' => '-0.285809770902301',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '1.08078226002898'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.91598331343402',
            '1863' => '-1.41393435546911',
            '4639' => '-0.156710470206391',
            'two' => '4.3922628860057',
            'bias' => '0.0738793773259005',
            '601' => '-0.529687841888017'
          },
          '601' => {
            'one' => '-0.886459699569924',
            '4920' => '0.674289797070857',
            'bias' => '0.31021914626584'
          },
          '1863' => {
            '3880' => '0.438440526144912',
            '4639' => '0.874960966514047',
            'two' => '-0.0489996934420587',
            'bias' => 0,
            '601' => '1.09047164614916'
          },
          'one' => {},
          '3880' => {
            'one' => '0.846423024963233',
            'bias' => 0
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749979166535025',
      'func' => sub { "DUMMY" }
    },
    '5449' => {
      'penalty' => '10.235523',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749782692203529',
        '0.749782692203529',
        '0.749782692203529',
        '0.749782692203529',
        '0.749782690502964',
        '0.749782690502964',
        '0.749782690502964',
        '0.749782690502964',
        '0.749782690502964',
        '0.749782690502964',
        '0.749782683099588',
        '0.749782683099588',
        '0.749774723938735',
        '0.749774723938735',
        '0.749774723938735',
        '0.749761604446705',
        '0.749761010416687',
        '0.749761010416687',
        '0.749761010416687',
        '0.749761010416687',
        '0.749761010416687',
        '0.74975618312309',
        '0.74975618312309',
        '0.749752423203195',
        '0.749752423203195',
        '0.749752423203195'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749782692203529',
        'topology' => 5449,
        'id' => 6290,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.995956673368855',
            'bias' => 0
          },
          '4639' => {
            'one' => '0.747933286000105',
            'bias' => 0,
            'two' => 1
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.20523224797128',
            '1863' => '-0.989544804182196',
            '4639' => '-0.135800061574209',
            'two' => '3.26162675281551',
            'bias' => '0.074429753902327',
            '601' => '-0.546321087327848'
          },
          '601' => {
            'one' => '-0.935871925729522',
            '4920' => '0.795062558705177',
            'bias' => '0.321085511447368'
          },
          '1863' => {
            'one' => '0.492451629644904',
            '4639' => '0.748730898051697',
            'two' => '-0.0480958728125836',
            'bias' => 0,
            '601' => '0.88316747995409'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749782692203529',
      'func' => sub { "DUMMY" }
    },
    '5088' => {
      'penalty' => '10.508',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '2016',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'2016\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'2016\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'2016\'}*$n->{\'nodes\'}->{\'601\'}->{\'2016\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749724851621997',
        '0.749724851621997',
        '0.749724851621997',
        '0.749724851621997',
        '0.749724851621997',
        '0.749724851621997',
        '0.749722640826424',
        '0.749722618943223',
        '0.749722618943223',
        '0.749722618943223',
        '0.749722618943223',
        '0.749722618943223',
        '0.749722618943223',
        '0.749722615577562',
        '0.749722615577562',
        '0.749722615577562',
        '0.749722615577562',
        '0.749722608515917',
        '0.749722606943534',
        '0.749722606943534'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749724851621997',
        'topology' => 5088,
        'nodes' => {
          '2016' => {
            'bias' => '0.975388208196094'
          },
          '4639' => {
            'two' => 1,
            'bias' => 0
          },
          '4920' => {
            '4639' => 1,
            'bias' => 0
          },
          'output' => {
            '1863' => '-0.989544804182196',
            'one' => '3.20523224797128',
            '4639' => '-0.135800061574209',
            'bias' => '0.074429753902327',
            'two' => '3.14927581474822',
            '601' => '-0.463509631260245'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            '2016' => '0.321085511447368',
            'one' => '-0.852500692347478',
            '4920' => '0.825066331637297',
            'bias' => 0
          },
          '1863' => {
            'one' => '0.513351698528216',
            '4639' => '0.754945074418793',
            'bias' => 0,
            'two' => '-0.0505016921161271',
            '601' => '0.88316747995409'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 5782
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749724851621997',
      'func' => sub { "DUMMY" }
    },
    '2865' => {
      'penalty' => '10.9206137614264',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        '601',
        'two',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749416008628561',
        '0.749416008628561',
        '0.749416008628561',
        '0.749357419332771',
        '0.749357419332771',
        '0.749357419332771',
        '0.749357419332771',
        '0.749357400021782',
        '0.749357400021782',
        '0.749357400021782',
        '0.749357400021782',
        '0.749357393165428',
        '0.749357393165428',
        '0.749357393165428',
        '0.749357382775313',
        '0.749357175506773',
        '0.749356256132181',
        '0.749355841612949',
        '0.749355841612949',
        '0.749355841612949',
        '0.749355841612949',
        '0.749355838191393',
        '0.749355838191393',
        '0.749355838191393',
        '0.74935583674444',
        '0.74935583674444',
        '0.74935583674444',
        '0.74935583674444',
        '0.749351775454035',
        '0.749345342288836',
        '0.749345342288836',
        '0.749345342288836',
        '0.749344741118211',
        '0.749344739795453',
        '0.749344739795453',
        '0.749344739795453',
        '0.749344690828911',
        '0.749344690828911',
        '0.749344690828911',
        '0.749344603474052',
        '0.749344603474052',
        '0.749344513958783',
        '0.749273154224332',
        '0.749273052412695',
        '0.749273052412695',
        '0.74927281545286',
        '0.74927281545286',
        '0.749271779552586',
        '0.748971137389662',
        '0.748534763352346',
        '0.74763079808121',
        '0.747629214656953',
        '0.747629214656953',
        '0.746586268345501',
        '0.745840702856982',
        '0.745840702856982',
        '0.745840702856982',
        '0.745235462849943',
        '0.745233220302323',
        '0.745233220302323',
        '0.745233179862423',
        '0.744463813051827',
        '0.744462705848276',
        '0.744462035588334',
        '0.742591232839484',
        '0.742375091488655',
        '0.740725474610636',
        '0.740725474610636',
        '0.740687776497404',
        '0.740687776497404',
        '0.740489180935026',
        '0.740416158472697',
        '0.740416158472697',
        '0.73977220550675',
        '0.738809213906954'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749416008628561',
        'topology' => 2865,
        'id' => 6293,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          '1863' => {
            'two' => '2.60901243815281',
            'bias' => '-1.16168758370319',
            '601' => '-1.15978090637317'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '2.70878651599042',
            '1863' => '1.92777704129278',
            'two' => '1.9883412002826',
            'bias' => '-1.31655963889572'
          },
          '601' => {
            'one' => '-0.0424901043969323',
            'bias' => '-0.385162034203291'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749416008628561',
      'func' => sub { "DUMMY" }
    },
    '15963' => {
      'penalty' => '0',
      'max' => '0.749999999999968',
      'adj-total' => '1.49999999999994',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '15005',
        '15400',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'6083\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'15005\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'15005\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'15005\'}->{\'bias\'}), 5 ); $v->{\'15400\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'15400\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'15400\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'15400\'}*$n->{\'nodes\'}->{\'7065\'}->{\'15400\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'15005\'}*$n->{\'nodes\'}->{\'output\'}->{\'15005\'})+($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999968',
        '0.749999999999968',
        '0.749999999999968',
        '0.749999999999968',
        '0.749999999999968'
      ],
      'count' => 3,
      'adjusted' => '0.749999999999968',
      'avg' => '0.749999999999939',
      'min' => '0.74999999999988',
      'last' => '0.749999999999958',
      'champion' => {
        'fitness' => '0.749999999999968',
        'topology' => 15963,
        'id' => 16090,
        'elite' => 0,
        'nodes' => {
          '15400' => {
            '4639' => '0.394818857229048',
            'bias' => '1.01522511039501'
          },
          '4920' => {
            'one' => '0.764677505696626',
            '4639' => '0.720816089471203',
            'two' => '-0.254259080461883',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.740846112100489',
            'bias' => 0,
            'two' => '0.849596772657647'
          },
          '7065' => {
            '15400' => 0,
            '4639' => '0.898038384478704',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            '1863' => '-3.88250583485404',
            'one' => 10,
            '15005' => '0.193298957142422',
            '7065' => '-0.298767761863803',
            'two' => 10,
            'bias' => '0.0547087175929212',
            '601' => '-2.39753806231609'
          },
          '6083' => {
            '4639' => '0.473230261888713',
            'bias' => '0.958944098191'
          },
          '601' => {
            'one' => '-1.5516835235558',
            '4920' => '0.805282860821832',
            '4639' => '-0.820424634347233',
            'two' => '-0.972193894956376',
            'bias' => '0.240516539098082'
          },
          '1863' => {
            'one' => '0.425883061341092',
            '4639' => '0.868812773047928',
            'two' => '-0.0203029006087107',
            'bias' => 0,
            '601' => '0.688508801594894'
          },
          'one' => {},
          '15005' => {
            '4920' => '1.00233861630301',
            'bias' => 0
          }
        }
      },
      'adj-avg' => '0.749999999999968',
      'total' => '2.24999999999982',
      'offspring' => 0,
      'members' => [
        16090,
        16152,
        16153
      ],
      'best' => '0.749999999999968',
      'func' => sub { "DUMMY" }
    },
    '7387' => {
      'penalty' => '10.3296999361203',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        '7106',
        '7065',
        '981',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7106\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7106\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7106\'}->{\'bias\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'7106\'}*$n->{\'nodes\'}->{\'7065\'}->{\'7106\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'7065\'}->{\'one\'}), 5 ); $v->{\'981\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'981\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'981\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'981\'}*$n->{\'nodes\'}->{\'output\'}->{\'981\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.749613344587816',
        '0.749613344587816',
        '0.749613344587816',
        '0.749613344587816',
        '0.74961334432766',
        '0.74961334432766',
        '0.749613306636266',
        '0.749613306636266',
        '0.749613306636266',
        '0.749613300661904',
        '0.749613300661904',
        '0.749613300661904',
        '0.749613300661904',
        '0.749613141178312',
        '0.749611667357242',
        '0.749598177498762',
        '0.749267324664665',
        '0.74926732466172',
        '0.74926732466172',
        '0.749267317620681',
        '0.749267317620681',
        '0.749267317620681',
        '0.749267317620681',
        '0.749264348475302',
        '0.749264348469324',
        '0.749264348469324',
        '0.749264347193937',
        '0.749264347193937',
        '0.749264347193937',
        '0.749264046669741',
        '0.749264046669741',
        '0.749264046669741',
        '0.749264046669741',
        '0.749264046669741',
        '0.749263922133344',
        '0.749258997003724',
        '0.748723466918971',
        '0.748723466918971',
        '0.748679658294453',
        '0.748679658294453',
        '0.748679624928145',
        '0.748679624928145',
        '0.748679607435273',
        '0.748679607435273',
        '0.747839918917764',
        '0.747821070012729',
        '0.747821070012729',
        '0.747309809746409',
        '0.746608971668966',
        '0.746412588461521',
        '0.746412588461521',
        '0.746412588461521',
        '0.74610306107678',
        '0.745638877939707',
        '0.745638877939707',
        '0.745638877939707',
        '0.745638285772601',
        '0.745636951094936',
        '0.745636951094936',
        '0.744356465228616',
        '0.744355493260949',
        '0.744355407188285',
        '0.744355407188285',
        '0.743768335933202',
        '0.743768335933202',
        '0.742750337069669',
        '0.742750337069669',
        '0.742631231185577',
        '0.742631231185577',
        '0.742631231185577',
        '0.742326972387959',
        '0.741401579514839',
        '0.740788101281165',
        '0.740788101281165',
        '0.740788101281165',
        '0.740788101281165',
        '0.74016153981912',
        '0.738112106072361',
        '0.738112106072361',
        '0.738112106072361',
        '0.738111903980305',
        '0.738111903980305',
        '0.738111653230601',
        '0.738111653230601',
        '0.738111653230601',
        '0.738111653230601',
        '0.728108092384398',
        '0.728108092384398',
        '0.713330266499452',
        '0.71333026642424',
        '0.71333026642424',
        '0.71333026642424',
        '0.712687196052582',
        '0.668421534775291',
        '0.63203623233046',
        '0.632035439419569',
        '0.631970401332747',
        '0.63196620549502',
        '0.62057937581137',
        '0.620376388547307'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749613344587816',
        'topology' => 7387,
        'nodes' => {
          '981' => {
            'bias' => 0,
            'two' => '0.930808654484505'
          },
          '4639' => {
            'two' => '0.744181904051799',
            'bias' => 0
          },
          '4920' => {
            '4639' => '1.08583882205143',
            'bias' => 0,
            'two' => '-0.375202441634563'
          },
          '7106' => {
            '4639' => '1.11473023088966',
            'bias' => 0
          },
          '7065' => {
            'one' => '-1.0492774453226',
            '7106' => '0.713092143904606',
            'bias' => 0
          },
          'output' => {
            '981' => '5.84510605968576',
            '1863' => '-3.78299211137204',
            'one' => '4.17330768894011',
            '7065' => '-0.137875100254542',
            'bias' => '0.10057092634084',
            '601' => '-0.544611553305771'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.951192762232066',
            '4920' => '1.24837652389805',
            'bias' => '0.269783748003722'
          },
          '1863' => {
            'one' => '0.50179617473474',
            '4639' => '0.619859616196625',
            'bias' => 0,
            'two' => '-0.0504865178333231',
            '601' => '1.32755952494524'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 14347
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749613344587816',
      'func' => sub { "DUMMY" }
    },
    '11276' => {
      'penalty' => '10.5500903424117',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        'two',
        '1863',
        '981',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'981\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'981\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'981\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'981\'}*$n->{\'nodes\'}->{\'output\'}->{\'981\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.721325538522232',
        '0.721325538522232',
        '0.721325538522232',
        '0.721325538522232',
        '0.721325538522232',
        '0.721325538522232',
        '0.721325538522232',
        '0.721325538522232',
        '0.721323287308809',
        '0.721323287308809',
        '0.721323287308809',
        '0.721323287308809',
        '0.720815655865281',
        '0.720815655865281',
        '0.720815655865281',
        '0.720815655865281',
        '0.720815100255851',
        '0.720815100255851',
        '0.720815100255851',
        '0.720783873723248',
        '0.72078374820312',
        '0.720773341901326',
        '0.720765361823898',
        '0.720765361823898',
        '0.720765361823898',
        '0.720761717097334',
        '0.720748552531114',
        '0.720748552531114',
        '0.72069447144547',
        '0.72069447144547',
        '0.718121721567337',
        '0.714051015455797',
        '0.714051015455797',
        '0.713869045943509',
        '0.712813990878185',
        '0.712813990878185',
        '0.712813990878185',
        '0.710357637204395',
        '0.710357637204395',
        '0.705867858515565',
        '0.697721264639242',
        '0.694782480466598',
        '0.694759269353023',
        '0.694759269353023',
        '0.689722153645613',
        '0.689722153645613',
        '0.68889031482196',
        '0.688565719446274',
        '0.688565719446274',
        '0.687377037754067',
        '0.687377037754067',
        '0.652446585012225',
        '0.652446585012225',
        '0.652446585012225',
        '0.647368924514397',
        '0.627338983210822',
        '0.627338983210822',
        '0.621054845918325',
        '0.621053521395479',
        '0.621053521395479',
        '0.581398569480905',
        '0.581398569480905',
        '0.581398569480905',
        '0.581398569480905',
        '0.581398203942727',
        '0.580814701767385'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.721325538522232',
        'topology' => 11276,
        'id' => 14235,
        'elite' => 1,
        'nodes' => {
          '981' => {
            'bias' => 0,
            'two' => '0.94298840973703'
          },
          'one' => {},
          '1863' => {
            'two' => '-0.0722670030021974',
            'bias' => 0,
            '601' => '1.15783428870955'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            '981' => '2.31009337675246',
            'one' => '2.92533634372553',
            '1863' => '-1.73031862164211',
            'bias' => '0.063645023496948'
          },
          '601' => {
            'bias' => '0.824931341743874'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.721325538522232',
      'func' => sub { "DUMMY" }
    },
    '6162' => {
      'penalty' => '10.5621381497259',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        'one',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749981828846234',
        '0.749981828846234',
        '0.749981828846234',
        '0.749981828846234',
        '0.749981828846234',
        '0.749981828846234',
        '0.749981828846234',
        '0.749981828846234',
        '0.749981828846234',
        '0.749981828846234',
        '0.749976212144805',
        '0.749967850677313',
        '0.749967850677313',
        '0.74996782318302',
        '0.74996782318302',
        '0.74996782318302',
        '0.74996782318302',
        '0.749967823182978',
        '0.74996645457432',
        '0.749949977081722',
        '0.749926920267642',
        '0.749926713626776',
        '0.749926713621321',
        '0.749926713621321',
        '0.749912474740546',
        '0.749899769755856',
        '0.749881282330356',
        '0.749881246851034',
        '0.749881246200133',
        '0.749881214163115',
        '0.749880561935346',
        '0.749880561935346',
        '0.749879482704652',
        '0.749879482704652',
        '0.749879482704652',
        '0.749878432430752',
        '0.749878432430752',
        '0.749878429315858',
        '0.74987426136102',
        '0.74987426136102',
        '0.74987426136102',
        '0.74987292773901',
        '0.749872921540727',
        '0.749872367464496',
        '0.749870238746291',
        '0.749870238746291',
        '0.74986762244032',
        '0.74986762244032',
        '0.749861032427447',
        '0.749861032427447',
        '0.749861032427447',
        '0.749860933720045',
        '0.749860933720045',
        '0.749860417269393',
        '0.749853048009159',
        '0.749853045201345',
        '0.749838606816501',
        '0.749838594376399',
        '0.749838594376399',
        '0.749838594376399',
        '0.749838594376399',
        '0.749838295544857',
        '0.749838244463728',
        '0.749838244463728',
        '0.749838244463728',
        '0.74983824402991'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749981828846234',
        'topology' => 6162,
        'id' => 8666,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '0.277314714457344',
            '4639' => '1.05553053976939',
            'two' => '-0.312094313615527',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '1.25031539791662'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '4.00063682919846',
            '1863' => '-1.38425431482438',
            '4639' => '-0.10500502135665',
            'two' => '4.87604968831875',
            'bias' => '0.0624975160316319',
            '601' => '-0.563188000021224'
          },
          '601' => {
            'one' => '-0.898652434546287',
            '4920' => '0.552643214114621',
            'bias' => '0.295242047932018'
          },
          '1863' => {
            'one' => '0.433586583226435',
            '4639' => '0.907292153401686',
            'two' => '-0.0520240375468601',
            'bias' => 0,
            '601' => '0.895265499754321'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749981828846234',
      'func' => sub { "DUMMY" }
    },
    '5816' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.738213690983295',
        '0.738213690983295',
        '0.738213690983295',
        '0.738213690983295',
        '0.738213690983295',
        '0.738213690983295',
        '0.738213690983295',
        '0.738213690983295',
        '0.738213690983295',
        '0.738213690983295',
        '0.738213690983295',
        '0.737944242027417',
        '0.737902202621989',
        '0.737712372582387',
        '0.737712372582387',
        '0.737712372582387',
        '0.737712372582387',
        '0.737661831274447'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.738213690983295',
        'topology' => 5816,
        'nodes' => {
          '4920' => {
            '4639' => 1,
            'bias' => 0
          },
          '4639' => {
            'one' => '0.752581809101276',
            'two' => 1,
            'bias' => 0
          },
          'output' => {
            '1863' => '-1.11823547443776',
            'one' => '3.49185984168382',
            '4639' => '-0.994089460612003',
            'bias' => '0.074429753902327',
            'two' => '3.15939663495568',
            '601' => '-0.526647115749034'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.877804811548979',
            '4920' => '0.86079157493664',
            'bias' => '0.321085511447368'
          },
          'one' => {},
          '1863' => {
            'one' => '0.513351698528216',
            'bias' => 0,
            'two' => '-0.0443270863407186',
            '601' => '0.81906082502257'
          }
        },
        'elite' => 1,
        'id' => 6249
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.738213690983295',
      'func' => sub { "DUMMY" }
    },
    '10746' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '981',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'981\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'981\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'981\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'981\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'981\'}*$n->{\'nodes\'}->{\'output\'}->{\'981\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.378963023404954',
        '0.378963023404954',
        '0.378963023404954',
        '0.378963023404954',
        '0.378963023404954',
        '0.378963023404954',
        '0.378963023404954',
        '0.378963023404954',
        '0.378963023404954',
        '0.378963023404954',
        '0.378963023404954',
        '0.378963023404954',
        '0.378963023404954',
        '0.378963023404954',
        '0.378963023404954'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.378963023404954',
        'topology' => 10746,
        'id' => 10745,
        'elite' => 1,
        'nodes' => {
          '981' => {
            'one' => '-0.0829302584581413',
            'two' => '2.03480371770159',
            'bias' => 0
          },
          'one' => {},
          'two' => {},
          'bias' => {},
          'output' => {
            '981' => '0.434739434567684',
            'one' => '1.52081447197135',
            'bias' => 0,
            'two' => '-0.641376446505234'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.378963023404954',
      'func' => sub { "DUMMY" }
    },
    '6484' => {
      'penalty' => '10.6111913234662',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        'one',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999989400206',
        '0.749999989400206',
        '0.749999989400206',
        '0.749999989400206',
        '0.749999989400206',
        '0.749999989205203',
        '0.749999989205203',
        '0.749999989205203',
        '0.749999989205203',
        '0.749999983977385',
        '0.7499999786131',
        '0.7499999786131',
        '0.7499999786131',
        '0.7499999786131',
        '0.749999948384339',
        '0.749999930799935',
        '0.749999930793459',
        '0.749999930793459',
        '0.749999930793459',
        '0.749999930793459',
        '0.749999930787461',
        '0.749999924769851',
        '0.74999988883977',
        '0.749999826455316',
        '0.749999725318518',
        '0.749999722400986',
        '0.749999661546561',
        '0.749999661287102',
        '0.749999661287102',
        '0.749999502958792',
        '0.749999398255463',
        '0.749999398255463',
        '0.749999396555305',
        '0.749999396555305',
        '0.749999185970736',
        '0.749999185970736',
        '0.749999185970736',
        '0.749999183323365',
        '0.749999183323365',
        '0.749997779652293',
        '0.749997779652293',
        '0.749997641816674',
        '0.749997640207967',
        '0.749997640207967',
        '0.749994137967844',
        '0.749992417902635',
        '0.749985648645738',
        '0.749985648645738',
        '0.74998497468921',
        '0.74998497468921',
        '0.749984974682034',
        '0.749984974682034',
        '0.749984974682034',
        '0.749981984829602',
        '0.749981977853874',
        '0.749970646615865',
        '0.749970645914677',
        '0.749970645914677',
        '0.749950848967919',
        '0.749950848967919',
        '0.749950848967919',
        '0.749950848967919',
        '0.749933254204605',
        '0.749933238853819',
        '0.749933238853819',
        '0.749933238853819',
        '0.749920070394066',
        '0.749898259538588',
        '0.749898259538588',
        '0.749898259538588',
        '0.74989045407314',
        '0.749877031802658',
        '0.749877031802658',
        '0.749877031802658',
        '0.749877031802658',
        '0.749877031802658',
        '0.749877031802658',
        '0.749877030872436',
        '0.749877030872436',
        '0.749876815884832',
        '0.749876815884832',
        '0.749876811236533',
        '0.749870048634881',
        '0.749870044541873',
        '0.749869661965892',
        '0.749869657243991',
        '0.749869497147891',
        '0.749864167464762',
        '0.749864167464762',
        '0.74986415589411',
        '0.749863561224869',
        '0.749863556161103',
        '0.749863556161103',
        '0.749863436938635',
        '0.749863436938635',
        '0.749862593538058',
        '0.749862593538058',
        '0.749862593538058',
        '0.749862593538058',
        '0.749862587921478'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999989400206',
        'topology' => 6484,
        'id' => 11616,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '-0.176196949200325',
            '4639' => '1.67974330497504',
            'two' => '-0.256836215002334',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '0.902961329298675'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '6.62699901780059',
            '1863' => '-2.77505399991677',
            '4639' => '-0.105415962260349',
            'two' => '7.13120566632927',
            'bias' => '0.0542191909491',
            '601' => '-0.726770193446107'
          },
          '601' => {
            'one' => '-0.93779491117545',
            '4639' => '-0.915408921420267',
            '4920' => '0.685065449406729',
            'bias' => '0.309186142511273'
          },
          '1863' => {
            'one' => '0.479439917180672',
            '4920' => '0.581461104076339',
            '4639' => '0.681141749120713',
            'two' => '-0.0526663812045681',
            'bias' => 0,
            '601' => '0.862170903044969'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999989400206',
      'func' => sub { "DUMMY" }
    },
    '6084' => {
      'penalty' => '10.463372',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '6083',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749859661854997',
        '0.749859661854997',
        '0.749859661854997',
        '0.749859661854997',
        '0.749859661854997',
        '0.749859661854997',
        '0.749859661854997',
        '0.749859661854997',
        '0.749859661854997',
        '0.749859629165055',
        '0.749843105029635',
        '0.749843105029635',
        '0.749843070462524',
        '0.749843070462524',
        '0.74984202038347',
        '0.74984202038347',
        '0.749841769041703',
        '0.749841769041703',
        '0.749841769041703',
        '0.749841769041703',
        '0.749841769041703',
        '0.749841769041703',
        '0.749841769041703'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749859661854997',
        'topology' => 6084,
        'id' => 6878,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.897364179703749',
            'two' => '-0.265499719370495',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '0.863120542927307'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.20523224797128',
            '1863' => '-1.13020445374407',
            '4639' => '-0.135800061574209',
            'two' => '3.57951348142397',
            'bias' => '0.074429753902327',
            '601' => '-0.486306909555659'
          },
          '6083' => {
            'bias' => 1
          },
          '601' => {
            'one' => '-0.88264688394766',
            '4920' => '0.803646918676541',
            'bias' => '0.321085511447368'
          },
          '1863' => {
            'one' => '0.513351698528216',
            '4639' => '0.823890313282619',
            'two' => '-0.0485027036571635',
            'bias' => 0,
            '601' => '0.949786630044444'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749859661854997',
      'func' => sub { "DUMMY" }
    },
    '14546' => {
      'penalty' => '10.268',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999874',
        '0.749999999999874',
        '0.749999999999873',
        '0.749999999999873',
        '0.749999999999873',
        '0.749999999999873',
        '0.749999999999864',
        '0.74999999999986',
        '0.74999999999905',
        '0.74999999999905',
        '0.74999999999905',
        '0.749999999999047',
        '0.749999999999047'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999999881',
        'topology' => 14546,
        'id' => 15198,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '0.911396776445837',
            '4639' => '0.773133312102851',
            'two' => '-0.244115720049112',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.717796418952302',
            'bias' => 0,
            'two' => '0.94086756168131'
          },
          '7065' => {
            '4639' => '0.910347799977804',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.81581147663095',
            '1863' => '-4.00684715121164',
            '4920' => '0.168914155504772',
            '7065' => '-0.244700142893828',
            'two' => 10,
            'bias' => '0.0504893827890811',
            '601' => '-1.87797728406809'
          },
          '6083' => {
            'bias' => '0.953574326010568'
          },
          '601' => {
            'one' => '-1.55849811573439',
            '4920' => '0.724946836091416',
            '4639' => '-0.823208142476587',
            'two' => '-0.982921413762187',
            'bias' => '0.298523692360775'
          },
          '1863' => {
            'one' => '0.421502634795135',
            '4639' => '0.921963452829935',
            'two' => '-0.0186146498721105',
            'bias' => 0,
            '601' => '0.591351610181796'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999999881',
      'func' => sub { "DUMMY" }
    },
    '14272' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'6083\'}->{\'one\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'1863\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999998803',
        '0.749999999998803',
        '0.749999999998803',
        '0.749999999998803',
        '0.749999999998803',
        '0.749999999998803',
        '0.749999999998803',
        '0.749999999998803',
        '0.749999999998803',
        '0.749999999998803',
        '0.749999999998803',
        '0.749999999998803',
        '0.749999999998803',
        '0.749999999998803',
        '0.749999999998803'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999998803',
        'topology' => 14272,
        'id' => 14700,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '0.861030366211537',
            '4639' => '0.733166102156049',
            'two' => '-0.278145368928007',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.650083675411187',
            'bias' => 0,
            'two' => '0.878369451141423'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.21157249375568',
            '1863' => '-3.41976472661062',
            '4639' => '-0.232188679973838',
            '4920' => '0.199227809115443',
            'two' => 10,
            'bias' => '0.0450817139164004',
            '601' => '-2.20626564132802'
          },
          '6083' => {
            'one' => '-0.50320884180239',
            'bias' => '1.02220125048858'
          },
          '601' => {
            'one' => '-1.35301340575588',
            '4920' => '0.767765479402868',
            'two' => '-0.902420397914554',
            'bias' => '0.27393835407373'
          },
          '1863' => {
            'one' => '0.397410755849557',
            '4639' => '0.942711141395208',
            '4920' => '0.904340117639038',
            'two' => '-0.0222474601789391',
            'bias' => 0,
            '6083' => '-0.196767790177391',
            '601' => '0.585541048652095'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999998803',
      'func' => sub { "DUMMY" }
    },
    '5255' => {
      'penalty' => '10.0065938',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '3618',
        '601',
        '3756',
        '1863',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3618\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3618\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'3618\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'3756\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'3756\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'3756\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3618\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3618\'})+($v->{\'3756\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3756\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749179644949077',
        '0.749179644949077',
        '0.749179644949077',
        '0.749179644949077',
        '0.749179644949077',
        '0.749179644949077',
        '0.749179644949077',
        '0.749179583569334',
        '0.749179583569334',
        '0.749179583569334',
        '0.749179583569334',
        '0.749179583569334',
        '0.749179583569334',
        '0.749179583569334',
        '0.74917956365955',
        '0.749163336610615',
        '0.749067184654799',
        '0.748881296212058',
        '0.748881296212058',
        '0.748881296212058',
        '0.748881296212058',
        '0.748800599607276',
        '0.748800598605588',
        '0.748800598605588'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749179644949077',
        'topology' => 5255,
        'nodes' => {
          '3756' => {
            'bias' => 0,
            '601' => '0.927089253848618'
          },
          'output' => {
            '1863' => '-1.29951617847192',
            'one' => '2.62703746178153',
            'bias' => '0.0679919912857752',
            'two' => '2.95933101679405'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '0.547422761087388'
          },
          'one' => {},
          '1863' => {
            '3756' => '1.00074712502304',
            '3618' => '-0.0836815861461559',
            'bias' => 0
          },
          '3618' => {
            'bias' => 0,
            'two' => '1.00767178449534'
          }
        },
        'elite' => 1,
        'id' => 5902
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749179644949077',
      'func' => sub { "DUMMY" }
    },
    '4963' => {
      'penalty' => '10.0045095828329',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749300447641518',
        '0.749300447641518',
        '0.749300447641518',
        '0.749300447641518',
        '0.749283556196442',
        '0.749283556196442',
        '0.749283556196442',
        '0.749283556196442',
        '0.749283556196442',
        '0.749183653510872',
        '0.749183653510872',
        '0.749183653510872',
        '0.749183653510872',
        '0.749183653510872',
        '0.749061355476884',
        '0.749061355476884',
        '0.749011581667932',
        '0.749011581667932',
        '0.749011581667932',
        '0.749011581667932',
        '0.749011581667932',
        '0.748977422382187',
        '0.748962478052682',
        '0.748962478052682',
        '0.748960572501408',
        '0.748960572501408',
        '0.74893571923102',
        '0.74893571923102',
        '0.74893571923102',
        '0.748912926153205',
        '0.748912926153205',
        '0.748893353658537',
        '0.748893353658537',
        '0.748893353658537',
        '0.748893353658537'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749300447641518',
        'topology' => 4963,
        'nodes' => {
          '4639' => {
            'two' => 1,
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.754402858863979',
            'bias' => 0
          },
          'output' => {
            '1863' => '-1.02803359160782',
            'one' => '3.20523224797128',
            '4920' => '0.302220320153516',
            'bias' => '0.0630838824399686',
            'two' => '3.14927581474822',
            '601' => '-0.492563513392913'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.803701691413352',
            '4920' => '0.866967804497841',
            'bias' => '0.321085511447368'
          },
          '1863' => {
            'one' => '0.513351698528216',
            'bias' => 0,
            'two' => '-0.0480958728125836',
            '601' => '0.88316747995409'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 6171
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749300447641518',
      'func' => sub { "DUMMY" }
    },
    '2448' => {
      'penalty' => '10.1452429968852',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        'two',
        '1863',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.748693019919622',
        '0.748693019919622',
        '0.748693019919622',
        '0.748693019919622',
        '0.748693019919622',
        '0.748693019919622',
        '0.748693019919622',
        '0.748692357682608',
        '0.748692357682608',
        '0.748692357682608',
        '0.748692357682608',
        '0.748692002990478',
        '0.748692002990478',
        '0.748688470854265',
        '0.748688470854265',
        '0.748688470854265',
        '0.748675685782675',
        '0.748484214903278',
        '0.748196602298872',
        '0.74766921458798',
        '0.74766921458798',
        '0.74766921458798',
        '0.747669137850635',
        '0.747668937451351',
        '0.747665920219555',
        '0.747518307623388',
        '0.747397120777487',
        '0.746511219514905',
        '0.746501902746544',
        '0.746501902746544',
        '0.746501902746544',
        '0.745590075807378',
        '0.745474325446903',
        '0.745474325446903',
        '0.743705410954532',
        '0.743690782762951',
        '0.743648738217891',
        '0.743648738217891',
        '0.743639587457342',
        '0.74362523042208',
        '0.74260880574102',
        '0.741343875494533',
        '0.738560498522515',
        '0.738559589530107',
        '0.738324520106163',
        '0.738324520106163',
        '0.73516541076554',
        '0.73516541076554',
        '0.732180673531134'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.748693019919622',
        'topology' => 2448,
        'nodes' => {
          '1863' => {
            'bias' => 0,
            'two' => '-0.0766655300924295',
            '601' => '1.05853664817629'
          },
          'one' => {},
          'output' => {
            '1863' => '-1.19053863263663',
            'one' => '2.6187250784301',
            'bias' => '0.0683358936172646',
            'two' => '2.5183494231066'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '0.445486378070396'
          }
        },
        'elite' => 1,
        'id' => 4935
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.748693019919622',
      'func' => sub { "DUMMY" }
    },
    '2017' => {
      'penalty' => '10.046210209259',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '2016',
        '601',
        'one',
        'two',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'2016\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'2016\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'2016\'}*$n->{\'nodes\'}->{\'601\'}->{\'2016\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.747533534486406',
        '0.747533534486406',
        '0.747533534486406',
        '0.747533534486406',
        '0.74744744001601',
        '0.74744744001601',
        '0.74744744001601',
        '0.74744744001601',
        '0.747415189052432',
        '0.747415189052432',
        '0.747415189052432',
        '0.747415189052432',
        '0.747323075575587',
        '0.747323075575587',
        '0.747323075575587',
        '0.747323075575587',
        '0.747323075575587',
        '0.747301560448399',
        '0.747301560448399',
        '0.747301560448399',
        '0.747301526305354',
        '0.747301526305354',
        '0.747301080410785',
        '0.74703669443283',
        '0.74703669443283',
        '0.7460999717886',
        '0.744704156983684',
        '0.744599431590596',
        '0.744599431590596',
        '0.744599431590596',
        '0.744599431590596',
        '0.742732543826355',
        '0.74163369096619',
        '0.741633231277529',
        '0.739835095380494',
        '0.739207842085859',
        '0.738511176611481',
        '0.738511176611481',
        '0.738505675851264',
        '0.738367033702605',
        '0.738367033702605',
        '0.738367033702605',
        '0.737122879023792',
        '0.737092584504856',
        '0.736763659579175',
        '0.736763659579175',
        '0.736763659579175',
        '0.734205421187371',
        '0.734033878343701',
        '0.732110257695748',
        '0.731147844447139',
        '0.730964001154696',
        '0.730955275355727',
        '0.728831598993988',
        '0.728548704005695',
        '0.728003595262783',
        '0.726484326437698',
        '0.724102622935652',
        '0.72395853066389',
        '0.721911252595312',
        '0.72172538830521',
        '0.721544658991521'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.747533534486406',
        'topology' => 2017,
        'nodes' => {
          '2016' => {
            'bias' => '1.24266161212314'
          },
          'one' => {},
          'output' => {
            'one' => '2.19903866653597',
            'bias' => '0.0419440937475413',
            'two' => '2.50980336301184',
            '601' => '-1.07276062076944'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            '2016' => '0.655467224539634',
            'bias' => 0
          }
        },
        'elite' => 1,
        'id' => 5265
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.747533534486406',
      'func' => sub { "DUMMY" }
    },
    '4757' => {
      'penalty' => '10.8179041603',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749709421222387',
        '0.749709421222387',
        '0.749709421222387',
        '0.749709421222387',
        '0.749709421222387',
        '0.749709418043038',
        '0.749709341577866',
        '0.749709341577866',
        '0.749709341577866',
        '0.749709341577866',
        '0.749709341577866',
        '0.749709341577866',
        '0.749709321171922',
        '0.74970797796557',
        '0.749707869708195',
        '0.749697752625975',
        '0.749692391240882',
        '0.749691377778991',
        '0.749691377778991',
        '0.749691377778991',
        '0.749691377778991',
        '0.749691377778991',
        '0.749675060413314',
        '0.749673915758115',
        '0.749673915758115',
        '0.749673915758115',
        '0.749673915758115',
        '0.749673905426615',
        '0.749673905426615',
        '0.749673859498653',
        '0.749661289926654'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749709421222387',
        'topology' => 4757,
        'id' => 5865,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          '1863' => {
            'one' => '0.460683588515333',
            'two' => '-0.0499176929655713',
            'bias' => 0,
            '601' => '0.963332340081'
          },
          '4639' => {
            'bias' => 0,
            'two' => 1
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.20523224797128',
            '1863' => '-0.989544804182196',
            'two' => '3.46726306147893',
            'bias' => '0.074429753902327',
            '601' => '-0.463509631260245'
          },
          '601' => {
            'one' => '-0.86783508146658',
            '4639' => '0.866290711860304',
            'bias' => '0.338962001036039'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749709421222387',
      'func' => sub { "DUMMY" }
    },
    '31' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'bias' => 1,
        'two' => 1
      },
      'adj-count' => 0,
      'order' => [
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'output\'} = sigmoid( ($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 31,
        'id' => 384,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '-0.32796578108563'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '4717' => {
      'penalty' => '10.8131876',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '601',
        'one',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749643357650894',
        '0.749643357650894',
        '0.749643357650894',
        '0.749643357650894',
        '0.749643357650894',
        '0.749643357650894',
        '0.749643357650894',
        '0.749643357650894',
        '0.749643357650894',
        '0.749642039854427',
        '0.749642039854427',
        '0.749630386832183',
        '0.749595112727716',
        '0.749593396753049',
        '0.749591197713398',
        '0.749591197713398',
        '0.749590966238153',
        '0.749590966238153',
        '0.749590966238153',
        '0.749590966238153',
        '0.749590966238153',
        '0.749588805603369',
        '0.749587573513893',
        '0.749587573513893',
        '0.749587573513893'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749643357650894',
        'topology' => 4717,
        'id' => 5346,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          '1863' => {
            'one' => '0.469462519774973',
            '4639' => '-0.282600445740026',
            'two' => '-0.0443270863407186',
            'bias' => 0,
            '601' => '0.88316747995409'
          },
          '4639' => {
            'bias' => 0,
            'two' => 1
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '2.99050426066213',
            '1863' => '-0.989544804182196',
            'two' => '3.23943268629064',
            'bias' => '0.0732977355061054',
            '601' => '-0.508386401695572'
          },
          '601' => {
            '4639' => '0.87624077018962',
            'bias' => '0.321085511447368'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749643357650894',
      'func' => sub { "DUMMY" }
    },
    '13789' => {
      'penalty' => '10.4661',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '13725',
        'one',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'13725\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'13725\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'13725\'}->{\'two\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'13725\'}*$n->{\'nodes\'}->{\'4639\'}->{\'13725\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'1863\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999998951',
        '0.749999999998951',
        '0.749999999998951',
        '0.749999999998951',
        '0.749999999998951',
        '0.749999999998951',
        '0.749999999998951',
        '0.749999999998951',
        '0.749999999998951',
        '0.749999999998951',
        '0.749999999998951',
        '0.749999999998612',
        '0.749999999998612',
        '0.749999999998557',
        '0.749999999998479',
        '0.749999999998479',
        '0.749999999998478',
        '0.749999999998478',
        '0.74999999999837',
        '0.74999999999837',
        '0.749999999998365',
        '0.749999999998364'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999998951',
        'topology' => 13789,
        'nodes' => {
          '4639' => {
            'one' => '-0.683950293206832',
            '13725' => '0.852429903576958',
            'two' => '0.803916054696957',
            'bias' => 0
          },
          '4920' => {
            'one' => '1.00418685323465',
            '4639' => '0.582994738931132',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.309644620129778'
          },
          '13725' => {
            'bias' => 0,
            'two' => '1.02267637064002'
          },
          '6083' => {
            'bias' => '1.07247565437587'
          },
          'output' => {
            '1863' => '-3.57542616140299',
            'one' => 10,
            '4920' => '0.192383164430103',
            '4639' => '-0.232082044565378',
            'bias' => '0.0473423936113007',
            'two' => 10,
            '601' => '-1.84212332666981'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.49905312494869',
            '4920' => '0.749920715359505',
            'bias' => '0.242607257549785',
            'two' => '-0.790777392541011'
          },
          '1863' => {
            'one' => '0.441372410161505',
            '4639' => '0.904636763246927',
            '6083' => '-0.232350075927925',
            'bias' => 0,
            'two' => '-0.0208934207599321',
            '601' => '0.586295851719779'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 14625
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999998951',
      'func' => sub { "DUMMY" }
    },
    '3001' => {
      'penalty' => '10.787230303955',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        'two',
        '1863',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.748154424317221',
        '0.748154424317221',
        '0.748154424317221',
        '0.748154424317221',
        '0.748154424317221',
        '0.747980550183018',
        '0.747980550183018',
        '0.747980550183018',
        '0.747980550183018',
        '0.747980456329344',
        '0.747699498892127',
        '0.747698429809557',
        '0.747698429809557',
        '0.747698429809557',
        '0.74769840844921',
        '0.747697581661659',
        '0.747697581661659',
        '0.747697581661659',
        '0.747697581661659',
        '0.747697581661659',
        '0.747697372163053',
        '0.747697372163053',
        '0.747696547955932',
        '0.747696547955932',
        '0.747696547955932',
        '0.747696547955932',
        '0.747696547955932',
        '0.747671271318034',
        '0.7476710436207',
        '0.7476710436207',
        '0.7476710436207',
        '0.747524299897169',
        '0.747524299897169',
        '0.747524299897169',
        '0.747524299897169',
        '0.747505635341538',
        '0.747505635341538',
        '0.747505580161992',
        '0.747502550398494',
        '0.747485883839079',
        '0.747485883839079',
        '0.747485883839079',
        '0.747485883839079',
        '0.747485883839079',
        '0.747485883839079',
        '0.746952853914009',
        '0.746952853914009',
        '0.746801148050459',
        '0.746800846297783',
        '0.746800846297783',
        '0.746800846297783',
        '0.746553669944642',
        '0.746553014783298',
        '0.74655298249902',
        '0.746197760727882',
        '0.745751486149274',
        '0.745747034280013',
        '0.745573155116003',
        '0.745160443118439',
        '0.745160443118439',
        '0.745160020288457',
        '0.745160020288457',
        '0.745160020288457',
        '0.745160020288457',
        '0.745159647464971',
        '0.744326692416587',
        '0.743680524560761',
        '0.7436247904232',
        '0.7436247904232',
        '0.7436247904232',
        '0.743571497821563',
        '0.741488889089978',
        '0.741083518395001',
        '0.741069008792423'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.748154424317221',
        'topology' => 3001,
        'nodes' => {
          '1863' => {
            'bias' => 0,
            'two' => '-0.0796084834471956',
            '601' => '1.2037866069918'
          },
          'one' => {},
          'output' => {
            '1863' => '-1.13172816142312',
            'one' => '2.68173367340011',
            'bias' => '0.0507331623236096',
            'two' => '2.28528402004451',
            '601' => '0.0142522768190351'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '0.453611478659321'
          }
        },
        'elite' => 1,
        'id' => 6379
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.748154424317221',
      'func' => sub { "DUMMY" }
    },
    '14622' => {
      'penalty' => '10.1138199',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '981',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'981\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'981\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'981\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'981\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'981\'}*$n->{\'nodes\'}->{\'output\'}->{\'981\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.537518200084562',
        '0.537518200084562',
        '0.537518200084562',
        '0.537518200084562',
        '0.537518200084562',
        '0.537518200084562',
        '0.537518200084562',
        '0.537518007201893',
        '0.537518007201893',
        '0.537517572410885',
        '0.537517572410885',
        '0.537517175328976',
        '0.537517175328976',
        '0.537517175328976',
        '0.537517175328976',
        '0.537516801550922',
        '0.537516801550922',
        '0.537516801550922',
        '0.537516801550922',
        '0.537516757499608',
        '0.537516757499608',
        '0.53751664560191',
        '0.537516260716767',
        '0.537516260716767',
        '0.537516260716767',
        '0.537516260716767'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.537518200084562',
        'topology' => 14622,
        'nodes' => {
          '981' => {
            'one' => '0.869522011324007',
            'bias' => 0,
            'two' => '2.59122316495761'
          },
          'one' => {},
          'output' => {
            '981' => '0.434739434567684',
            'one' => '1.54421530113471',
            'bias' => 0
          },
          'bias' => {},
          'two' => {}
        },
        'elite' => 1,
        'id' => 15778
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.537518200084562',
      'func' => sub { "DUMMY" }
    },
    '7428' => {
      'penalty' => '10.154868969608',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        '7106',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7106\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7106\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'7106\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7106\'}->{\'bias\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'7106\'}*$n->{\'nodes\'}->{\'7065\'}->{\'7106\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999934617',
        '0.749999999934617',
        '0.749999999934617',
        '0.749999999934617',
        '0.749999999934605',
        '0.749999999934605',
        '0.749999999934605',
        '0.74999999993082',
        '0.74999999993082',
        '0.74999999993082',
        '0.74999999993082',
        '0.749999999926169',
        '0.749999999926169',
        '0.749999999925564',
        '0.749999999925564',
        '0.749999999925564',
        '0.749999999726128',
        '0.749999999726128',
        '0.749999999709455',
        '0.749999999709455',
        '0.749999999709455',
        '0.749999999483613',
        '0.749999999365627',
        '0.749999999365627',
        '0.749999999365041',
        '0.749999999365041',
        '0.749999999364807',
        '0.749999999364807',
        '0.74999999837516',
        '0.749999998374958',
        '0.749999998187503',
        '0.749999998187503',
        '0.749999998148741',
        '0.749999998148741',
        '0.749999994399386',
        '0.74999999439917',
        '0.749999993766004',
        '0.749999993766004',
        '0.749999993674132',
        '0.749999993674132',
        '0.749999993674132',
        '0.749999993674132',
        '0.749999993138771',
        '0.749999993137757',
        '0.749999986102972',
        '0.749999980835144',
        '0.749999980835144',
        '0.749999980835144',
        '0.749999980834265',
        '0.749999980834265',
        '0.749999980833909',
        '0.749999980833909',
        '0.749999980833909',
        '0.749999976138056',
        '0.749999976138056',
        '0.749999976138056',
        '0.749999976137771',
        '0.749999941651548',
        '0.749999905958803',
        '0.749999905958803',
        '0.749999905955019',
        '0.749999905955019',
        '0.749999864156473',
        '0.749999864156473',
        '0.749999689788956',
        '0.749999689788956',
        '0.749999605048522',
        '0.749999232827544',
        '0.749999232466792',
        '0.749999232455485',
        '0.749999232455485',
        '0.749998989517258',
        '0.749998502789848',
        '0.749998463711451',
        '0.749998463711451',
        '0.749998463711451',
        '0.749998463710902',
        '0.749998214802602',
        '0.749997541117812',
        '0.749997535730143',
        '0.749997535532118',
        '0.749997535532118',
        '0.749996955212102',
        '0.74999695485958',
        '0.74999695485958',
        '0.749996954359782',
        '0.749996954359782',
        '0.749994332490767',
        '0.749994332490767',
        '0.749992714313416',
        '0.749988577290233',
        '0.749988577290233',
        '0.749987993454556',
        '0.749987965267084',
        '0.749987964435822',
        '0.749986995444374',
        '0.749986995444374',
        '0.749986995444374',
        '0.749986995444374',
        '0.749985567649159'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999934617',
        'topology' => 7428,
        'id' => 13797,
        'elite' => 1,
        'nodes' => {
          '7106' => {
            '4639' => '0.78781150898',
            '4920' => '0.714833054400346',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.586582006916344',
            'two' => '-0.444586042825967',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '1.05528124435409'
          },
          '7065' => {
            '7106' => '0.56716898230868',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.79912584295309',
            '1863' => '-3.54365972664726',
            '7065' => '-0.174045690638061',
            'two' => '9.67259965070468',
            'bias' => '0.0463327785571637',
            '601' => '-0.757827626377044'
          },
          '601' => {
            'one' => '-0.892999878511635',
            '4920' => '1.06866393424123',
            'bias' => '0.340429237268687'
          },
          '1863' => {
            'one' => '0.352855980160244',
            '4639' => '1.49801261122878',
            'two' => '-0.0631059392588484',
            'bias' => 0,
            '601' => '0.916699370796957'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999934617',
      'func' => sub { "DUMMY" }
    },
    '347' => {
      'penalty' => '10.381686940347',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'bias' => 1
      },
      'adj-count' => 0,
      'order' => [
        'one',
        'two',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'output\'} = sigmoid( ($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.624999947953454',
        '0.624999947953454',
        '0.624999947953454',
        '0.624999947953454',
        '0.624999947953454',
        '0.624999947953454',
        '0.624999947953454',
        '0.624999947953454',
        '0.624999947953454',
        '0.624999947953454',
        '0.624999947953454',
        '0.624999947953454',
        '0.624999823410042',
        '0.62499982280774',
        '0.624999822386212',
        '0.624999820269357',
        '0.624999812547072',
        '0.624999617700126',
        '0.624999612924777',
        '0.624998947841244',
        '0.624998937932801',
        '0.624998922446683',
        '0.624998922446683',
        '0.62499881782576',
        '0.62499881782576',
        '0.624998666866793',
        '0.624998531917081',
        '0.624997600617587',
        '0.624996819253779',
        '0.624996469130749',
        '0.624996271086949',
        '0.62499399322081',
        '0.624992455846104',
        '0.624991810375814',
        '0.624991810375814',
        '0.624988860195516',
        '0.624975512911329',
        '0.624975149464796',
        '0.624965940847249',
        '0.624960989657652',
        '0.624951091157673',
        '0.624940715935918',
        '0.624922618009885',
        '0.62490148490495',
        '0.624844358657921',
        '0.624827347678466',
        '0.624827347678466',
        '0.624728191208753',
        '0.624636989191032',
        '0.624614236939054',
        '0.624599814733871',
        '0.624599814733871',
        '0.624544434776039',
        '0.624475834685653',
        '0.624339813684615',
        '0.624229109673382',
        '0.623746384863337',
        '0.623746384863337',
        '0.623684057802378',
        '0.623300294051311',
        '0.622653214309011',
        '0.621897404380576',
        '0.621321783165982',
        '0.621148400554567',
        '0.620207905474734',
        '0.618625723342091',
        '0.618625723342091',
        '0.618166571100418',
        '0.618097089898243',
        '0.616450604797038',
        '0.615281677600676',
        '0.613587380413177',
        '0.611262171089011',
        '0.608086665790549',
        '0.605464308713701',
        '0.602975121658083',
        '0.579505731816923',
        '0.573962281233687',
        '0.566639187525507',
        '0.560424083333141',
        '0.559830478273822',
        '0.437476737044914'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.624999947953454',
        'topology' => 347,
        'nodes' => {
          'one' => {},
          'output' => {
            'one' => '3.07748920258504',
            'two' => '4.26666492726942'
          },
          'bias' => {},
          'two' => {}
        },
        'elite' => 1,
        'id' => 4735
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.624999947953454',
      'func' => sub { "DUMMY" }
    },
    '4340' => {
      'penalty' => '10.139079743304',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        'one',
        'two',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749362015089047',
        '0.749362015089047',
        '0.749362015089047',
        '0.749362015089047',
        '0.749362015089047',
        '0.749362015089047',
        '0.749361358495493',
        '0.749361346022545',
        '0.749361346022545',
        '0.749361346022545',
        '0.749361340811059',
        '0.749336782581002',
        '0.749336508782161',
        '0.749336368212881',
        '0.749336368212881',
        '0.749336368212881',
        '0.749336368212881',
        '0.749150205072033',
        '0.749150205072033',
        '0.749150205072033',
        '0.749150205072033',
        '0.749149618731013',
        '0.749149618731013',
        '0.749149518801912',
        '0.749149518801912',
        '0.749149518801912',
        '0.749080147318586',
        '0.749080147318586',
        '0.748889640785235',
        '0.748889640785235',
        '0.748874657872711',
        '0.748874657872711',
        '0.748874657872711',
        '0.748709239411573',
        '0.748709239411573',
        '0.7487090491729',
        '0.748688912323728',
        '0.748688912323728',
        '0.748686909765618',
        '0.748673216784141',
        '0.748572928095376',
        '0.748572928095376',
        '0.748572928095376',
        '0.748572928095376',
        '0.748572928095376',
        '0.748558922224152',
        '0.748558922224152',
        '0.74855838657848',
        '0.74855838657848',
        '0.74855838657848',
        '0.748549778514656',
        '0.748425028444331',
        '0.748345495244767',
        '0.748345495244767',
        '0.748345495244767',
        '0.748345495244767',
        '0.748345495244767',
        '0.748345276999638',
        '0.748345276999638',
        '0.74834375751301',
        '0.748337203662944',
        '0.748322412238998',
        '0.748322305784695',
        '0.748322305784695',
        '0.748322226234412',
        '0.748322226234412',
        '0.748322226234412',
        '0.748322226234412',
        '0.748322226234412',
        '0.748322226234412',
        '0.748322115503554',
        '0.748322115503554'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749362015089047',
        'topology' => 4340,
        'nodes' => {
          '1863' => {
            'one' => '0.466740420362898',
            'bias' => 0,
            'two' => '-0.0999184395254955',
            '601' => '1.14319142099365'
          },
          'one' => {},
          'output' => {
            '1863' => '-1.39799828440097',
            'one' => '3.12933022925994',
            'bias' => 0,
            'two' => '2.68398713475394',
            '601' => '0.0477472854764988'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '0.786686744263288'
          }
        },
        'elite' => 1,
        'id' => 6997
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749362015089047',
      'func' => sub { "DUMMY" }
    },
    '14816' => {
      'penalty' => '10.77147',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'6083\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999911',
        '0.749999999999911',
        '0.749999999999911',
        '0.749999999999911',
        '0.749999999999911',
        '0.749999999999911',
        '0.749999999999911',
        '0.749999999999911',
        '0.749999999999911',
        '0.749999999999911',
        '0.749999999999911',
        '0.74999999999991',
        '0.74999999999991',
        '0.749999999999909',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999878',
        '0.74999999999986',
        '0.74999999999986'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999999911',
        'topology' => 14816,
        'id' => 15404,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '0.881037113713107',
            '4639' => '0.792795041877442',
            'two' => '-0.243086840540321',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.720765952735031',
            'bias' => 0,
            'two' => '0.838128205192579'
          },
          '7065' => {
            '4639' => '0.812214600756231',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => 10,
            '1863' => '-4.03465814948132',
            '4920' => '0.154601701784783',
            '7065' => '-0.265328261582573',
            'two' => 10,
            'bias' => '0.0540068086200543',
            '601' => '-1.99434098179455'
          },
          '6083' => {
            '4639' => '0.535741276683259',
            'bias' => '1.14066837602075'
          },
          '601' => {
            'one' => '-1.43217381531737',
            '4920' => '0.678082744877572',
            '4639' => '-0.82609210937711',
            'two' => '-0.867888336286311',
            'bias' => '0.275976356563439'
          },
          '1863' => {
            'one' => '0.421458243059587',
            '4639' => '0.838239440651969',
            'two' => '-0.0198705860434075',
            'bias' => 0,
            '601' => '0.593398001881326'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999999911',
      'func' => sub { "DUMMY" }
    },
    '11218' => {
      'penalty' => '10.5560795875607',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999991889',
        '0.749999999991889',
        '0.749999999991889',
        '0.749999999991889',
        '0.749999999991889',
        '0.749999999991889',
        '0.749999999991889',
        '0.749999999991889',
        '0.749999999991813',
        '0.749999999991813',
        '0.749999999991813',
        '0.749999999991813',
        '0.749999999991812',
        '0.749999999991812',
        '0.749999999991797',
        '0.749999999991797',
        '0.749999999991521',
        '0.749999999991521',
        '0.749999999991514',
        '0.749999999991498',
        '0.749999999991465',
        '0.749999999975473',
        '0.74999999997547',
        '0.74999999997547',
        '0.749999999973771',
        '0.749999999970211',
        '0.749999999965939',
        '0.749999999965939',
        '0.749999999878241',
        '0.749999999878241',
        '0.749999999878237',
        '0.749999999878237',
        '0.749999999878215',
        '0.74999999981051',
        '0.74999999981051',
        '0.749999999643577',
        '0.749999999340699',
        '0.749999999293581',
        '0.749999999276688',
        '0.749999999249875',
        '0.749999999234526',
        '0.749999998624621',
        '0.749999998624621',
        '0.749999998624621',
        '0.749999998624621',
        '0.749999998624621',
        '0.749999997849127',
        '0.749999988462838',
        '0.749999988462838',
        '0.749999988462838',
        '0.749999988462838',
        '0.749999978967135',
        '0.749999978962754',
        '0.749999977439672',
        '0.749999977439672',
        '0.749999977439672',
        '0.749999976803157',
        '0.749999974539897',
        '0.749999974539897'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999991889',
        'topology' => 11218,
        'id' => 13921,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.911809120741961',
            'two' => '-0.232134548483054',
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.626524390151816',
            'bias' => 0,
            'two' => '1.21607460997657'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '8.70686241538503',
            '1863' => '-3.7945688661502',
            '4639' => '-0.227341254343623',
            '4920' => '0.191252140458208',
            'two' => 10,
            'bias' => '0.0472133400165918',
            '601' => '-1.23439592226316'
          },
          '601' => {
            'one' => '-1.46973705189273',
            '4920' => '1.1359908471681',
            'two' => '-0.742775763409357',
            'bias' => '0.206434791110959'
          },
          '1863' => {
            'one' => '0.3482661724441',
            '4639' => '0.870991483521281',
            '4920' => '-0.461181573801582',
            'two' => '-0.0192492998313216',
            'bias' => 0,
            '601' => '1.26711720210898'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999991889',
      'func' => sub { "DUMMY" }
    },
    '6405' => {
      'penalty' => '10.3611389',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749862883796878',
        '0.749862883796878',
        '0.749862883796878',
        '0.749862883796878',
        '0.749862883796878',
        '0.749862883796878',
        '0.749862416453115',
        '0.74986231764639',
        '0.749860926548489',
        '0.749860926548489',
        '0.749860926548489',
        '0.749860626436853',
        '0.749855796535656',
        '0.749855796535656',
        '0.749855796535656',
        '0.749855796535656',
        '0.749855796535656',
        '0.749845638710056',
        '0.749845638710056',
        '0.749845638710056',
        '0.749845468595128',
        '0.749845468595128',
        '0.749845468595128',
        '0.749845468595128',
        '0.749845468595128',
        '0.749845468595128',
        '0.749842613065965'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749862883796878',
        'topology' => 6405,
        'id' => 7238,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.896001713416516',
            'two' => '-0.288238670638719',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => 1
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.20523224797128',
            '1863' => '-1.11372737005826',
            '4639' => '-0.153852320165286',
            'two' => '3.57951348142397',
            'bias' => '0.074429753902327',
            '601' => '-0.486306909555659'
          },
          '601' => {
            'one' => '-0.921522386066775',
            '4920' => '0.803646918676541',
            'bias' => '0.307932848437218',
            'two' => '0.972431746347205'
          },
          '1863' => {
            'one' => '0.513351698528216',
            '4639' => '0.862488012855591',
            'two' => '-0.0485027036571635',
            'bias' => 0,
            '601' => '0.977468028667045'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749862883796878',
      'func' => sub { "DUMMY" }
    },
    '14346' => {
      'penalty' => '4.23753791884603',
      'max' => '0.749836322795462',
      'adj-total' => '1.49967250169539',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'two',
        '4639',
        '2016',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'2016\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'2016\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'2016\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'2016\'}*$n->{\'nodes\'}->{\'601\'}->{\'2016\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749836322795462',
        '0.749836178899929',
        '0.749836178899929',
        '0.749836178899929',
        '0.749835576670822',
        '0.749835576670822',
        '0.749835305090712',
        '0.749835270860113',
        '0.749831835235364',
        '0.749831835235364',
        '0.749831835235364',
        '0.749831780780392',
        '0.749831778334679',
        '0.749830986781352',
        '0.749830986781352',
        '0.749829213084978',
        '0.749829213084978',
        '0.74982842074891',
        '0.749821574612782',
        '0.749821574612782',
        '0.749821574612782',
        '0.749821472420442',
        '0.749821472420442',
        '0.749821472420442',
        '0.749821472420442',
        '0.749821312402016',
        '0.749820200210536',
        '0.749820045904631',
        '0.749819853128029',
        '0.749819853128029',
        '0.749819853128029',
        '0.749819853128029',
        '0.749819853128029',
        '0.749819853128029',
        '0.749819827489123',
        '0.749819827489123',
        '0.749819787988799'
      ],
      'count' => 3,
      'adjusted' => '0.749431705652661',
      'avg' => '0.749776729763818',
      'min' => '0.749657687596063',
      'last' => '0.749817336536643',
      'champion' => {
        'fitness' => '0.749836178899929',
        'topology' => 14346,
        'id' => 15967,
        'elite' => 1,
        'nodes' => {
          '2016' => {
            'bias' => '0.804005038927531',
            'two' => '-0.695698633916713'
          },
          '4920' => {
            '4639' => '0.809427589735072',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '0.718800784936868'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.22784656513704',
            '1863' => '-1.08617278338407',
            '4639' => '-0.123812045651445',
            'two' => '3.35750069040172',
            'bias' => '0.0652577650722912',
            '601' => '-0.518259118639014'
          },
          '601' => {
            '2016' => '0.241073087995759',
            'one' => '-0.763141932703845',
            '4920' => '0.693759928320595',
            'two' => '0.197109783560432',
            'bias' => 0
          },
          '1863' => {
            'one' => '0.306362762318975',
            '4639' => '0.87786367003428',
            'two' => '-0.0492806767940368',
            'bias' => 0,
            '601' => '0.960173453419591'
          },
          'one' => {}
        }
      },
      'adj-avg' => '0.749836250847696',
      'total' => '2.24933018929145',
      'offspring' => 0,
      'members' => [
        16154,
        15967,
        16155
      ],
      'best' => '0.749836322795462',
      'func' => sub { "DUMMY" }
    },
    '4160' => {
      'penalty' => '10.34708',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '3880',
        '2016',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3880\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3880\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'3880\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'3880\'}->{\'two\'}), 5 ); $v->{\'2016\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'2016\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'2016\'}*$n->{\'nodes\'}->{\'601\'}->{\'2016\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3880\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3880\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749267728155965',
        '0.749267728155965',
        '0.749267728155965',
        '0.749267728155965',
        '0.749267728155965',
        '0.749267728155965',
        '0.749189580236239',
        '0.749189580236239',
        '0.749189580236239',
        '0.749189580236239',
        '0.749189562434736',
        '0.749189562434736',
        '0.749189562434736',
        '0.749189234127915',
        '0.749189234127915',
        '0.74918919383343',
        '0.74918919383343',
        '0.74918919383343',
        '0.749130982840422',
        '0.74890287702511',
        '0.748901327116191',
        '0.748845733985357',
        '0.748845733985357'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749267728155965',
        'topology' => 4160,
        'id' => 5113,
        'elite' => 1,
        'nodes' => {
          '2016' => {
            'bias' => '1.06312516137162'
          },
          '3880' => {
            'one' => '0.923611540452429',
            'bias' => 0,
            'two' => '-0.306110119640246'
          },
          'one' => {},
          '1863' => {
            '3880' => '0.625426402397235',
            'two' => '-0.0674824093150159',
            'bias' => 0,
            '601' => '0.81064414679055'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '2.98386253476051',
            '1863' => '-1.25844320436429',
            'two' => '2.84293759442567',
            'bias' => '0.0579415715986459'
          },
          '601' => {
            '2016' => '0.472217736618286',
            'two' => '0.665450060942363',
            'bias' => 0
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749267728155965',
      'func' => sub { "DUMMY" }
    },
    '3757' => {
      'penalty' => '10.623681956',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        '3756',
        'two',
        '1863',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'3756\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'3756\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'3756\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3756\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3756\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.748801173360923',
        '0.748801173360923',
        '0.748801173360923',
        '0.748577555177396',
        '0.748577555177396',
        '0.748577555177396',
        '0.748577555177396',
        '0.748577555177396',
        '0.748577545111601',
        '0.748577545111601',
        '0.748577545111601',
        '0.748577545111601',
        '0.748577545111601',
        '0.748577545111601',
        '0.748577545111601',
        '0.748577540587763',
        '0.748577520919664',
        '0.748577519678839',
        '0.748274482027082',
        '0.74756533753619',
        '0.746827179218403',
        '0.746827179218403',
        '0.746827179218403',
        '0.746827179218403',
        '0.746827179218403',
        '0.746826881701485',
        '0.74671219614522',
        '0.74671219614522',
        '0.74671219614522',
        '0.74671219614522',
        '0.746508933008323'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.748801173360923',
        'topology' => 3757,
        'id' => 5115,
        'elite' => 1,
        'nodes' => {
          '3756' => {
            'bias' => 0,
            '601' => '0.927089253848618'
          },
          'one' => {},
          '1863' => {
            '3756' => '1.00049885634233',
            'two' => '-0.0836815861461559',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '2.46180826027666',
            '1863' => '-1.29951617847192',
            'two' => '2.71752844515311',
            'bias' => '0.0679919912857752'
          },
          '601' => {
            'bias' => '0.50691071519927'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.748801173360923',
      'func' => sub { "DUMMY" }
    },
    '7107' => {
      'penalty' => '10.3245622260025',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        '7106',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7106\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7106\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7106\'}->{\'bias\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'7106\'}*$n->{\'nodes\'}->{\'7065\'}->{\'7106\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.74999995390085',
        '0.74999995390085',
        '0.74999995390085',
        '0.74999995390085',
        '0.749999948431755',
        '0.749999948431755',
        '0.749999948384714',
        '0.749999948384714',
        '0.749999948384714',
        '0.749999948384619',
        '0.749999948384619',
        '0.749999937755958',
        '0.749999937755958',
        '0.749999914348928',
        '0.749999882342696',
        '0.749999882342696',
        '0.749999882342696',
        '0.749999852090748',
        '0.749999852058453',
        '0.749999851560802',
        '0.749999851560802',
        '0.749999838952562',
        '0.749999838952562',
        '0.749999838952562',
        '0.749999838952562',
        '0.749999818600104',
        '0.749999818567416',
        '0.749999818567416',
        '0.749999818428229',
        '0.749999818428229',
        '0.749999818428229',
        '0.749999818428229',
        '0.749999818426684',
        '0.749999818426684',
        '0.749999711855704',
        '0.749999525761946',
        '0.749999467226544',
        '0.749999461338794',
        '0.749999461338794',
        '0.749999189957057',
        '0.749999186203888',
        '0.749999157396657',
        '0.749999057287531',
        '0.749999057287531',
        '0.749999057287531',
        '0.749998921506534',
        '0.749998921506534',
        '0.749998921506534',
        '0.749998567304726',
        '0.749998567304726',
        '0.74999854092726',
        '0.749998487530659',
        '0.749998124320442',
        '0.749998124320442',
        '0.749997891819782',
        '0.749995967248386',
        '0.749995966965576',
        '0.749995935728853',
        '0.749995935728853',
        '0.749995935728853',
        '0.749995899591348',
        '0.749995899591348',
        '0.749995899591348',
        '0.749995899591348',
        '0.749991866488919',
        '0.749991866488919',
        '0.749991050842747',
        '0.749987513178703',
        '0.749987513178703',
        '0.749987513178703',
        '0.749980879000816',
        '0.74998087895999',
        '0.74998087895999',
        '0.749978273302486',
        '0.749977275507329',
        '0.749977147812843',
        '0.749977147812843',
        '0.749977063991651',
        '0.74997473030212',
        '0.74997449876463',
        '0.749974488355915',
        '0.749974479743668',
        '0.749974479743668',
        '0.749974479743668',
        '0.749967678738454',
        '0.749967678738454',
        '0.749967678738454',
        '0.749967678738454',
        '0.749967647386346',
        '0.749967630631451',
        '0.749967630631451',
        '0.749960243200143',
        '0.749951867233212',
        '0.749951867165397',
        '0.749946349530554',
        '0.749946307956185',
        '0.749946307956185',
        '0.749946278983659',
        '0.749946278983659'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.74999995390085',
        'topology' => 7107,
        'nodes' => {
          '4639' => {
            'two' => '0.843386106969991',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.734539663141064',
            'bias' => 0,
            'two' => '-0.309028312465434'
          },
          '7106' => {
            '4639' => '1.2428894420928',
            'bias' => 0
          },
          '7065' => {
            '7106' => '0.892260556429371',
            'bias' => 0
          },
          'output' => {
            '1863' => '-1.74835274781417',
            'one' => '5.88774886835032',
            '7065' => '-0.219895490506567',
            'bias' => '0.0904135957679069',
            'two' => '6.69953087273018',
            '601' => '-1.29046570148371'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.39304738588645',
            '4920' => '0.492185863803493',
            'bias' => '0.262538830303917'
          },
          '1863' => {
            'one' => '0.453624316903642',
            '4639' => '0.564025119677219',
            'bias' => 0,
            'two' => '-0.0373950140835009',
            '601' => '1.17058372444576'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 12270
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.74999995390085',
      'func' => sub { "DUMMY" }
    },
    '6911' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '981',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'981\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'981\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'981\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'981\'}*$n->{\'nodes\'}->{\'output\'}->{\'981\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.378973459378062',
        '0.378973459378062',
        '0.378973459378062',
        '0.378973459378062',
        '0.378973459378062',
        '0.378973459378062',
        '0.378973459378062',
        '0.378973459378062',
        '0.378973459378062',
        '0.378973459378062',
        '0.378973459378062',
        '0.378973459378062',
        '0.378973459378062',
        '0.378973459378062',
        '0.378973459378062'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.378973459378062',
        'topology' => 6911,
        'id' => 6910,
        'elite' => 1,
        'nodes' => {
          '981' => {
            'two' => '2.03480371770159',
            'bias' => 0
          },
          'one' => {},
          'two' => {},
          'bias' => {},
          'output' => {
            '981' => '0.434739434567684',
            'one' => '1.52081447197135',
            'bias' => 0,
            'two' => '-0.641376446505234'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.378973459378062',
      'func' => sub { "DUMMY" }
    },
    '7309' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        '7106',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7106\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7106\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7106\'}->{\'bias\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'7106\'}*$n->{\'nodes\'}->{\'7065\'}->{\'7106\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'7065\'}->{\'one\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.50000097738285',
        '0.50000097738285',
        '0.50000097738285',
        '0.50000097738285',
        '0.50000097738285',
        '0.50000097738285',
        '0.50000097738285',
        '0.50000097738285',
        '0.50000097738285',
        '0.50000097738285',
        '0.50000097738285',
        '0.50000097738285',
        '0.50000097738285',
        '0.50000097738285',
        '0.50000097738285'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.50000097738285',
        'topology' => 7309,
        'id' => 7308,
        'elite' => 1,
        'nodes' => {
          '7106' => {
            '4639' => 1,
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.99496552709397',
            'two' => '-0.288238670638719',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => 1
          },
          '7065' => {
            'one' => '-0.957345482505083',
            '7106' => 1,
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.63429257606648',
            '1863' => '-1.2292328069459',
            '7065' => '-0.135800061574209',
            'bias' => '0.074429753902327',
            '601' => '-0.486306909555659'
          },
          '601' => {
            'one' => '-0.88264688394766',
            '4920' => '0.803646918676541',
            'bias' => '0.307932848437218'
          },
          '1863' => {
            'one' => '0.513351698528216',
            '4639' => '0.933872330987372',
            'two' => '-0.0485027036571635',
            'bias' => 0,
            '601' => '0.962571724858496'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.50000097738285',
      'func' => sub { "DUMMY" }
    },
    '1207' => {
      'penalty' => '10.8760922150364',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        'one',
        'two',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.748858462130187',
        '0.748858462130187',
        '0.748858462130187',
        '0.748858462130187',
        '0.748858462130187',
        '0.748858462130187',
        '0.748612257069751',
        '0.748612257069751',
        '0.748612257069751',
        '0.748395592371104',
        '0.748395592371104',
        '0.748395592371104',
        '0.748395592371104',
        '0.748395587044749',
        '0.748395587044749',
        '0.748395536780725',
        '0.748394941906879',
        '0.748394941906879',
        '0.748394941906879',
        '0.748375357459378',
        '0.748375357459378',
        '0.748309738465845',
        '0.748309738465845',
        '0.748308415309974',
        '0.748306686597664',
        '0.748298928915696',
        '0.748151321950516',
        '0.74814121136116',
        '0.748007528128068',
        '0.748002025616748',
        '0.748000647874869',
        '0.747984189837892',
        '0.747984189837892',
        '0.747984189837892',
        '0.7479724802796',
        '0.7479724802796',
        '0.7479724802796',
        '0.7479724802796',
        '0.7479724802796',
        '0.747476627877785',
        '0.74746451431182',
        '0.74746451431182',
        '0.747433374550347',
        '0.747433374550347',
        '0.747051799609864',
        '0.746706746184567',
        '0.74643268840835',
        '0.74643268840835',
        '0.74643268840835',
        '0.746421891612442',
        '0.746421891612442',
        '0.745828883670304',
        '0.745828883670304',
        '0.745807716408012',
        '0.744984360824501',
        '0.744981638589741',
        '0.744789575659762',
        '0.744789575659762',
        '0.744026677828812',
        '0.743963672153385',
        '0.743963672153385',
        '0.743963672153385',
        '0.743963672153385',
        '0.742752551305143',
        '0.742752551305143',
        '0.742752551305143',
        '0.742752551305143',
        '0.742450305275471',
        '0.741604740348887',
        '0.741604342230595',
        '0.74125281520134',
        '0.74125281520134',
        '0.741107481737484',
        '0.741097080309458',
        '0.741097080309458',
        '0.740025821795396',
        '0.738552977474194',
        '0.738552977474194',
        '0.738546830582845',
        '0.738546830582845',
        '0.734917364203601',
        '0.734321021536197',
        '0.733946394008951',
        '0.73149963483532',
        '0.731495919083053',
        '0.730805305565904',
        '0.730805305565904',
        '0.728576904665019',
        '0.726353544030709',
        '0.721571192109613',
        '0.721370506314053',
        '0.717629877093702',
        '0.714852041312312',
        '0.712707687016873',
        '0.710057313413076',
        '0.704039325475936',
        '0.698851415675075',
        '0.684760574198881',
        '0.675491531306495',
        '0.667697264615668'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.748858462130187',
        'topology' => 1207,
        'nodes' => {
          'one' => {},
          'output' => {
            'one' => '2.65420355211295',
            'bias' => '0.0372049195601357',
            'two' => '2.56951006883648',
            '601' => '-1.25431901688534'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '0.565895999242266'
          }
        },
        'elite' => 1,
        'id' => 6256
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.748858462130187',
      'func' => sub { "DUMMY" }
    },
    '5335' => {
      'penalty' => '10.0510863650178',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749816564837872',
        '0.749816564837872',
        '0.749816564837872',
        '0.749816564837872',
        '0.749816564837872',
        '0.749816564837872',
        '0.749816564837872',
        '0.749816564837872',
        '0.749816527131686',
        '0.74981646387861',
        '0.74981644827848',
        '0.74981644827848',
        '0.74981644827848',
        '0.74981472063839',
        '0.74981472063839',
        '0.749814585272284',
        '0.749814444043442',
        '0.749814444043442',
        '0.749795040813096',
        '0.74979504007865',
        '0.74979504007865',
        '0.74979504007865',
        '0.74979504007865',
        '0.749795034657609',
        '0.749795034657609',
        '0.749778602931079',
        '0.749778602931079',
        '0.749778602931079',
        '0.749764091415965',
        '0.749764091415965',
        '0.749764091415965',
        '0.749764091415965',
        '0.749764091415965',
        '0.749764091415965',
        '0.749764091415965'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749816564837872',
        'topology' => 5335,
        'id' => 6382,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.945105813206912',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '0.859890770529036'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.37670019212572',
            '1863' => '-0.989544804182196',
            '4639' => '-0.135800061574209',
            'two' => '3.44886172963334',
            'bias' => '0.0720040188144787',
            '601' => '-0.486306909555659'
          },
          '601' => {
            'one' => '-0.803701691413352',
            '4920' => '0.803646918676541',
            'bias' => '0.319223378748865',
            'two' => '-0.862393121837776'
          },
          '1863' => {
            'one' => '0.458290094563668',
            '4639' => '0.790635358892506',
            'two' => '-0.0480958728125836',
            'bias' => 0,
            '601' => '0.88316747995409'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749816564837872',
      'func' => sub { "DUMMY" }
    },
    '4279' => {
      'penalty' => '10.5077618381029',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '601',
        'one',
        '3880',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'3880\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'3880\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'3880\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'3880\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'3880\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3880\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3880\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749575063370108',
        '0.749575063370108',
        '0.749575063370108',
        '0.749575063370108',
        '0.749575063370108',
        '0.749575054137905',
        '0.749575054137905',
        '0.749575034847075',
        '0.749574976177383',
        '0.749574976177383',
        '0.749574976177383',
        '0.749574976177383',
        '0.749574887657251',
        '0.749574881880867',
        '0.749495985348775',
        '0.749495985348775',
        '0.749495985348775',
        '0.749495933992465',
        '0.749495933992465',
        '0.749495795352631',
        '0.749495795352631',
        '0.749495795352631',
        '0.749495795352631',
        '0.749495784370085',
        '0.749495773420016',
        '0.749495773420016',
        '0.749495773420016',
        '0.749495773420016',
        '0.749495449837069',
        '0.74926542083161',
        '0.74926542083161',
        '0.749232578325606',
        '0.749232578325606',
        '0.749227195635414',
        '0.749227178734065',
        '0.748907865194108',
        '0.74888078482053',
        '0.74888078292271',
        '0.74877773884105'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749575063370108',
        'topology' => 4279,
        'id' => 5793,
        'elite' => 1,
        'nodes' => {
          '3880' => {
            'one' => '0.73179746373819',
            'bias' => 0,
            'two' => '-0.318576434146552',
            '601' => '-0.864148103807789'
          },
          'one' => {},
          '1863' => {
            '3880' => '0.510461612346207',
            'two' => '-0.0764829055989168',
            'bias' => 0,
            '601' => '0.772612246306454'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.12712070205627',
            '1863' => '-1.493015194881',
            'two' => '2.87997945648382',
            'bias' => '0.0449332361453341'
          },
          '601' => {
            'two' => '0.649906486689559',
            'bias' => '0.513100506533696'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749575063370108',
      'func' => sub { "DUMMY" }
    },
    '3131' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'two' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        '3130',
        'one',
        '549',
        '601',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3130\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3130\'}->{\'bias\'}), 5 ); $v->{\'549\'} = sigmoid( ($v->{\'3130\'}*$n->{\'nodes\'}->{\'549\'}->{\'3130\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'549\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'549\'}->{\'one\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'549\'}*$n->{\'nodes\'}->{\'output\'}->{\'549\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'}), 5 ); }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 3131,
        'nodes' => {
          'one' => {},
          '549' => {
            'one' => '0.238577191055728',
            '3130' => '0.280052000644963',
            'bias' => '1.67118658669057'
          },
          'output' => {
            '549' => '1.62707313146835',
            'bias' => '1.5440448156457',
            '601' => '0.104585926966127'
          },
          'bias' => {},
          'two' => {},
          '3130' => {
            'bias' => '0.739405061855966'
          },
          '601' => {
            'bias' => '0.790210681799072'
          }
        },
        'elite' => 1,
        'id' => 3397
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '13228' => {
      'penalty' => '10.539822592976',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '2016',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'2016\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'2016\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'2016\'}*$n->{\'nodes\'}->{\'601\'}->{\'2016\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999995967',
        '0.749999999995967',
        '0.749999999995967',
        '0.749999999995967',
        '0.749999999995967',
        '0.749999999995967',
        '0.749999999995959',
        '0.749999999995959',
        '0.749999999995959',
        '0.749999999995077',
        '0.749999999995063',
        '0.749999999995063',
        '0.749999999995005',
        '0.749999999994833',
        '0.749999999994828',
        '0.749999999994828',
        '0.749999999994828',
        '0.749999999994828',
        '0.749999999994825',
        '0.749999999994825',
        '0.749999999994825',
        '0.749999999994776',
        '0.749999999994758',
        '0.749999999994758',
        '0.749999999994711',
        '0.749999999994711',
        '0.749999999994711',
        '0.749999999994711',
        '0.749999999994711',
        '0.749999999994711',
        '0.749999999994711',
        '0.749999999994711',
        '0.749999999994707',
        '0.749999999994695',
        '0.749999999994662',
        '0.749999999994662'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999995967',
        'topology' => 13228,
        'nodes' => {
          '2016' => {
            'bias' => 1
          },
          '4639' => {
            'one' => '-0.630725112322514',
            'two' => '0.790398146055984',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.620598332675568',
            'bias' => 0,
            'two' => '-0.285498345010385'
          },
          'output' => {
            '1863' => '-3.49902951329644',
            'one' => '8.58808086763542',
            '4920' => '0.182286758457453',
            '4639' => '-0.225383729913947',
            'bias' => '0.0412979821332477',
            'two' => '9.9545846244609',
            '601' => '-1.72010781387963'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            '2016' => '0.283963462201134',
            'one' => '-1.33717746761561',
            '4920' => '0.836034911630805',
            'bias' => 0,
            'two' => '-0.762635831823453'
          },
          '1863' => {
            'one' => '0.406020632741083',
            '4639' => '1.01198415493135',
            'bias' => 0,
            'two' => '-0.0199047281170493',
            '601' => '0.625771964987889'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 14511
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999995967',
      'func' => sub { "DUMMY" }
    },
    '58' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'one' => 1,
        'two' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'output\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'}), 5 ); }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 58,
        'id' => 237,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          'two' => {},
          'bias' => {},
          'output' => {
            'bias' => '-0.370586091954466'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '14077' => {
      'penalty' => '10.9456447604',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'6083\'}->{\'one\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'1863\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.74999999999912',
        '0.74999999999912',
        '0.74999999999912',
        '0.74999999999912',
        '0.74999999999912',
        '0.74999999999912',
        '0.74999999999912',
        '0.74999999999912',
        '0.74999999999912',
        '0.74999999999912',
        '0.749999999999118',
        '0.749999999999117',
        '0.749999999999117',
        '0.7499999999991',
        '0.749999999999086',
        '0.749999999999086',
        '0.749999999999084',
        '0.749999999999084',
        '0.749999999999084',
        '0.749999999998917',
        '0.749999999998916',
        '0.749999999998912',
        '0.749999999998912',
        '0.749999999998912',
        '0.749999999998912',
        '0.749999999998912',
        '0.749999999998697',
        '0.749999999998681',
        '0.749999999998681',
        '0.749999999998681'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.74999999999912',
        'topology' => 14077,
        'nodes' => {
          '4639' => {
            'one' => '-0.696081793387081',
            'two' => '0.795359752289224',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.906969697413272',
            '4639' => '0.678252907017226',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.282984872664875'
          },
          '6083' => {
            'one' => '-0.50320884180239',
            'bias' => '1.02220125048858'
          },
          'output' => {
            '1863' => '-3.41976472661062',
            'one' => '9.21157249375568',
            '4920' => '0.199227809115443',
            '4639' => '-0.232188679973838',
            'bias' => '0.0470970093420521',
            'two' => 10,
            '601' => '-2.20626564132802'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.39094629067759',
            '4920' => '0.767765479402868',
            'bias' => '0.27393835407373',
            'two' => '-0.902420397914554'
          },
          '1863' => {
            'one' => '0.375563324113379',
            '4639' => '0.942711141395208',
            '6083' => '-0.195064415862241',
            'bias' => 0,
            'two' => '-0.024150745922466',
            '601' => '0.585541048652095'
          },
          'one' => {}
        },
        'elite' => 0,
        'id' => 15406
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.74999999999912',
      'func' => sub { "DUMMY" }
    },
    '7188' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        '4920' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '601',
        'one',
        '1863',
        '7106',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7106\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7106\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7106\'}->{\'bias\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'7106\'}*$n->{\'nodes\'}->{\'7065\'}->{\'7106\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749600027475238',
        '0.749600027475238',
        '0.749600027475238',
        '0.749600027475238',
        '0.749600027475238',
        '0.749600027475238',
        '0.749600027475238',
        '0.749600027475238',
        '0.749600027475238',
        '0.749600027475238',
        '0.749600027475238',
        '0.749600027475238',
        '0.749600027464621',
        '0.749600027464621',
        '0.749600027464621',
        '0.749600027464621'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749600027475238',
        'topology' => 7188,
        'id' => 7324,
        'elite' => 1,
        'nodes' => {
          '7106' => {
            '4639' => 1,
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.99496552709397',
            'two' => '-0.288238670638719',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '0.915445154330911'
          },
          '7065' => {
            '7106' => 1,
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.63429257606648',
            '1863' => '-1.2292328069459',
            '7065' => '-0.135800061574209',
            'bias' => 0,
            'two' => '3.8645841593781',
            '601' => '0.074429753902327'
          },
          '601' => {
            'bias' => 1
          },
          '1863' => {
            'one' => '0.513351698528216',
            '4639' => '0.862488012855591',
            'two' => '-0.0485027036571635',
            'bias' => 0,
            '601' => '0.962571724858496'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749600027475238',
      'func' => sub { "DUMMY" }
    },
    '14429' => {
      'penalty' => '10.43049',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999474',
        '0.749999999999474',
        '0.749999999999474',
        '0.749999999999474',
        '0.749999999999462',
        '0.749999999999462',
        '0.749999999999462',
        '0.749999999999462',
        '0.749999999999462',
        '0.749999999999384',
        '0.749999999999384',
        '0.749999999999384',
        '0.749999999999384',
        '0.749999999999384',
        '0.749999999999384',
        '0.749999999999382',
        '0.749999999999378',
        '0.749999999999378',
        '0.749999999999378',
        '0.749999999999377',
        '0.749999999999271',
        '0.749999999999271',
        '0.749999999999271',
        '0.749999999999271',
        '0.749999999999271'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999999474',
        'topology' => 14429,
        'id' => 15520,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '0.996360692422297',
            '4639' => '0.724986398956696',
            'two' => '-0.306836166572256',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.76797062464415',
            'bias' => 0,
            'two' => '0.876236404654732'
          },
          '7065' => {
            '4639' => '1.09782193163656',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.06064600213941',
            '1863' => '-3.86492025294249',
            '4920' => '0.18754681180045',
            '7065' => '-0.22179316798114',
            'two' => 10,
            'bias' => '0.0433345357914128',
            '601' => '-1.96238364651087'
          },
          '6083' => {
            'bias' => '1.0457235387187'
          },
          '601' => {
            'one' => '-1.65619316303591',
            '4920' => '0.716137808402378',
            'two' => '-1.03063995846002',
            'bias' => '0.240681975401624'
          },
          '1863' => {
            'one' => '0.454962201102022',
            '4639' => '0.848780256664492',
            'two' => '-0.0238241561712336',
            'bias' => 0,
            '601' => '0.606354610564411'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999999474',
      'func' => sub { "DUMMY" }
    },
    '5528' => {
      'penalty' => '10.1892902797932',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749935372378847',
        '0.749935372378847',
        '0.749935372378847',
        '0.749935372378847',
        '0.749935372378847',
        '0.749935372378847',
        '0.749929849877362',
        '0.749929849877362',
        '0.749907087455319',
        '0.74989414264151',
        '0.74989414264151',
        '0.74989414264151',
        '0.74989414264151',
        '0.749876538675823',
        '0.749876538675823',
        '0.749876288644703',
        '0.7498659548481',
        '0.749857171242547',
        '0.749857171242547',
        '0.749857171242547',
        '0.749857171242547',
        '0.749842748262095',
        '0.749842748262095',
        '0.749842748262095',
        '0.749842669271854',
        '0.749842669271854',
        '0.749842667618544',
        '0.749842667618544',
        '0.749841769041703',
        '0.749841769041703',
        '0.749841769041703',
        '0.749841608915022',
        '0.749841608915022',
        '0.749841608915022',
        '0.749791386968111',
        '0.749770159495284',
        '0.749766004274652',
        '0.749766004110709',
        '0.749766000516586',
        '0.749766000516586',
        '0.749765979282669',
        '0.749765979282669',
        '0.749765979282669',
        '0.749765978634087'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749935372378847',
        'topology' => 5528,
        'id' => 7002,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.99496552709397',
            'two' => '-0.288238670638719',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => 1
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.63429257606648',
            '1863' => '-1.2292328069459',
            '4639' => '-0.135800061574209',
            'two' => '3.8645841593781',
            'bias' => '0.074429753902327',
            '601' => '-0.486306909555659'
          },
          '601' => {
            'one' => '-0.88264688394766',
            '4920' => '0.803646918676541',
            'bias' => '0.307932848437218'
          },
          '1863' => {
            'one' => '0.513351698528216',
            '4639' => '0.862488012855591',
            'two' => '-0.0485027036571635',
            'bias' => 0,
            '601' => '0.962571724858496'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749935372378847',
      'func' => sub { "DUMMY" }
    },
    '11664' => {
      'penalty' => '10.1915239836302',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        '601' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        '3756',
        'one',
        'two',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3756\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3756\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3756\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3756\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999991411392',
        '0.749999991411392',
        '0.749999991411392',
        '0.749999991411392',
        '0.749999991411392',
        '0.749999991411392',
        '0.749999991261048',
        '0.749999990222312',
        '0.749999990222312',
        '0.749999990222312',
        '0.749999990222312',
        '0.749999990222312',
        '0.749999990222312',
        '0.749999990161625',
        '0.749999990161625',
        '0.749999989384589',
        '0.7499999888469',
        '0.7499999888469',
        '0.7499999888469',
        '0.749999988688248',
        '0.749999984363987',
        '0.749999984363987',
        '0.749999984223224',
        '0.749999984223224',
        '0.749999984223224',
        '0.74999996141236',
        '0.749999960200745',
        '0.749999960200745',
        '0.749999959781409',
        '0.749999920322823',
        '0.749999920322823',
        '0.749999919720731',
        '0.749999919720731',
        '0.749999902335246',
        '0.749999902335246',
        '0.749999893702047',
        '0.749999893702047',
        '0.749999893702047',
        '0.749999893702047',
        '0.749999870849675',
        '0.749999870849675',
        '0.749999852767361',
        '0.749999852767361',
        '0.749999852767361',
        '0.749999847469523',
        '0.749999847469523',
        '0.749999847469523',
        '0.749999799377311',
        '0.749999799377311',
        '0.749999799377311',
        '0.749999515188161',
        '0.749999423177119',
        '0.749999421024083',
        '0.749998994036613',
        '0.749998705454105',
        '0.749997031633443',
        '0.749997031633443',
        '0.749997031633443',
        '0.749994388168965',
        '0.749989673795495',
        '0.749987704204323',
        '0.749984717042929',
        '0.749979863241622',
        '0.749979442928775',
        '0.749976712164196',
        '0.749976712164196',
        '0.749976712164196',
        '0.749976712164196',
        '0.749976712164196',
        '0.749976712164196',
        '0.749976712164196'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999991411392',
        'topology' => 11664,
        'nodes' => {
          '3756' => {
            'bias' => 0
          },
          '1863' => {
            '3756' => '0.727118138574185',
            'one' => '-0.648448414092267',
            'bias' => 0,
            'two' => '-0.149705763937483'
          },
          'one' => {},
          'output' => {
            '1863' => '-4.09531007525568',
            'one' => '5.12946521681667',
            'bias' => '0.0629098529541624',
            'two' => '6.882973835838'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '0.630739983939633'
          }
        },
        'elite' => 1,
        'id' => 14829
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999991411392',
      'func' => sub { "DUMMY" }
    },
    '982' => {
      'penalty' => '10.4511084672663',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '981',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'981\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'981\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'981\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'981\'}*$n->{\'nodes\'}->{\'output\'}->{\'981\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.537488927280153',
        '0.537488927280153',
        '0.537488927280153',
        '0.537488927280153',
        '0.537488927280153',
        '0.537488927280153',
        '0.537488927280153',
        '0.537488927280153',
        '0.537488927280153',
        '0.537487640883665',
        '0.537487640883665',
        '0.537484196491617',
        '0.537480262308732',
        '0.537480262308732',
        '0.537464109239153',
        '0.537447074725401',
        '0.537401853624739',
        '0.537401853624739',
        '0.537401853624739',
        '0.537368859301936',
        '0.537368859301936',
        '0.537368859301936',
        '0.537368859301936',
        '0.537343212790213',
        '0.537343212790213',
        '0.537337138791714',
        '0.53728915047218',
        '0.53728915047218',
        '0.53728915047218',
        '0.537252714412142',
        '0.537238273678063',
        '0.537187865368961',
        '0.537187865368961',
        '0.53716463640205',
        '0.537083581806147',
        '0.537083581806147',
        '0.537063168799723',
        '0.537054951732037',
        '0.537054951732037',
        '0.537054951732037',
        '0.536931712004909',
        '0.536815468796161',
        '0.536759319801182',
        '0.536418177098733',
        '0.535538354936104',
        '0.535314367706689',
        '0.534926421217559',
        '0.534803919298475',
        '0.533652904969974',
        '0.533578026589661',
        '0.531362756624839'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.537488927280153',
        'topology' => 982,
        'id' => 3827,
        'elite' => 1,
        'nodes' => {
          '981' => {
            'two' => '2.03480371770159',
            'bias' => 0
          },
          'one' => {},
          'two' => {},
          'bias' => {},
          'output' => {
            '981' => '0.434739434567684',
            'one' => '1.52081447197135',
            'bias' => 0
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.537488927280153',
      'func' => sub { "DUMMY" }
    },
    '5173' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'two' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'}), 5 ); }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 5173,
        'nodes' => {
          'one' => {},
          '1863' => {
            'bias' => 0,
            '601' => 1
          },
          'output' => {
            '1863' => '-0.390562420329345',
            'bias' => 0
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '0.610887394894519',
            'bias' => '1.04155149256474'
          }
        },
        'elite' => 1,
        'id' => 5172
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '4103' => {
      'penalty' => '10.916405003975',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '3880',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3880\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3880\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'3880\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'3880\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3880\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3880\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.74962084723295',
        '0.74962084723295',
        '0.74962084723295',
        '0.74962084723295',
        '0.749616095975503',
        '0.749464918909279',
        '0.749464918909279',
        '0.749464918909279',
        '0.749464918909279',
        '0.749464918909279',
        '0.749464918909279',
        '0.749464918909279',
        '0.749464918909279',
        '0.749464918714547',
        '0.749464918555637',
        '0.749464918555637',
        '0.749464918555637',
        '0.749359660477355',
        '0.749359660477355',
        '0.749346119255031',
        '0.749053667490077',
        '0.749053667490077',
        '0.749016616677376',
        '0.749015697703103',
        '0.749015697703103',
        '0.749015697243592',
        '0.749015696444304',
        '0.749015696444304',
        '0.749015696444304',
        '0.749015695269861',
        '0.749015674988254',
        '0.749015487971002',
        '0.749015487971002',
        '0.749015487971002',
        '0.749015480561104',
        '0.749015480561104',
        '0.749015480561104',
        '0.749015480561104',
        '0.74901321988656',
        '0.749013205437639',
        '0.749013205437639',
        '0.749013205437639',
        '0.749013205437639',
        '0.749012352207785',
        '0.749007629692128',
        '0.749005616711194',
        '0.749005612929446',
        '0.749005612929446',
        '0.749004904079168',
        '0.749004902684512',
        '0.748948641732007',
        '0.748948641732007',
        '0.748948641732007',
        '0.748948641732007',
        '0.748865699230633',
        '0.748865699230633',
        '0.74886363438004',
        '0.748863612309581',
        '0.748863612309581',
        '0.748841360649219',
        '0.748841360649219',
        '0.748841360608822',
        '0.748551066671562',
        '0.748551066671562',
        '0.748369366807807',
        '0.748369366807807'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.74962084723295',
        'topology' => 4103,
        'id' => 6690,
        'elite' => 1,
        'nodes' => {
          '3880' => {
            'one' => '0.756879216873055',
            'bias' => 0,
            'two' => '-0.227212419452429'
          },
          'one' => {},
          '1863' => {
            'one' => '0.684234911606484',
            '3880' => '0.706942264896653',
            'two' => '-0.0839146390398173',
            'bias' => 0,
            '601' => '0.899224220681914'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '2.89595348659872',
            '1863' => '-1.48324075032607',
            'two' => '3.35910672779265',
            'bias' => '0.0491493808384382'
          },
          '601' => {
            'two' => '0.681142247669509',
            'bias' => '0.446516249759546'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.74962084723295',
      'func' => sub { "DUMMY" }
    },
    '5047' => {
      'penalty' => '10.9323773550002',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749812251693218',
        '0.749812251693218',
        '0.749812251693218',
        '0.749788851452541',
        '0.749788851452541',
        '0.749788594515729',
        '0.749788594515729',
        '0.749788594515729',
        '0.749788594515729',
        '0.749787845842392',
        '0.749787845842392',
        '0.749787845842392',
        '0.749787845842392',
        '0.749787127279433',
        '0.749787127279433',
        '0.749787127279433',
        '0.749787127279433',
        '0.749787127279433',
        '0.749787011732754',
        '0.749787011732754',
        '0.749787011732754',
        '0.749787011732754',
        '0.749787011732754',
        '0.749787011732754',
        '0.749786667890459',
        '0.749786667890459',
        '0.749786667890459',
        '0.749786667890459',
        '0.749786667890459',
        '0.749785818205043',
        '0.749785591885466',
        '0.74976595100919',
        '0.74976595100919',
        '0.74976595100919',
        '0.749765920884085',
        '0.749765920884085',
        '0.749732519718113',
        '0.749732519718113',
        '0.749731620179184',
        '0.749731620179184',
        '0.749731620179184',
        '0.749722526753031',
        '0.749722526753031',
        '0.749722526753031'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749812251693218',
        'topology' => 5047,
        'nodes' => {
          '4639' => {
            'two' => '1.06855034964384',
            'bias' => 0
          },
          '4920' => {
            '4639' => '1.00151218181363',
            'bias' => 0
          },
          'output' => {
            '1863' => '-1.1196944034308',
            'one' => '3.13046589174461',
            '4639' => '-0.118498368827803',
            'bias' => '0.0762757082463963',
            'two' => '3.5546392007944',
            '601' => '-0.490854528454534'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.787089729452687',
            '4920' => '0.835885616686823',
            'bias' => '0.376997556863956'
          },
          '1863' => {
            'one' => '0.498405425868277',
            '4639' => '0.779876889688861',
            'bias' => 0,
            'two' => '-0.0466462481532859',
            '601' => '0.897015846426528'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 6655
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749812251693218',
      'func' => sub { "DUMMY" }
    },
    '15653' => {
      'penalty' => '0.729',
      'max' => '0.749957471940443',
      'adj-total' => '0.749957471940442',
      'ignore' => {},
      'adj-count' => 1,
      'order' => [
        'bias',
        'two',
        '4639',
        '2016',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'2016\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'2016\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'2016\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'2016\'}*$n->{\'nodes\'}->{\'601\'}->{\'2016\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749957471940443',
        '0.749953533440705',
        '0.749918627524831',
        '0.749918626165038',
        '0.749918626165038',
        '0.749910464379957',
        '0.749891510864205',
        '0.749869981241849',
        '0.749827136217267',
        '0.749827136217267'
      ],
      'count' => 3,
      'adjusted' => '0.749953533431587',
      'avg' => '0.749955316128951',
      'min' => '0.749953533440705',
      'last' => '0.749930250291988',
      'champion' => {
        'fitness' => '0.749953533440705',
        'topology' => 15653,
        'nodes' => {
          '2016' => {
            'two' => '-0.849703792546167',
            'bias' => '0.894854484760917'
          },
          '4639' => {
            'two' => '0.9670509098087',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.943597909303996',
            'bias' => 0
          },
          'output' => {
            '1863' => '-1.28491553943036',
            'one' => '3.77301971610763',
            '4639' => '-0.130755200010055',
            'bias' => '0.0781168395462866',
            'two' => '3.9352972100842',
            '601' => '-0.553957534143827'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            '2016' => '0.279298318746205',
            'one' => '-0.683615446607632',
            '4920' => '0.727840960217013',
            '4639' => '0.192490909306895',
            'bias' => 0
          },
          '1863' => {
            'one' => '0.380639066296856',
            '4639' => '0.66086535582586',
            'bias' => 0,
            'two' => '-0.0573982761477687',
            '601' => '1.06353068834619'
          },
          'one' => {}
        },
        'elite' => 0,
        'id' => 16095
      },
      'adj-avg' => '0.749957471940442',
      'total' => '2.24986594838685',
      'offspring' => 0,
      'members' => [
        16156,
        16157,
        16095
      ],
      'best' => '0.749957471940443',
      'func' => sub { "DUMMY" }
    },
    '4402' => {
      'penalty' => '10.120711204261',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749706858570259',
        '0.749706858570259',
        '0.749706858570259',
        '0.749706858570259',
        '0.749706858570259',
        '0.749698231687886',
        '0.749635498192909',
        '0.749635498192909',
        '0.749507479086265',
        '0.749507479086265',
        '0.749507479086265',
        '0.749507479086265',
        '0.749507479086265',
        '0.749505327168668',
        '0.749505327168668',
        '0.749505327168668',
        '0.749505327168668',
        '0.749505325900914',
        '0.749505325900914',
        '0.749505325900914',
        '0.749505325900914',
        '0.749505325900914',
        '0.749505325900914',
        '0.749505231181176',
        '0.74950522903632',
        '0.749505176377314',
        '0.749505176377314',
        '0.749335838684898',
        '0.749330010542037',
        '0.749326649127695',
        '0.749326043147927',
        '0.749326043147927',
        '0.749326043147927',
        '0.749326043147927',
        '0.749325024135717',
        '0.7493192706168',
        '0.7493192706168',
        '0.749318947183693',
        '0.749318947183693',
        '0.749318947183693',
        '0.749318947183693',
        '0.749318927038156',
        '0.749318927038156',
        '0.749318554602059',
        '0.749318554602059',
        '0.749318554602059',
        '0.749318554602059',
        '0.749318546108845',
        '0.749303320853604',
        '0.749303143177156',
        '0.749303143177156',
        '0.749303143177156',
        '0.749303143177156',
        '0.749302947324182',
        '0.749265787995378',
        '0.749265787995378',
        '0.748951209799978'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749706858570259',
        'topology' => 4402,
        'id' => 6501,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          '1863' => {
            'one' => '0.403345827442321',
            'two' => '-0.0516906567028845',
            'bias' => 0,
            '601' => '0.933149175914758'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.22511404801699',
            '1863' => '-1.02991283022506',
            'two' => '3.9343930768336',
            'bias' => '0.0717920131561404',
            '601' => '-0.471460758204039'
          },
          '601' => {
            'one' => '0.628820806582382',
            'two' => '0.744390260169345',
            'bias' => '0.462366159313434'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749706858570259',
      'func' => sub { "DUMMY" }
    },
    '13977' => {
      'penalty' => '10.2832604221475',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '13976',
        '13725',
        'one',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'13976\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'13976\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'13976\'}->{\'two\'}), 5 ); $v->{\'13725\'} = sigmoid( ($v->{\'13976\'}*$n->{\'nodes\'}->{\'13725\'}->{\'13976\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'13725\'}->{\'bias\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'13725\'}*$n->{\'nodes\'}->{\'4639\'}->{\'13725\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'1863\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999181',
        '0.749999999999181',
        '0.749999999999181',
        '0.749999999999181',
        '0.749999999999181',
        '0.749999999999181',
        '0.749999999999128',
        '0.749999999999128',
        '0.749999999999128',
        '0.749999999999128',
        '0.749999999999122',
        '0.749999999999121',
        '0.749999999998946',
        '0.749999999998946',
        '0.749999999998946',
        '0.749999999998946',
        '0.749999999998743',
        '0.749999999998743',
        '0.74999999999874',
        '0.74999999999874',
        '0.749999999998739',
        '0.749999999998739',
        '0.749999999998722',
        '0.749999999998722',
        '0.749999999998722',
        '0.749999999998722',
        '0.749999999998722',
        '0.749999999998499',
        '0.749999999998499',
        '0.749999999998499',
        '0.749999999998499',
        '0.749999999998499',
        '0.749999999998497',
        '0.749999999998497',
        '0.749999999998497',
        '0.749999999998497'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999999181',
        'topology' => 13977,
        'id' => 15369,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '0.88628366724818',
            '4639' => '0.610867076254326',
            'two' => '-0.267275245816371',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.643529141730844',
            '13725' => '0.817081109844445',
            'bias' => 0
          },
          '13725' => {
            'bias' => 0,
            '13976' => '0.950658920172488'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => 10,
            '1863' => '-3.57781425250634',
            '4639' => '-0.211430695088364',
            '4920' => '0.199972211861669',
            'two' => '9.86813797660469',
            'bias' => '0.0466621241560169',
            '601' => '-1.85094715555944'
          },
          '6083' => {
            'bias' => '0.985703107737099'
          },
          '601' => {
            'one' => '-1.59949663608164',
            '4920' => '0.762546075180535',
            'two' => '-0.91919399828992',
            'bias' => '0.232811800660776'
          },
          '1863' => {
            'one' => '0.340828131949467',
            '4639' => '1.06028753652026',
            'two' => '-0.0225048066611198',
            'bias' => 0,
            '6083' => '-0.200362706684033',
            '601' => '0.627827419196579'
          },
          'one' => {},
          '13976' => {
            'bias' => 0,
            'two' => '0.967483210865569'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999999181',
      'func' => sub { "DUMMY" }
    },
    '13425' => {
      'penalty' => '10.462237267',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999994988',
        '0.749999999994988',
        '0.749999999994988',
        '0.749999999994988',
        '0.749999999994988',
        '0.749999999994983',
        '0.749999999994715',
        '0.749999999994715',
        '0.749999999994703',
        '0.749999999994703',
        '0.749999999994703',
        '0.749999999994703',
        '0.749999999994703',
        '0.749999999994703',
        '0.749999999994701',
        '0.749999999994696',
        '0.749999999994696',
        '0.749999999994696',
        '0.749999999994673',
        '0.749999999994673',
        '0.749999999994673',
        '0.749999999994673',
        '0.74999999999116',
        '0.74999999999116',
        '0.74999999999116',
        '0.74999999999116',
        '0.74999999999116',
        '0.749999999990777',
        '0.749999999990777',
        '0.74999999999049'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999994988',
        'topology' => 13425,
        'id' => 14556,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '0.904091754532368',
            '4639' => '0.720574731110126',
            'two' => '-0.26500833813056',
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.651834634239613',
            'bias' => 0,
            'two' => '0.889231324646684'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.46886116931235',
            '1863' => '-3.51566986178879',
            '4639' => '-0.201883125475293',
            '4920' => '0.21150001280598',
            'two' => 10,
            'bias' => '0.044867527969571',
            '601' => '-1.67936344487681'
          },
          '601' => {
            'one' => '-1.56374608385209',
            '4639' => '0.335121514424429',
            '4920' => '0.744030683520843',
            'two' => '-0.853737249525915',
            'bias' => '0.217453638980402'
          },
          '1863' => {
            'one' => '0.404982107711377',
            '4920' => '0.962182632966389',
            '4639' => '0.903510835769449',
            'two' => '-0.0209548172935595',
            'bias' => 0,
            '601' => '0.574539279201222'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999994988',
      'func' => sub { "DUMMY" }
    },
    '6007' => {
      'penalty' => '10.81',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749739940134071',
        '0.749739940134071',
        '0.749739940134071',
        '0.749739940134071',
        '0.749739940134071',
        '0.749739940134071',
        '0.749739940134071',
        '0.749739940134071',
        '0.749739940134071',
        '0.749739940134071',
        '0.749739940134071',
        '0.749655371019394',
        '0.749649156438348',
        '0.749649156438348',
        '0.749649156438348',
        '0.749649083747923',
        '0.749649083747923',
        '0.749649083747923',
        '0.749289903208524'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749739940134071',
        'topology' => 6007,
        'nodes' => {
          '4639' => {
            'two' => 1,
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.962397480833647',
            'bias' => 0,
            'two' => '-0.265499719370495'
          },
          'output' => {
            '1863' => '-1.06034219359517',
            'one' => '3.81766221517138',
            '4639' => '-0.135800061574209',
            '4920' => '-0.596121916044467',
            'bias' => '0.074429753902327',
            'two' => '3.57951348142397',
            '601' => '-0.486306909555659'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.88264688394766',
            '4920' => '0.803646918676541',
            'bias' => '0.321085511447368'
          },
          '1863' => {
            'one' => '0.468646083959285',
            '4639' => '0.755168407043204',
            'bias' => 0,
            'two' => '-0.0485027036571635',
            '601' => '0.88316747995409'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 6578
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749739940134071',
      'func' => sub { "DUMMY" }
    },
    '14192' => {
      'penalty' => '10.703641',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999114',
        '0.749999999999114',
        '0.749999999999114',
        '0.749999999999114',
        '0.749999999999114',
        '0.749999999999114',
        '0.749999999999022',
        '0.749999999999022',
        '0.749999999999022',
        '0.749999999999022',
        '0.749999999999022',
        '0.749999999999022',
        '0.749999999999022',
        '0.749999999999022',
        '0.749999999998935',
        '0.749999999998935',
        '0.749999999998935',
        '0.749999999998927',
        '0.749999999998907',
        '0.749999999998907',
        '0.749999999998686',
        '0.749999999998686',
        '0.749999999998668',
        '0.749999999998668'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999999114',
        'topology' => 14192,
        'nodes' => {
          '4639' => {
            'one' => '-0.712169200326607',
            'two' => '0.924984555287825',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.970834714833647',
            '4639' => '0.628419815760936',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.266531617884673'
          },
          '6083' => {
            'bias' => '1.04462325457099'
          },
          'output' => {
            '1863' => '-3.68486456385691',
            'one' => 10,
            '4920' => '0.188615895985108',
            '4639' => '-0.22371578464281',
            'bias' => '0.0515912294955894',
            'two' => 10,
            '601' => '-1.80498600987678'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.50986179336065',
            '4920' => '0.735736431950174',
            'bias' => '0.234845679890049',
            'two' => '-0.894252009528762'
          },
          '1863' => {
            'one' => '0.45457465638839',
            '4920' => '0.507429247489604',
            '4639' => '0.905644144003548',
            'bias' => 0,
            'two' => '-0.0190850011534445',
            '601' => '0.650026667208747'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 14958
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999999114',
      'func' => sub { "DUMMY" }
    },
    '3243' => {
      'penalty' => '10.5782659595367',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        'one',
        'two',
        '1863',
        '549',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'549\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'549\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'549\'}->{\'one\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'549\'}*$n->{\'nodes\'}->{\'output\'}->{\'549\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749993166396242',
        '0.749993166396242',
        '0.749993166396242',
        '0.749993166396242',
        '0.749993166396242',
        '0.749993166396242',
        '0.749993166396242',
        '0.749989387351431',
        '0.74998928925483',
        '0.749987254715333',
        '0.749987254715333',
        '0.749987003852249',
        '0.749986590486836',
        '0.74998090676821',
        '0.74998090676821',
        '0.74998090676821',
        '0.74998090676821',
        '0.74998090676821',
        '0.749977682842127',
        '0.749957280780808',
        '0.749957280780808',
        '0.749957280780808',
        '0.749955131306179',
        '0.749955083986637',
        '0.749950899065198',
        '0.749950899065198',
        '0.749924315245504',
        '0.749924315245504',
        '0.749924315245504',
        '0.749918851436368',
        '0.749907981672874',
        '0.749906000820652',
        '0.749902501980145',
        '0.749898167994834',
        '0.749895932598522',
        '0.749878886722274',
        '0.749875284174329',
        '0.749871527863823',
        '0.749871527863823',
        '0.749859233709605',
        '0.749760289599731',
        '0.749760289599731',
        '0.749720255705445',
        '0.749492969168188',
        '0.749492969168188',
        '0.749370814944196',
        '0.749184465150872',
        '0.748997707749218',
        '0.748685806133504',
        '0.748648069152843',
        '0.748647968091558',
        '0.748647968091558',
        '0.748412933690238',
        '0.748412933690238',
        '0.748412933690238',
        '0.748412933690238',
        '0.74841260115768',
        '0.748195093890547',
        '0.747258819332691',
        '0.747224905291565',
        '0.747224905291565',
        '0.747224638740748',
        '0.746186254487234',
        '0.746186254487234',
        '0.745791910692316',
        '0.745724845062728',
        '0.742985447217045',
        '0.741790255233496',
        '0.741790255233496',
        '0.741781327574393',
        '0.741774859263943',
        '0.741763061955548',
        '0.741763061955548',
        '0.741602828432828',
        '0.741602828432828',
        '0.741321039698117',
        '0.741321039698117',
        '0.741321039698117',
        '0.741321039698117',
        '0.741302859704332',
        '0.741302859704332',
        '0.741302859704332',
        '0.741302124512849',
        '0.741302124512849',
        '0.741302124512849',
        '0.741218380990029',
        '0.741218380990029',
        '0.740927711242387',
        '0.74030238522462',
        '0.74030238522462',
        '0.74030238522462',
        '0.74030238522462',
        '0.74030238522462',
        '0.737440189313477',
        '0.737436105313015',
        '0.737436105313015',
        '0.736399974369772',
        '0.736301401300895',
        '0.736301401300895',
        '0.736301401300895'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749993166396242',
        'topology' => 3243,
        'id' => 11171,
        'elite' => 1,
        'nodes' => {
          '549' => {
            'one' => '-1.65853752106408',
            'bias' => '0.414976431725553'
          },
          'one' => {},
          '1863' => {
            'one' => '1.07342970640669',
            'two' => '1.3856593210062',
            'bias' => '-0.438006480229347',
            '601' => '-0.536075468784156'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            '549' => '-2.95446417295716',
            '1863' => '3.12771558256285',
            'two' => '1.95301331756377',
            'bias' => '0.447433951119924'
          },
          '601' => {
            'bias' => '0.534658527869436'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749993166396242',
      'func' => sub { "DUMMY" }
    },
    '4600' => {
      'penalty' => '10.9141',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '4599',
        'two',
        '601',
        'one',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4599\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4599\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4599\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4599\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749581339295205',
        '0.749581339295205',
        '0.749581339295205',
        '0.749581339295205',
        '0.749581339295205',
        '0.749581339295205',
        '0.749581339295205',
        '0.749581339295205',
        '0.749581338968365',
        '0.749581338968365',
        '0.749581338968365',
        '0.749581338968365',
        '0.74958130095067',
        '0.74958130095067',
        '0.74958130095067',
        '0.74950407993925',
        '0.74950407993925',
        '0.74950407993925',
        '0.749490145579674',
        '0.749490026036392',
        '0.749490026036392'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749581339295205',
        'topology' => 4600,
        'id' => 5394,
        'elite' => 0,
        'nodes' => {
          '4599' => {
            'bias' => '1.08039080583827'
          },
          'one' => {},
          '1863' => {
            '4599' => 0,
            'one' => '0.499052651314685',
            'two' => '-0.0443270863407186',
            'bias' => 0,
            '601' => '0.968524587865733'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '2.99050426066213',
            '1863' => '-1.05263877901247',
            'two' => '3.14927581474822',
            'bias' => '0.0758417247612818',
            '601' => '-0.463509631260245'
          },
          '601' => {
            'two' => '0.753414982972928',
            'bias' => '0.321085511447368'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749581339295205',
      'func' => sub { "DUMMY" }
    },
    '6242' => {
      'penalty' => '10.245290473648',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749970112234067',
        '0.749970112234067',
        '0.749970112234067',
        '0.749970112234067',
        '0.749970112234067',
        '0.749968744956025',
        '0.749968736087741',
        '0.749968736087741',
        '0.749968736087741',
        '0.749968736087741',
        '0.749968736087741',
        '0.749923928927145',
        '0.749923928927145',
        '0.749923928927145',
        '0.749923928927145',
        '0.749920301688375',
        '0.749920301688375',
        '0.749920301633451',
        '0.749920237066134',
        '0.749884461880843',
        '0.749884300500874',
        '0.749881572544507',
        '0.749881572544507',
        '0.749881568934021',
        '0.749863452061561',
        '0.749815716262622',
        '0.749815715759227',
        '0.74981569686891',
        '0.74981569686891',
        '0.749815671061791',
        '0.749815671061791',
        '0.749815671061791',
        '0.749815671061791',
        '0.749815601856942',
        '0.749815601856942',
        '0.749815601856942',
        '0.749815601856942',
        '0.749815601856942',
        '0.749815249237512',
        '0.749815237042751',
        '0.749810528161461',
        '0.749810528161461',
        '0.749810528161461',
        '0.749810528161461',
        '0.749810521222156',
        '0.749810066122129',
        '0.749801491936598',
        '0.749801491936598',
        '0.749801487382239',
        '0.749801487382239',
        '0.749801487382239',
        '0.749801487382239',
        '0.749801485140101',
        '0.749801485140101',
        '0.749801008679538',
        '0.749801008679538',
        '0.749801008679538',
        '0.749801008679538',
        '0.749801008679538',
        '0.749801008679538',
        '0.749798434010737',
        '0.749798434010737',
        '0.749797940846058',
        '0.749797934166511',
        '0.749797934166511',
        '0.749727741707872',
        '0.74972773227392'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749970112234067',
        'topology' => 6242,
        'nodes' => {
          '4639' => {
            'two' => '0.812423009477571',
            'bias' => 0
          },
          '4920' => {
            '4639' => '1.0810219962318',
            'bias' => 0,
            'two' => '-0.241871066334557'
          },
          'output' => {
            '1863' => '-1.46083018496825',
            'one' => '3.87997863793888',
            '4639' => '-0.164993310635557',
            '4920' => '0.211966412142366',
            'bias' => '0.0838317128783062',
            'two' => '4.05124379062659',
            '601' => '-0.65586552594454'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.91287035346014',
            '4920' => '0.87295499455803',
            'bias' => '0.212056381249809'
          },
          '1863' => {
            'one' => '0.535139276295264',
            '4639' => '0.848121844903428',
            '4920' => '0.405406710723942',
            'bias' => 0,
            'two' => '-0.0471301688212231',
            '601' => '0.800005970754634'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 9331
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749970112234067',
      'func' => sub { "DUMMY" }
    },
    '1864' => {
      'penalty' => '10.91773971964',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        '1863',
        'one',
        'two',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.745969901754506',
        '0.745969901754506',
        '0.745969901754506',
        '0.745969901754506',
        '0.745969901754506',
        '0.745969901754506',
        '0.745609341702189',
        '0.745609341702189',
        '0.745609341702189',
        '0.744749243968136',
        '0.744749243968136',
        '0.744009205271531',
        '0.744009205271531',
        '0.743926410248295',
        '0.743926410248295',
        '0.743926410248295',
        '0.743926410248295',
        '0.74347413053369',
        '0.743229786914846',
        '0.74287007812508',
        '0.742705522525414',
        '0.742705522525414',
        '0.741599501596933',
        '0.741599501596933',
        '0.741599501596933',
        '0.741179836814197',
        '0.740668086671528',
        '0.740668086671528',
        '0.740242100911895',
        '0.739058442799266',
        '0.738812085744003',
        '0.738447890752444',
        '0.738436206832422',
        '0.738436206832422',
        '0.738436206832422',
        '0.738213385023694',
        '0.735312018344703',
        '0.735312018344703',
        '0.73379238318961',
        '0.732248987372361',
        '0.732239261048833',
        '0.732239261048833',
        '0.732174853990093',
        '0.727541637680123',
        '0.727541637680123',
        '0.726573149631871',
        '0.72515118979191',
        '0.72455170683111',
        '0.720066271327892',
        '0.718488925006543'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.745969901754506',
        'topology' => 1864,
        'nodes' => {
          '1863' => {
            'bias' => 0,
            '601' => '1.38327289499224'
          },
          'one' => {},
          'output' => {
            '1863' => '-0.937573044800288',
            'one' => '2.04335875136065',
            'bias' => '0.0589093253029024',
            'two' => '2.28862889315375'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '0.37696297772046'
          }
        },
        'elite' => 1,
        'id' => 4609
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.745969901754506',
      'func' => sub { "DUMMY" }
    },
    '5133' => {
      'penalty' => '10.8578405835849',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '2016',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'2016\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'2016\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'2016\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'2016\'}*$n->{\'nodes\'}->{\'601\'}->{\'2016\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749820595733288',
        '0.749820595733288',
        '0.749820595733288',
        '0.74982056581994',
        '0.74982056581994',
        '0.74982056581994',
        '0.74982056581994',
        '0.74982056581994',
        '0.749820465516978',
        '0.749820465516978',
        '0.749820446497094',
        '0.749820446497094',
        '0.749820422373209',
        '0.749820422373209',
        '0.749820422373209',
        '0.749820422373209',
        '0.749820422373209',
        '0.749820184438915',
        '0.749806751172279',
        '0.749806751172279',
        '0.749806751172279',
        '0.749806652407943',
        '0.749806597231042',
        '0.749806597231042',
        '0.749806597231042',
        '0.749797670801185',
        '0.749797670801185',
        '0.749771623153659',
        '0.749726697014844',
        '0.749724908113501',
        '0.749724908113501',
        '0.749724440354894',
        '0.749724440354894',
        '0.749724430489753',
        '0.749724430489753',
        '0.74972437870729',
        '0.74972437870729',
        '0.74972437870729',
        '0.74972437870729',
        '0.749724376606024',
        '0.749724376606024',
        '0.749724289666373',
        '0.749724289666373',
        '0.749724289666373',
        '0.749724289666373',
        '0.749724289666373',
        '0.749724289666373',
        '0.749724136390736',
        '0.749724136390736',
        '0.749724136390736',
        '0.749724005303336',
        '0.749724005303336',
        '0.749723882360259',
        '0.749723882360259',
        '0.749723882360259',
        '0.749723882360259',
        '0.749723882360259',
        '0.749723882360259',
        '0.749723882360259',
        '0.749723417906545',
        '0.749722934705794',
        '0.749722922874794',
        '0.749722922874794',
        '0.749722922874794'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749820595733288',
        'topology' => 5133,
        'nodes' => {
          '2016' => {
            'two' => '-0.84772740650048',
            'bias' => '0.829720017663014'
          },
          '4639' => {
            'two' => '0.854049255364727',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.916762203880943',
            'bias' => 0
          },
          'output' => {
            '1863' => '-1.12241959861826',
            'one' => '3.20523224797128',
            '4639' => '-0.135800061574209',
            'bias' => '0.0733596993053918',
            'two' => '3.36134986910587',
            '601' => '-0.483905214081535'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            '2016' => '0.317621286415002',
            'one' => '-0.803701691413352',
            '4920' => '0.764666697355155',
            'bias' => 0
          },
          '1863' => {
            'one' => '0.380677607715101',
            '4639' => '0.777362644062006',
            'bias' => 0,
            'two' => '-0.0512454674765799',
            '601' => '0.90105846692512'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 7524
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749820595733288',
      'func' => sub { "DUMMY" }
    },
    '13291' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749868603212429',
        '0.749868603212429',
        '0.749868603212429',
        '0.749868603212429',
        '0.749868603212429',
        '0.749868603212429',
        '0.749868603212429',
        '0.749868603212429',
        '0.749868603212429',
        '0.749868603212429',
        '0.749868603212429',
        '0.749868603212429',
        '0.749868603212429',
        '0.749868603212429',
        '0.749860551532462'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749868603212429',
        'topology' => 13291,
        'nodes' => {
          '4639' => {
            'one' => '-0.676992635462161',
            'two' => '0.928010964659132',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.837190447814211',
            '4639' => '0.588475033539103',
            'bias' => 0,
            'two' => '-0.266068328605654'
          },
          'output' => {
            '1863' => '-1.62994849718663',
            'one' => '8.40105916952874',
            '4920' => '0.211284594475788',
            '4639' => '-0.219139365358323',
            'bias' => '0.0468770818939166',
            'two' => '9.35154254394346'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.50737423907279',
            '4920' => '0.850731756395132',
            'bias' => '0.309183531929227',
            'two' => '-0.809110225521187'
          },
          '1863' => {
            'bias' => 0,
            '601' => '1.01019443313353'
          },
          'one' => {}
        },
        'elite' => 0,
        'id' => 13867
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749868603212429',
      'func' => sub { "DUMMY" }
    },
    '4466' => {
      'penalty' => '10.458',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        '3880',
        'two',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3880\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3880\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'3880\'}->{\'one\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3880\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3880\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749502288278068',
        '0.749502288278068',
        '0.749502288278068',
        '0.749502288278068',
        '0.749502288278068',
        '0.749502288278068',
        '0.749502288278068',
        '0.749502288278068',
        '0.749502288278068',
        '0.749502288278068',
        '0.749406802009109',
        '0.749406320600672',
        '0.749387374230833',
        '0.749387374230833',
        '0.749387374230833',
        '0.749387374230833',
        '0.749387374230833',
        '0.749387374230833',
        '0.749387374230833'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749502288278068',
        'topology' => 4466,
        'nodes' => {
          '1863' => {
            '3880' => '0.560489347186217',
            'bias' => 0,
            'two' => '-0.0478090657420627',
            '601' => '0.952035123947433'
          },
          'one' => {},
          '3880' => {
            'one' => 1,
            'bias' => 0
          },
          'output' => {
            '1863' => '-0.953973868901427',
            'one' => '2.91528569128944',
            'bias' => '0.0702149688672474',
            'two' => '3.3116832091198',
            '601' => '-0.47862181166458'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '0.33196607659536',
            'two' => '0.867429536234545'
          }
        },
        'elite' => 1,
        'id' => 5017
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749502288278068',
      'func' => sub { "DUMMY" }
    },
    '9299' => {
      'penalty' => '10.2106807677147',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '3880',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'3880\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'3880\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'3880\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'3880\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3880\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3880\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999997489501',
        '0.749999997489501',
        '0.749999997489501',
        '0.749999997489501',
        '0.749999997489501',
        '0.749999997489501',
        '0.749999997489501',
        '0.749999997489501',
        '0.749999997489501',
        '0.749999997466031',
        '0.749999997466031',
        '0.749999997466031',
        '0.749999997197786',
        '0.749999996205652',
        '0.749999996205652',
        '0.749999996205652',
        '0.749999996205652',
        '0.749999996184031',
        '0.74999999603608',
        '0.749999994043961',
        '0.749999994043395',
        '0.749999994043395',
        '0.749999994043393',
        '0.749999986448428',
        '0.74999998644842',
        '0.749999984987209',
        '0.749999984987209',
        '0.749999970231186',
        '0.749999943850084',
        '0.749999943480996',
        '0.749999943480996',
        '0.749999943480996',
        '0.749999925529586',
        '0.749999910902354',
        '0.749999910902354',
        '0.749999910902354',
        '0.749999910786751',
        '0.749999910768808',
        '0.749999910768808',
        '0.749999811751124',
        '0.749999808745457',
        '0.749999808745457',
        '0.749999808745457',
        '0.749999808745457',
        '0.749999808745457',
        '0.749999808745457',
        '0.749999808745457',
        '0.749999736614309',
        '0.749999735035142',
        '0.749999506738094',
        '0.749999506738094',
        '0.749999505414783',
        '0.749999341160337',
        '0.749999341160337',
        '0.749998842359491',
        '0.749998842359491',
        '0.749998842359491',
        '0.749998842291241',
        '0.749998566368512',
        '0.749998563300613',
        '0.749998563300613',
        '0.749998563300613',
        '0.749998563123042',
        '0.749998563123042',
        '0.749998563119081',
        '0.749998563119081',
        '0.74999691313018',
        '0.749996865432418',
        '0.749996865275171',
        '0.749996734117954',
        '0.749995800857292',
        '0.74999580053941',
        '0.74999580053941',
        '0.749995800538764',
        '0.749991296536662',
        '0.749991241034125',
        '0.749991241034125',
        '0.749989274009455',
        '0.749989273149736',
        '0.749989273149736'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999997489501',
        'topology' => 9299,
        'nodes' => {
          '4639' => {
            'two' => '0.904678274920085',
            'bias' => 0
          },
          '4920' => {
            '4639' => '1.37245554995063',
            'bias' => 0,
            'two' => '-0.311652329116886'
          },
          'output' => {
            '1863' => '-3.43439025558043',
            'one' => '7.3199552690122',
            '4639' => '-0.18447287793112',
            'bias' => '0.0648186834296008',
            'two' => '8.23953353915219',
            '601' => '-0.494776483686128'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.30228338033527',
            '4920' => '0.8935622734285',
            'bias' => '0.17606414378657',
            'two' => '-0.433841411012058'
          },
          'one' => {},
          '3880' => {
            'one' => '1.34491650043877',
            'bias' => 0,
            '601' => '0.141673393809215'
          },
          '1863' => {
            '3880' => '0.347204194530511',
            '4639' => '1.058873566834',
            'bias' => 0,
            'two' => '-0.0605890824170832',
            '601' => '1.29321723192828'
          }
        },
        'elite' => 1,
        'id' => 13304
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999997489501',
      'func' => sub { "DUMMY" }
    },
    '14505' => {
      'penalty' => '6.33268196103061',
      'max' => '0.749999999999916',
      'adj-total' => '1.4999999999998',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'1863\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999916',
        '0.749999999999916',
        '0.749999999999847',
        '0.749999999999808',
        '0.749999999999808',
        '0.749999999999808',
        '0.749999999999808',
        '0.749999999999808',
        '0.749999999999607',
        '0.749999999999596',
        '0.749999999999596',
        '0.749999999999595',
        '0.749999999999595',
        '0.749999999999595',
        '0.749999999999595',
        '0.749999999999595',
        '0.749999999999595',
        '0.749999999999592',
        '0.749999999999233',
        '0.749999999999233',
        '0.749999999999213',
        '0.74999999999897',
        '0.74999999999897',
        '0.74999999999897',
        '0.749999999998959',
        '0.749999999998959',
        '0.749999999998957',
        '0.749999999998055',
        '0.749999999998048',
        '0.749999999997803',
        '0.749999999997803',
        '0.749999999997737',
        '0.749999999997737'
      ],
      'count' => 3,
      'adjusted' => '0.748605180223141',
      'avg' => '0.749999999999092',
      'min' => '0.749999999997472',
      'last' => '0.749999999999866',
      'champion' => {
        'fitness' => '0.749999999999916',
        'topology' => 14505,
        'nodes' => {
          '4639' => {
            'one' => '-0.480728360225916',
            'two' => '0.718246699412822',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.863718168236075',
            '4639' => '0.543113706793953',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.317095526744358'
          },
          '6083' => {
            'bias' => '1.01620178195346'
          },
          'output' => {
            '1863' => '-3.84170309803498',
            'one' => '8.97263647953589',
            '4920' => '0.166180950823429',
            '4639' => '-0.24551917231283',
            'bias' => '0.0504567776592935',
            'two' => 10,
            '601' => '-2.35019234843579'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.53132503460888',
            '4920' => '0.684551451900388',
            'bias' => '0.254624418454323',
            'two' => '-1.12833044500208'
          },
          '1863' => {
            '4639' => '1.31196769741668',
            '6083' => '-0.347289482428568',
            'bias' => 0,
            'two' => '-0.0199612719707992',
            '601' => '0.58938652876428'
          },
          'one' => {}
        },
        'elite' => 0,
        'id' => 16097
      },
      'adj-avg' => '0.749999999999902',
      'total' => '2.24999999999728',
      'offspring' => 0,
      'members' => [
        16097,
        16158,
        16159
      ],
      'best' => '0.749999999999916',
      'func' => sub { "DUMMY" }
    },
    '15776' => {
      'penalty' => '1.8',
      'max' => '0.749999999999973',
      'adj-total' => '0.749999999999973',
      'ignore' => {},
      'adj-count' => 1,
      'order' => [
        'bias',
        '14941',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'14941\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'14941\'}->{\'bias\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'14941\'}*$n->{\'nodes\'}->{\'6083\'}->{\'14941\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'14941\'}*$n->{\'nodes\'}->{\'7065\'}->{\'14941\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'7065\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999973',
        '0.749999999999953',
        '0.749999999999953',
        '0.749999999999953',
        '0.749999999999953',
        '0.749999999999953',
        '0.749999999999953',
        '0.749999999999953'
      ],
      'count' => 3,
      'adjusted' => '0.749999923199953',
      'avg' => '0.749999999999961',
      'min' => '0.749999999999953',
      'last' => '0.749999999999909',
      'champion' => {
        'fitness' => '0.749999999999953',
        'topology' => 15776,
        'nodes' => {
          '4639' => {
            'one' => '-0.813190399667706',
            'two' => '0.922952418267393',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.834609729802492',
            '4639' => '0.74818269290369',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.26328696396865'
          },
          '14941' => {
            'bias' => '0.913127090586547'
          },
          '7065' => {
            '4639' => '0.772105773171098',
            '14941' => '-0.0583717664415744',
            'bias' => 0,
            '601' => '0.584956499672433'
          },
          '6083' => {
            '14941' => '0.872373519036789',
            'bias' => 0
          },
          'output' => {
            '1863' => '-3.69581600195527',
            'one' => '9.70662371456309',
            '4920' => '0.139883345192798',
            '7065' => '-0.231250165869107',
            'bias' => '0.0488006401349257',
            'two' => 10,
            '601' => '-2.32940902258125'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.8075566236214',
            '4639' => '-0.774208687257148',
            '4920' => '0.696863027294279',
            'bias' => '0.323495560023782',
            'two' => '-1.01833251924781'
          },
          'one' => {},
          '1863' => {
            'one' => '0.416736701810705',
            '4639' => '0.92589482452091',
            'bias' => 0,
            'two' => '-0.0163541192303563',
            '601' => '0.526396188070477'
          }
        },
        'elite' => 0,
        'id' => 16098
      },
      'adj-avg' => '0.749999999999973',
      'total' => '2.24999999999988',
      'offspring' => 0,
      'members' => [
        16161,
        16160,
        16098
      ],
      'best' => '0.749999999999973',
      'func' => sub { "DUMMY" }
    },
    '15006' => {
      'penalty' => '10.807',
      'max' => '0.749999999999952',
      'adj-total' => '1.4999999999999',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '15005',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'6083\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'15005\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'15005\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'15005\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'15005\'}*$n->{\'nodes\'}->{\'output\'}->{\'15005\'})+($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999952',
        '0.749999999999952',
        '0.749999999999952',
        '0.749999999999952',
        '0.749999999999952',
        '0.749999999999952',
        '0.749999999999952',
        '0.749999999999952',
        '0.749999999999952',
        '0.749999999999941',
        '0.749999999999941',
        '0.749999999999941',
        '0.749999999999934',
        '0.749999999999934',
        '0.749999999999934',
        '0.749999999999934',
        '0.749999999999934',
        '0.749999999999933',
        '0.749999999999912',
        '0.749999999999879',
        '0.749999999999879',
        '0.749999999999879',
        '0.749999999999874'
      ],
      'count' => 3,
      'adjusted' => '0.132804122757099',
      'avg' => '0.749999999999916',
      'min' => '0.749999999999846',
      'last' => '0.749999999999952',
      'champion' => {
        'fitness' => '0.749999999999952',
        'topology' => 15006,
        'id' => 15664,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '0.830184157349972',
            '4639' => '0.759687702176913',
            'two' => '-0.250960521109716',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.791576326301189',
            'bias' => 0,
            'two' => '0.817003836063886'
          },
          '7065' => {
            '4639' => '0.823797369551354',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            '1863' => '-3.98061330262503',
            'one' => 10,
            '15005' => '0.174985038771674',
            '7065' => '-0.277022226142029',
            'two' => 10,
            'bias' => '0.0512600784596415',
            '601' => '-2.23243790864895'
          },
          '6083' => {
            '4639' => '0.516043012815754',
            'bias' => '1.04495902185915'
          },
          '601' => {
            'one' => '-1.52417915522199',
            '4920' => '0.746703587456477',
            '4639' => '-0.819790786027658',
            'two' => '-0.917618013491675',
            'bias' => '0.253155432738357'
          },
          'one' => {},
          '15005' => {
            '4920' => '0.996061116250089',
            'bias' => 0
          },
          '1863' => {
            'one' => '0.41233057193786',
            '4639' => '0.837204567087668',
            'two' => '-0.0212244242808698',
            'bias' => 0,
            '601' => '0.652150293409306'
          }
        }
      },
      'adj-avg' => '0.749999999999952',
      'total' => '2.24999999999975',
      'offspring' => 0,
      'members' => [
        15664,
        16162,
        16163
      ],
      'best' => '0.749999999999952',
      'func' => sub { "DUMMY" }
    },
    '14942' => {
      'penalty' => '10.3122',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '14941',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'14941\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'14941\'}->{\'bias\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'14941\'}*$n->{\'nodes\'}->{\'6083\'}->{\'14941\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999946',
        '0.749999999999946',
        '0.749999999999946',
        '0.749999999999946',
        '0.749999999999946',
        '0.749999999999946',
        '0.749999999999946',
        '0.749999999999946',
        '0.749999999999946',
        '0.749999999999946',
        '0.749999999999946',
        '0.749999999999946',
        '0.74999999999993',
        '0.74999999999993',
        '0.74999999999993',
        '0.74999999999993',
        '0.74999999999993',
        '0.74999999999993',
        '0.749999999999873',
        '0.749999999999873'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999999946',
        'topology' => 14942,
        'id' => 15728,
        'elite' => 1,
        'nodes' => {
          '14941' => {
            'bias' => '0.969975979169662'
          },
          '4920' => {
            'one' => '0.875874431047371',
            '4639' => '0.730874276191017',
            'two' => '-0.249362780711794',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.756890751983624',
            'bias' => 0,
            'two' => '1.02173872594324'
          },
          '7065' => {
            '4639' => '0.846276977294643',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => 10,
            '1863' => '-4.02504960499814',
            '4920' => '0.148038340727866',
            '7065' => '-0.254823330286521',
            'two' => 10,
            'bias' => '0.0525574474184348',
            '601' => '-2.20433234643556'
          },
          '6083' => {
            '14941' => '0.965441658664882',
            'bias' => 0
          },
          '601' => {
            'one' => '-1.64513030772989',
            '4920' => '0.640294763917289',
            '4639' => '-0.763353947231596',
            'two' => '-1.01167174561698',
            'bias' => '0.326545121176972'
          },
          '1863' => {
            'one' => '0.380004593395456',
            '4639' => '0.958887283880007',
            'two' => '-0.0181178518012161',
            'bias' => 0,
            '601' => '0.562940490332601'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999999946',
      'func' => sub { "DUMMY" }
    },
    '6558' => {
      'penalty' => '10.1660727',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        'one',
        '4920',
        '601',
        '1863',
        '2665',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'2665\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'2665\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'2665\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'2665\'}*$n->{\'nodes\'}->{\'output\'}->{\'2665\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.74988175100055',
        '0.74988175100055',
        '0.74988175100055',
        '0.74988175100055',
        '0.749881750819856',
        '0.749881750819856',
        '0.749881750819856',
        '0.749881750819856',
        '0.749881750296875',
        '0.749881750134562',
        '0.749867972057896',
        '0.749867972057896',
        '0.749867972057896',
        '0.749867972057896',
        '0.749867972057896',
        '0.749864907684795',
        '0.749864907684795',
        '0.749864907684795',
        '0.749861430990799',
        '0.749861430990799',
        '0.749861430990799',
        '0.749861430990799',
        '0.749861430990799',
        '0.749861430880401',
        '0.749861409488536',
        '0.749859726215283',
        '0.749858898584708',
        '0.749858898584708'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.74988175100055',
        'topology' => 6558,
        'nodes' => {
          '4639' => {
            'two' => 1,
            'bias' => 0
          },
          '4920' => {
            'one' => '-0.202183810191649',
            '4639' => '1.01053138460388',
            'bias' => 0,
            'two' => '-0.265499719370495'
          },
          '2665' => {
            '1863' => 1,
            'bias' => 0
          },
          'output' => {
            'one' => '3.20523224797128',
            '4639' => '-0.136235888791618',
            '2665' => '-1.06034219359517',
            'bias' => '0.0677402139820243',
            'two' => '3.66168910835635',
            '601' => '-0.518856626077543'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.964256117940346',
            '4920' => '0.872545166668798',
            '4639' => '-0.828742921334062',
            'bias' => '0.307932848437218'
          },
          '1863' => {
            'one' => '0.464715742651095',
            '4639' => '0.893942715676454',
            '4920' => '0.399272919613317',
            'bias' => 0,
            'two' => '-0.0485027036571635',
            '601' => '0.887225928304016'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 7487
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.74988175100055',
      'func' => sub { "DUMMY" }
    },
    '14697' => {
      'penalty' => '10.3',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'7065\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999407',
        '0.749999999999407',
        '0.749999999999407',
        '0.749999999999407',
        '0.749999999999407',
        '0.749999999999407',
        '0.749999999999407',
        '0.749999999999407',
        '0.749999999999407',
        '0.749999999999407',
        '0.749999999999407',
        '0.749999999999407',
        '0.749999999999407',
        '0.749999999999407',
        '0.749999999999405',
        '0.749999999999405',
        '0.749999999999405',
        '0.749999999999377'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999999407',
        'topology' => 14697,
        'nodes' => {
          '4639' => {
            'one' => '-0.712169200326607',
            'two' => '0.861282032448753',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.842495683261751',
            '4639' => '0.678677338095514',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.266531617884673'
          },
          '7065' => {
            '4639' => 1,
            'two' => '0.216795607995408',
            'bias' => 0
          },
          '6083' => {
            'bias' => '1.04462325457099'
          },
          'output' => {
            '1863' => '-3.68486456385691',
            'one' => '9.09607621390779',
            '4920' => '0.174490973177659',
            '7065' => '-0.22371578464281',
            'bias' => '0.0515912294955894',
            'two' => 10,
            '601' => '-1.80498600987678'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.64290820213778',
            '4920' => '0.662563186863638',
            'bias' => '0.258456158786827',
            'two' => '-0.941829091396766'
          },
          '1863' => {
            'one' => '0.45457465638839',
            '4639' => '0.905644144003548',
            'bias' => 0,
            'two' => '-0.0221549433863161',
            '601' => '0.650026667208747'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 15488
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999999407',
      'func' => sub { "DUMMY" }
    },
    '7269' => {
      'penalty' => '10.4517100145716',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        '7268',
        '7106',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7268\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'7268\'}->{\'bias\'}), 5 ); $v->{\'7106\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7106\'}->{\'4639\'})+($v->{\'7268\'}*$n->{\'nodes\'}->{\'7106\'}->{\'7268\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7106\'}->{\'bias\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'7106\'}*$n->{\'nodes\'}->{\'7065\'}->{\'7106\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'7065\'}->{\'one\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.74999997772828',
        '0.74999997772828',
        '0.74999997772828',
        '0.74999997772828',
        '0.74999997772828',
        '0.74999997772828',
        '0.749999977721949',
        '0.749999977721949',
        '0.749999977721949',
        '0.749999939349426',
        '0.749999808190799',
        '0.749999808157863',
        '0.749999808157863',
        '0.749999739336916',
        '0.74999944764457',
        '0.74999944764457',
        '0.749999447641682',
        '0.749999296881223',
        '0.749999296881223',
        '0.749999296881223',
        '0.749999296881223',
        '0.749999296881223',
        '0.749998768697943',
        '0.749998512850757',
        '0.749998512850757',
        '0.749998441974785',
        '0.749998441818272',
        '0.749998441818272',
        '0.749998441818272',
        '0.749997659292403',
        '0.749997659292403',
        '0.749996031087726',
        '0.749996031087726',
        '0.749996031087726',
        '0.749996031087726',
        '0.749993006919805',
        '0.749990448149079',
        '0.749989008026509',
        '0.749986596424018',
        '0.749986596424018',
        '0.749986596424018',
        '0.749986596424018',
        '0.74998561707327',
        '0.749985616202748',
        '0.749985616202748',
        '0.749985616202748',
        '0.749985616202748',
        '0.749983178414889',
        '0.749972497497161',
        '0.749972365209445',
        '0.749972365209445',
        '0.749970132432216',
        '0.749970132432216',
        '0.749964048800309',
        '0.749964048800309',
        '0.749957729993723',
        '0.749957729993723',
        '0.749957201575889',
        '0.749950830091375',
        '0.749950830091375',
        '0.749950830091375',
        '0.749950828180829',
        '0.749950828180829',
        '0.749950828180829',
        '0.749949661817953',
        '0.74994964458712',
        '0.74994964458712',
        '0.74994964458712',
        '0.74994964458712'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.74999997772828',
        'topology' => 7269,
        'nodes' => {
          '4639' => {
            'two' => '0.963073596782562',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.815979944498217',
            'bias' => 0,
            'two' => '-0.286830607764587'
          },
          '7106' => {
            '7268' => 0,
            '4639' => '0.888355059011865',
            'bias' => 0
          },
          '7065' => {
            'one' => '-1.84597470695205',
            '7106' => '1.17926785592252',
            'bias' => 0
          },
          'output' => {
            '1863' => '-2.7024281978586',
            'one' => '6.47425704394421',
            '7065' => '-0.102788796128055',
            'bias' => '0.072293524758019',
            'two' => '6.88534436315318',
            '601' => '-0.599423220141034'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.42484060449576',
            '4920' => '1.1422537040897',
            'bias' => '0.254957523530398'
          },
          '7268' => {
            'bias' => '0.923871153081974'
          },
          '1863' => {
            'one' => '0.387043516535006',
            '4639' => '1.07144563305652',
            'bias' => 0,
            'two' => '-0.058168448793229',
            '601' => '1.27797075486152'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 10883
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.74999997772828',
      'func' => sub { "DUMMY" }
    },
    '15589' => {
      'penalty' => '4.6',
      'max' => '0.749999999999967',
      'adj-total' => '1.49999999999993',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'two',
        '14941',
        'one',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'14941\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'14941\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'14941\'}->{\'two\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'14941\'}*$n->{\'nodes\'}->{\'6083\'}->{\'14941\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'7065\'}->{\'601\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'7065\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999967',
        '0.749999999999967',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951'
      ],
      'count' => 3,
      'adjusted' => '0.749972578811667',
      'avg' => '0.749999999999663',
      'min' => '0.749999999999056',
      'last' => '0.749999999999956',
      'champion' => {
        'fitness' => '0.749999999999967',
        'topology' => 15589,
        'id' => 16102,
        'elite' => 0,
        'nodes' => {
          '14941' => {
            'two' => '0.110525690082902',
            'bias' => '0.99455733043835'
          },
          '4920' => {
            'one' => '0.837200703485629',
            '4639' => '0.795688149456735',
            'two' => '-0.247984872516426',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.756946947968286',
            'bias' => 0,
            'two' => '0.975792013553024'
          },
          '7065' => {
            '4639' => '0.855885304395304',
            'bias' => 0,
            '6083' => '-0.322616597289138',
            '601' => '0.50009627842417'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => 10,
            '1863' => '-3.92258154026198',
            '4920' => '0.143831810533909',
            '7065' => '-0.267379496304519',
            'two' => 10,
            'bias' => '0.0551540178417586',
            '601' => '-2.3961702032696'
          },
          '6083' => {
            '14941' => '0.95542436664214',
            'bias' => 0
          },
          '601' => {
            'one' => '-1.77828300808483',
            '4920' => '0.635173241834085',
            '4639' => '-0.751192123736269',
            'two' => '-1.0204010526221',
            'bias' => '0.293980940120308'
          },
          '1863' => {
            'one' => '0.361283297056354',
            '4639' => '1.01114840302202',
            'two' => '-0.0198344117653077',
            'bias' => 0,
            '601' => '0.580639210432434'
          },
          'one' => {}
        }
      },
      'adj-avg' => '0.749999999999967',
      'total' => '2.24999999999899',
      'offspring' => 0,
      'members' => [
        16164,
        16102,
        16165
      ],
      'best' => '0.749999999999967',
      'func' => sub { "DUMMY" }
    },
    '14309' => {
      'penalty' => '8.94573067911685',
      'max' => '0.749999999999842',
      'adj-total' => '0.749999999999842',
      'ignore' => {},
      'adj-count' => 1,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'6083\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'6083\'}->{\'one\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'1863\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999842',
        '0.749999999999842',
        '0.749999999999842',
        '0.749999999999842',
        '0.749999999999842',
        '0.749999999999842',
        '0.749999999999806',
        '0.749999999999785',
        '0.749999999999785',
        '0.749999999999785',
        '0.749999999999785',
        '0.749999999999784',
        '0.749999999999784',
        '0.749999999999784',
        '0.749999999999784',
        '0.749999999999784',
        '0.749999999999784',
        '0.749999999999784',
        '0.749999999999784',
        '0.74999999999948',
        '0.749999999999058',
        '0.749999999999004',
        '0.749999999998924',
        '0.749999999998924',
        '0.749999999998923',
        '0.749999999998923',
        '0.749999999998922',
        '0.749999999998922',
        '0.749999999998922',
        '0.749999999998922',
        '0.749999999998922',
        '0.749999999998922',
        '0.749999999998911',
        '0.749999999998911',
        '0.749999999998908',
        '0.749999999998908',
        '0.749999999998908',
        '0.749999999998908'
      ],
      'count' => 2,
      'adjusted' => '0.67476850905769',
      'avg' => '0.749999999999841',
      'min' => '0.749999999999839',
      'last' => '0.749999999999783',
      'champion' => {
        'fitness' => '0.749999999999842',
        'topology' => 14309,
        'id' => 16103,
        'elite' => 0,
        'nodes' => {
          '4920' => {
            'one' => '0.723896086043379',
            '4639' => '0.953541931510471',
            'two' => '-0.29177304432873',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.614798649620842',
            'bias' => 0,
            'two' => '0.644961190956613'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '8.78602965032313',
            '1863' => '-3.52440480333881',
            '4639' => '-0.254051009986005',
            '4920' => '0.225673191282992',
            'two' => 10,
            'bias' => '0.051373114764595',
            '601' => '-2.42095008212947'
          },
          '6083' => {
            'one' => '-0.479145096410828',
            '4639' => '-0.584097763012059',
            'bias' => '1.24962209235472'
          },
          '601' => {
            'one' => '-1.23308747292669',
            '4920' => '0.665202943590214',
            'two' => '-1.08031105306719',
            'bias' => '0.237129930015885'
          },
          '1863' => {
            'one' => '0.320771366548245',
            '4639' => '1.05594508105482',
            'two' => '-0.0218707094630817',
            'bias' => 0,
            '6083' => '-0.213151486264592',
            '601' => '0.670171219103298'
          },
          'one' => {}
        }
      },
      'adj-avg' => '0.749999999999842',
      'total' => '1.49999999999968',
      'offspring' => 0,
      'members' => [
        16103,
        16166
      ],
      'best' => '0.749999999999842',
      'func' => sub { "DUMMY" }
    },
    '13851' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '13725',
        '3618',
        'one',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'13725\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'13725\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'13725\'}->{\'two\'}), 5 ); $v->{\'3618\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3618\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'3618\'}->{\'two\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'13725\'}*$n->{\'nodes\'}->{\'4639\'}->{\'13725\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3618\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3618\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'1863\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999998544',
        '0.749999999998544',
        '0.749999999998544',
        '0.749999999998544',
        '0.749999999998544',
        '0.749999999998544',
        '0.749999999998544',
        '0.749999999998544',
        '0.749999999998544',
        '0.749999999998544',
        '0.749999999998544',
        '0.749999999998465',
        '0.74999999999843',
        '0.74999999999843',
        '0.74999999999843',
        '0.74999999999843',
        '0.74999999999843'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999998544',
        'topology' => 13851,
        'id' => 14443,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '0.923136842358709',
            '4639' => '0.649207979236564',
            'two' => '-0.283992226257545',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.651069209965235',
            '13725' => '0.835097647992899',
            'bias' => 0
          },
          '13725' => {
            'two' => 1,
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.85558505928864',
            '1863' => '-3.52791857611295',
            '4639' => '-0.193895565358409',
            '4920' => '0.188133462100286',
            'two' => 10,
            'bias' => '0.0476840681369789',
            '601' => '-1.8807151551763'
          },
          '6083' => {
            'bias' => 1
          },
          '601' => {
            'one' => '-1.4093963318973',
            '4920' => '0.808172931852064',
            'two' => '-0.828653377196644',
            'bias' => '0.256852026758671'
          },
          '1863' => {
            'one' => '0.444393822451282',
            '3618' => '-0.0205432146563809',
            '4639' => '0.957434478714441',
            'bias' => 0,
            '6083' => '-0.218249180348039',
            '601' => '0.599671455944881'
          },
          'one' => {},
          '3618' => {
            'two' => 1,
            'bias' => 0
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999998544',
      'func' => sub { "DUMMY" }
    },
    '4524' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4523',
        '601',
        '981',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4523\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4523\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4523\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'981\'} = sigmoid( ($v->{\'4523\'}*$n->{\'nodes\'}->{\'981\'}->{\'4523\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'981\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'981\'}*$n->{\'nodes\'}->{\'output\'}->{\'981\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.513475260948665',
        '0.513475260948665',
        '0.513475260948665',
        '0.513475260948665',
        '0.513475260948665',
        '0.513475260948665',
        '0.513475260948665',
        '0.513475260948665',
        '0.513475260948665',
        '0.513475260948665',
        '0.513475260948665',
        '0.513475260948665',
        '0.513475260948665',
        '0.513475260948665',
        '0.511057511631154'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.513475260948665',
        'topology' => 4524,
        'id' => 4539,
        'elite' => 1,
        'nodes' => {
          '981' => {
            'bias' => '-0.270601689943108',
            '4523' => '1.28037675186783'
          },
          'one' => {},
          'two' => {},
          'bias' => {},
          'output' => {
            '981' => '1.72272116021577',
            'one' => '1.93800651568531',
            'bias' => '-1.00573760817895',
            '601' => '-1.35946524898698'
          },
          '601' => {
            'bias' => '-1.46428566497926'
          },
          '4523' => {
            'two' => 1,
            'bias' => 0
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.513475260948665',
      'func' => sub { "DUMMY" }
    },
    '1283' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'two' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        '549',
        '601',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'549\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'549\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'549\'}->{\'one\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'549\'}*$n->{\'nodes\'}->{\'output\'}->{\'549\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'}), 5 ); }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 1283,
        'nodes' => {
          'one' => {},
          '549' => {
            'one' => '0.2270826938734',
            'bias' => '0.707613001474957'
          },
          'output' => {
            '549' => '0.847060755880106',
            'bias' => '0.454835170549736',
            '601' => '0.015410119010542'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '-0.0235562919460635'
          }
        },
        'elite' => 1,
        'id' => 1591
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '262' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'two' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'output\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 262,
        'id' => 850,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '-0.38690945583694',
            'bias' => '-0.61721314416829'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '6204' => {
      'penalty' => '10.5747243787057',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749878611768332',
        '0.749878611768332',
        '0.749878611768332',
        '0.749878611768332',
        '0.749878611768332',
        '0.749878611768332',
        '0.749878607541616',
        '0.749878607541616',
        '0.749878607541616',
        '0.749871160438367',
        '0.749871160282405',
        '0.749871160282405',
        '0.749871160282405',
        '0.749871160282405',
        '0.749871120519716',
        '0.749871120519716',
        '0.749871120519716',
        '0.749856169477749',
        '0.749856169477749',
        '0.749855454574449',
        '0.749855454574449',
        '0.74985328215374',
        '0.749853276789305',
        '0.749853276789305',
        '0.74985216605694',
        '0.74985216605694',
        '0.74985216605694',
        '0.749852128854458',
        '0.749852122413587',
        '0.749849713618075',
        '0.749849713618075',
        '0.749849713618075',
        '0.749849713618075',
        '0.749849713618075',
        '0.749849713429042',
        '0.749847848390042',
        '0.749847848390042',
        '0.749847848390042',
        '0.749847848390042',
        '0.749843424510706',
        '0.74984340197695',
        '0.74984340197695'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749878611768332',
        'topology' => 6204,
        'id' => 7700,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.99496552709397',
            'two' => '-0.268222308813246',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '0.913842423200801'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.20523224797128',
            '1863' => '-1.11180690747085',
            '4639' => '-0.153280586497867',
            'two' => '3.57951348142397',
            'bias' => '0.074429753902327',
            '601' => '-0.520225573222507'
          },
          '601' => {
            'one' => '-1.0087180200396',
            '4920' => '0.78079921698377',
            'bias' => '0.307932848437218'
          },
          '1863' => {
            'one' => '0.466086890961768',
            '4920' => '0.399272919613317',
            '4639' => '0.854421346047974',
            'two' => '-0.0485027036571635',
            'bias' => 0,
            '601' => '0.994883182111816'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749878611768332',
      'func' => sub { "DUMMY" }
    },
    '5489' => {
      'penalty' => '10.121931',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749793999484619',
        '0.749793999484619',
        '0.749793999484619',
        '0.749793999484619',
        '0.749793999484619',
        '0.749793999484619',
        '0.749793999484619',
        '0.749793999484619',
        '0.749793999484619',
        '0.749793999484619',
        '0.749793723491547',
        '0.749793723296682',
        '0.749793723296682',
        '0.749772639545176',
        '0.749762257225394',
        '0.749762257225394',
        '0.749762143153076',
        '0.749762143153076',
        '0.749762143153076',
        '0.749761612771932',
        '0.749760450384504',
        '0.749758658069655'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749793999484619',
        'topology' => 5489,
        'nodes' => {
          '4639' => {
            'two' => 1,
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.910884378862984',
            'bias' => 0
          },
          'output' => {
            '1863' => '-0.989544804182196',
            'one' => '3.40515882600286',
            '4639' => '-0.135800061574209',
            'bias' => '0.074429753902327',
            'two' => '3.26162675281551',
            '601' => '-0.512995352444684'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.877055368756184',
            '4639' => '0.36092665452054',
            '4920' => '0.803646918676541',
            'bias' => '0.304153706059491'
          },
          '1863' => {
            'one' => '0.513351698528216',
            '4639' => '0.785075402513219',
            'bias' => 0,
            'two' => '-0.0485898550044485',
            '601' => '0.88316747995409'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 5993
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749793999484619',
      'func' => sub { "DUMMY" }
    },
    '5893' => {
      'penalty' => '10.0710695378608',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '5892',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'5892\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'5892\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'5892\'}->{\'one\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'5892\'}*$n->{\'nodes\'}->{\'601\'}->{\'5892\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749817933476496',
        '0.749817933476496',
        '0.749817933476496',
        '0.749817933476496',
        '0.749817933476496',
        '0.749817933476496',
        '0.749812382362657',
        '0.749812382362657',
        '0.749812382362657',
        '0.749812382362657',
        '0.749780909407212',
        '0.749780909407212',
        '0.749772632423504',
        '0.749649837702102',
        '0.749517735575509',
        '0.749475816080755',
        '0.749475816080755',
        '0.749380311584539',
        '0.749378332121161',
        '0.749378332121161',
        '0.749378328617339',
        '0.749378328617339',
        '0.748488343232017',
        '0.748488343232017',
        '0.747825211781251',
        '0.747825211781251',
        '0.746817130037935',
        '0.746817130037935',
        '0.746817130037935',
        '0.746817130037935',
        '0.746817130037935',
        '0.74681709476567',
        '0.746788955695152',
        '0.746061200418968',
        '0.746061200418968',
        '0.746061200418968',
        '0.746061200418968',
        '0.746061200418968',
        '0.746061200418968',
        '0.746060232363889',
        '0.74602176929232',
        '0.74602176929232',
        '0.74602176929232',
        '0.743795699071473',
        '0.743795699071473',
        '0.743795699071473',
        '0.743702227699112',
        '0.740526789596239',
        '0.740526789596239',
        '0.739837086064217',
        '0.739694433711784',
        '0.739694433711784',
        '0.739161193335273',
        '0.739161193335273',
        '0.739161193335273',
        '0.739161193335273',
        '0.739159779973087',
        '0.739076658609171',
        '0.738375299566753',
        '0.738375299566753',
        '0.738375299566753',
        '0.738234785585',
        '0.738234785585'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749817933476496',
        'topology' => 5893,
        'nodes' => {
          '4920' => {
            '4639' => '1.02173474350608',
            'bias' => 0
          },
          '4639' => {
            'one' => '0.702187969427267',
            'two' => '0.898861160055775',
            'bias' => 0
          },
          'output' => {
            '1863' => '-0.784211426962942',
            'one' => '3.7009066805965',
            '4639' => '-0.901296218865605',
            'bias' => '0.0688316588011413',
            'two' => '3.66894692661554',
            '601' => '-0.444982607640882'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            '4920' => '0.922183163412382',
            'bias' => '0.274081963542133',
            '5892' => '-1.17050819721596'
          },
          'one' => {},
          '1863' => {
            'one' => '0.456492762309074',
            'bias' => 0,
            'two' => '-0.0431640127657492',
            '601' => '0.872470899245467'
          },
          '5892' => {
            'one' => '1.01345586761479',
            'bias' => 0
          }
        },
        'elite' => 1,
        'id' => 8352
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749817933476496',
      'func' => sub { "DUMMY" }
    },
    '5649' => {
      'penalty' => '10.48',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749560110472825',
        '0.749560110472825',
        '0.749560110472825',
        '0.749560110472825',
        '0.749560110472825',
        '0.749552944557948',
        '0.749259212199711',
        '0.749259212199711',
        '0.749259212199711',
        '0.749259212199711',
        '0.749259212199711',
        '0.749259212199711',
        '0.749259212199711',
        '0.749259212199711',
        '0.749259212199711',
        '0.74925155084491',
        '0.74925155084491',
        '0.74925155084491',
        '0.749251548404665'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749560110472825',
        'topology' => 5649,
        'id' => 6231,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          '1863' => {
            'one' => '0.513351698528216',
            'two' => '-0.0470372796442243',
            'bias' => 0,
            '601' => '0.932573982979792'
          },
          '4639' => {
            'one' => '0.819058253382146',
            'bias' => 0,
            'two' => 1
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.49185984168382',
            '1863' => '-1.18033443800065',
            '4639' => '0.680292963443875',
            'two' => '3.15939663495568',
            'bias' => '0.0723513586287183',
            '601' => '-0.526647115749034'
          },
          '601' => {
            'one' => '-0.803701691413352',
            '4639' => '0.86079157493664',
            'bias' => '0.321085511447368'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749560110472825',
      'func' => sub { "DUMMY" }
    },
    '15134' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '14941',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'14941\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'14941\'}->{\'bias\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'14941\'}*$n->{\'nodes\'}->{\'6083\'}->{\'14941\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'14941\'}*$n->{\'nodes\'}->{\'4920\'}->{\'14941\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999508',
        '0.749999999999508',
        '0.749999999999508',
        '0.749999999999508',
        '0.749999999999508',
        '0.749999999999508',
        '0.749999999999508',
        '0.749999999999508',
        '0.749999999999508',
        '0.749999999999508',
        '0.749999999999508',
        '0.749999999999508',
        '0.749999999999352',
        '0.749999999999352',
        '0.749999999999352'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999999508',
        'topology' => 15134,
        'nodes' => {
          '4639' => {
            'one' => '-0.80316407046988',
            'two' => '1.02173872594324',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.977562419668841',
            '4639' => '0.730874276191017',
            '14941' => '-0.578461172697836',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.264696466870911'
          },
          '14941' => {
            'bias' => '0.969975979169662'
          },
          '7065' => {
            '4639' => '0.846276977294643',
            'bias' => 0
          },
          '6083' => {
            '14941' => '0.965441658664882',
            'bias' => 0
          },
          'output' => {
            '1863' => '-4.02504960499814',
            'one' => 10,
            '4920' => '0.155344569817252',
            '7065' => '-0.254823330286521',
            'bias' => '0.0525574474184348',
            'two' => 10,
            '601' => '-2.03987437434243'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.64513030772989',
            '4639' => '-0.763353947231596',
            '4920' => '0.662697074673099',
            'bias' => '0.326545121176972',
            'two' => '-1.01167174561698'
          },
          'one' => {},
          '1863' => {
            'one' => '0.387959118412141',
            '4639' => '0.958887283880007',
            'bias' => 0,
            'two' => '-0.0181178518012161',
            '601' => '0.562940490332601'
          }
        },
        'elite' => 0,
        'id' => 15795
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999999508',
      'func' => sub { "DUMMY" }
    },
    '5213' => {
      'penalty' => '10.3647681449556',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999986514',
        '0.749999999986514',
        '0.749999999986514',
        '0.749999999986514',
        '0.749999999986514',
        '0.749999999986097',
        '0.749999999986097',
        '0.749999999986097',
        '0.749999999986097',
        '0.749999999986097',
        '0.749999999983002',
        '0.749999999963407',
        '0.749999999963407',
        '0.749999999948503',
        '0.749999999946118',
        '0.749999999941303',
        '0.749999999941303',
        '0.749999999938048',
        '0.749999999911698',
        '0.749999999911698',
        '0.749999999911698',
        '0.749999999911698',
        '0.749999999907282',
        '0.749999999907282',
        '0.749999999907282',
        '0.749999999157775',
        '0.749999999094631',
        '0.749999997618101',
        '0.749999997618101',
        '0.749999995716762',
        '0.749999987231063',
        '0.749999987220898',
        '0.749999965438855',
        '0.749999965438763',
        '0.749999965438763',
        '0.749999965438718',
        '0.749999957388967',
        '0.7499999034',
        '0.749999892076825',
        '0.74999989171577',
        '0.74999989171577',
        '0.749999891137274',
        '0.749999890925669',
        '0.749999890925669',
        '0.749999890925669',
        '0.749999885408848',
        '0.749999885408848',
        '0.749999653166806',
        '0.749999653166806',
        '0.749999653166806',
        '0.749999653166806',
        '0.749999527441766',
        '0.74999952498556',
        '0.74999952498556',
        '0.74999952498556',
        '0.74999936759717',
        '0.749998905385696',
        '0.749998381306869',
        '0.749998381306869',
        '0.749996692303224',
        '0.749996692303224',
        '0.749996680352173',
        '0.749996680352173',
        '0.749993185928678',
        '0.74999042553391',
        '0.74999042553391',
        '0.74999042553391',
        '0.749990411601765',
        '0.74998872305328',
        '0.749987179372753',
        '0.749983346716928',
        '0.749977365980895',
        '0.749976726050959',
        '0.749976726050959',
        '0.749963309798633',
        '0.749954554405744',
        '0.749954372524417',
        '0.749954372524417',
        '0.749954004276946',
        '0.749914332205262',
        '0.74991431926345',
        '0.749914164471877',
        '0.749914164471877',
        '0.749913514538539',
        '0.749882621551395',
        '0.749882601186327',
        '0.749856778857932',
        '0.749856778857932',
        '0.749826966215622',
        '0.749826966215622',
        '0.749826966215622',
        '0.749826966215622',
        '0.749333745226707',
        '0.749190478013535',
        '0.748957340327315',
        '0.748166934084548',
        '0.748166934084548',
        '0.748166934084548',
        '0.747749706276805',
        '0.747549389998349'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999986514',
        'topology' => 5213,
        'id' => 12940,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '1.05825743983755',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '0.58247836546531'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.80230120092964',
            '1863' => '-3.73692072957788',
            '4920' => '-0.794746614969379',
            '4639' => '-0.100072998645969',
            'two' => 10,
            'bias' => '0.0485342445625535',
            '601' => '-0.581629052245936'
          },
          '601' => {
            'one' => '-0.969108749252269',
            '4920' => '0.611519067025742',
            'bias' => '0.443400106905273'
          },
          '1863' => {
            'one' => '0.520602770713338',
            '4639' => '0.855147115264405',
            'two' => '-0.0497974781252842',
            'bias' => 0,
            '601' => '1.26164570386695'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999986514',
      'func' => sub { "DUMMY" }
    },
    '1425' => {
      'penalty' => '10.2483254225902',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '601',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999989838',
        '0.749999999989838',
        '0.749999999989838',
        '0.749999999989838',
        '0.749999999989838',
        '0.749999999989838',
        '0.749999999989838',
        '0.74999999998983',
        '0.749999999989431',
        '0.749999999989431',
        '0.749999999989431',
        '0.749999999989413',
        '0.749999999989413',
        '0.749999999989405',
        '0.749999999989405',
        '0.749999999984213',
        '0.749999999984213',
        '0.749999999983338',
        '0.749999999969952',
        '0.749999999938482',
        '0.749999999938482',
        '0.749999999938482',
        '0.749999999938482',
        '0.749999999938482',
        '0.74999999991882',
        '0.74999999991882',
        '0.74999999991882',
        '0.749999999917924',
        '0.749999999905445',
        '0.749999999905445',
        '0.749999999725725',
        '0.749999999725725',
        '0.749999999725725',
        '0.749999999086231',
        '0.749999999086231',
        '0.74999999908621',
        '0.749999998862917',
        '0.749999998862917',
        '0.7499999988606',
        '0.749999997953618',
        '0.749999995398014',
        '0.749999995345291',
        '0.749999994605397',
        '0.749999994603779',
        '0.749999994603779',
        '0.749999994248687',
        '0.749999981119004',
        '0.749999981118901',
        '0.749999932281473',
        '0.749999932281473',
        '0.749999932281473',
        '0.749999912304502',
        '0.749999847807195',
        '0.7499997648394',
        '0.749999764621027',
        '0.749999700010495',
        '0.74999944314641',
        '0.749999350568003',
        '0.749999344877766',
        '0.749999344877766',
        '0.749999311791847',
        '0.749998879707928',
        '0.749998837582706',
        '0.749998837582706',
        '0.749998327279119',
        '0.749998290630606',
        '0.749998290630606',
        '0.749998254818104',
        '0.749998254818104',
        '0.74999822837561',
        '0.74999822837561',
        '0.74999822837561',
        '0.749998215617079',
        '0.749998215617079',
        '0.749998215617079',
        '0.749998212670382',
        '0.749996942776202',
        '0.749996932730257',
        '0.749996932592749',
        '0.749996932592749',
        '0.749996455623616',
        '0.749993818916546',
        '0.749993818916546',
        '0.749993757353366',
        '0.749993756891357',
        '0.749993756013216',
        '0.749985515569485',
        '0.749985489983782',
        '0.749975917887692',
        '0.749975917887692',
        '0.74997491870933',
        '0.749963942189905',
        '0.749963797166371',
        '0.749963640109834',
        '0.749940430694781',
        '0.749896106249564',
        '0.749888826578017',
        '0.749888826578017',
        '0.749877164103041',
        '0.749860353130467'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999989838',
        'topology' => 1425,
        'id' => 13242,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => 10,
            'two' => 10,
            'bias' => '0.0224397354937376',
            '601' => '-5.2416097910959'
          },
          '601' => {
            'bias' => '0.583785498159495',
            'two' => '0.0166768103919821'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999989838',
      'func' => sub { "DUMMY" }
    },
    '3935' => {
      'penalty' => '10.629646701573',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.748762748976592',
        '0.748762748976592',
        '0.748762748976592',
        '0.748716208026469',
        '0.748716208026469',
        '0.748541987680808',
        '0.748541987680808',
        '0.748541987680808',
        '0.748541987680808',
        '0.748541987680808',
        '0.748541987680808',
        '0.748541987680808',
        '0.748541081370966',
        '0.748541081370966',
        '0.748541081370966',
        '0.748541081370966',
        '0.748541081370966',
        '0.748395656661238',
        '0.748390855934963',
        '0.748390855934963',
        '0.748390855934963',
        '0.748255970372181',
        '0.748255970372181',
        '0.748255970372181',
        '0.748242318988401',
        '0.748242318988401',
        '0.748242304608758',
        '0.748242304608758',
        '0.748239648408842',
        '0.748170664934244',
        '0.748170664934244',
        '0.748170664934244',
        '0.748170664934244',
        '0.748139097298023',
        '0.748139097298023',
        '0.748136780656341',
        '0.748136780656341',
        '0.748131932628559',
        '0.748131932628559',
        '0.748131932628559',
        '0.747841676135036',
        '0.747753964852811'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.748762748976592',
        'topology' => 3935,
        'nodes' => {
          '1863' => {
            'bias' => 0,
            'two' => '-0.0608868837478048',
            '601' => '1.64445910510456'
          },
          'one' => {},
          'output' => {
            '1863' => '-1.13384406053721',
            'one' => '2.78828192194057',
            'bias' => '0.0493397095308895',
            'two' => '2.68062216550126'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '0.350085993073289',
            'bias' => '0.515165707880168',
            'two' => '0.793137645931387'
          }
        },
        'elite' => 1,
        'id' => 5687
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.748762748976592',
      'func' => sub { "DUMMY" }
    },
    '12871' => {
      'penalty' => '2.37919233936242',
      'max' => '0.749979721930996',
      'adj-total' => '1.49995941427242',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749979721930996',
        '0.749979692341427',
        '0.749979681129395',
        '0.749978177960894',
        '0.749978177960894',
        '0.749977323229701',
        '0.749969569925822',
        '0.749969569925822',
        '0.749969569925822',
        '0.749969132094484',
        '0.74996213207888',
        '0.749962122818952',
        '0.749962122818952',
        '0.749962122818952',
        '0.749960047343161',
        '0.749959789776617',
        '0.749959789776617',
        '0.749959789776617',
        '0.749959789776617',
        '0.74995643316729',
        '0.74995643316729',
        '0.749956433060117',
        '0.749956433060117',
        '0.749956425190379',
        '0.749956425190379',
        '0.749956425190379',
        '0.749956425190379',
        '0.749946919647025',
        '0.749937634103828',
        '0.749937634103828',
        '0.749937623083045',
        '0.749937623083045',
        '0.749937589076882',
        '0.749936994453644',
        '0.749936994453644',
        '0.749936994453644',
        '0.749936994453644',
        '0.749936994453644',
        '0.749936994453644',
        '0.749936992668488',
        '0.749926139044651',
        '0.749925862494673',
        '0.749925862494673',
        '0.749925855941918',
        '0.749925855941918',
        '0.749925855941918',
        '0.749925855941918',
        '0.749925421102971',
        '0.749914715423851',
        '0.749914715423851',
        '0.749914715423851',
        '0.7499134715048',
        '0.7499134715048',
        '0.7499134715048',
        '0.749913373086381',
        '0.749913349447439',
        '0.749913349447439',
        '0.749913349447439',
        '0.749913349447439',
        '0.749913349447439',
        '0.749899095872625',
        '0.749899095872625',
        '0.749871513167349',
        '0.749871513167349',
        '0.749870120494736',
        '0.749870113971296',
        '0.749870113971296',
        '0.749826399068446'
      ],
      'count' => 3,
      'adjusted' => '0.749978436706854',
      'avg' => '0.749952434835027',
      'min' => '0.74989789023266',
      'last' => '0.749977847482596',
      'champion' => {
        'fitness' => '0.749979692341427',
        'topology' => 12871,
        'id' => 16105,
        'elite' => 0,
        'nodes' => {
          '4920' => {
            '4639' => '1.03512163056796',
            'two' => '-0.336731785551813'
          },
          '4639' => {
            'bias' => 0,
            'two' => '0.853463497403103'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '4.18922476410839',
            '1863' => '-1.4842487030429',
            '4920' => '-0.0803019701880094',
            '4639' => '-0.188505793657816',
            'two' => '4.21768585152594',
            'bias' => '0.0778824932932264',
            '601' => '-0.452227976199316'
          },
          '601' => {
            'one' => '-0.66551669789898',
            '4920' => '0.676884362249674',
            'bias' => '0.326257554285384'
          },
          '1863' => {
            'one' => '0.528748042650612',
            '4639' => '0.556762970628185',
            '4920' => '0.262338934491753',
            'two' => '-0.0618150144795355',
            'bias' => 0,
            '601' => '1.20007925671331'
          },
          'one' => {}
        }
      },
      'adj-avg' => '0.749979707136211',
      'total' => '2.24985730450508',
      'offspring' => 0,
      'members' => [
        16167,
        16105,
        16168
      ],
      'best' => '0.749979721930996',
      'func' => sub { "DUMMY" }
    },
    '7147' => {
      'penalty' => '10.5254554372455',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        'one',
        '4920',
        '601',
        '1863',
        '7106',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7106\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7106\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7106\'}->{\'bias\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'7106\'}*$n->{\'nodes\'}->{\'7065\'}->{\'7106\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999930919735',
        '0.749999930919735',
        '0.749999930919735',
        '0.749999930919735',
        '0.749999930919735',
        '0.749999930919735',
        '0.749999930684167',
        '0.749999930077697',
        '0.749999930077697',
        '0.749999913053874',
        '0.749999913053874',
        '0.749999913053874',
        '0.749999913053874',
        '0.749999913052851',
        '0.749999785388344',
        '0.749999785388344',
        '0.749999785388344',
        '0.749999763506853',
        '0.749999763506853',
        '0.749999614629492',
        '0.749999614629492',
        '0.749999381580084',
        '0.749998638999885',
        '0.749998356472638',
        '0.749998356472638',
        '0.749998355686501',
        '0.749998355686501',
        '0.749998355686393',
        '0.749997819297937',
        '0.749996351410336',
        '0.749996351410336',
        '0.749996351410336',
        '0.749996204963951',
        '0.749994094611699',
        '0.74999401199416',
        '0.749993926381629',
        '0.749993926381629',
        '0.749993926285738',
        '0.749993926274561',
        '0.749992284708633',
        '0.749992284708633',
        '0.749992284707182',
        '0.74999147093472',
        '0.749982650674266',
        '0.749982623816512',
        '0.749982623816512',
        '0.749981238889497',
        '0.749981238889497',
        '0.749981238889497',
        '0.749981238889497',
        '0.749981238889497',
        '0.749980423433503',
        '0.749980423433503',
        '0.749965519068488',
        '0.749965519068488',
        '0.749953495716412',
        '0.749953495716412',
        '0.749944950499354',
        '0.749944950499354',
        '0.749944950499354',
        '0.749944623692402',
        '0.749944623692402',
        '0.749944623692402',
        '0.749944608463579',
        '0.749944608463579',
        '0.749944608463579',
        '0.749944608463579',
        '0.749944608463579',
        '0.749944608463579',
        '0.749944608463579',
        '0.749944608463579'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999930919735',
        'topology' => 7147,
        'nodes' => {
          '4639' => {
            'two' => '0.526057034263593',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.392689262095977',
            '4639' => '1.04796393287511',
            'bias' => 0,
            'two' => '-0.228714461996941'
          },
          '7106' => {
            '4639' => '1.07671695048983',
            'bias' => 0
          },
          '7065' => {
            '7106' => '0.668968563236639',
            'bias' => 0
          },
          'output' => {
            '1863' => '-2.64031974876632',
            'one' => '6.30874057777792',
            '7065' => '-0.159268921641953',
            'bias' => '0.105943059039907',
            'two' => '7.88918346592088',
            '601' => '-0.501452119186298'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.634276302711707',
            '4920' => '1.03769525912438',
            'bias' => '0.232221290317743'
          },
          '1863' => {
            'one' => '0.492562822455991',
            '4639' => '1.0587819317852',
            'bias' => 0,
            'two' => '-0.0558133981628132',
            '601' => '0.586446531626868'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 10643
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999930919735',
      'func' => sub { "DUMMY" }
    },
    '13461' => {
      'penalty' => '10.8440354',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        '601',
        'two',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.510545300745419',
        '0.510545300745419',
        '0.510545300745419',
        '0.510282771152958',
        '0.510282771152958',
        '0.510282771152958',
        '0.510282771152958',
        '0.5086641892395',
        '0.5086641892395',
        '0.5086641892395',
        '0.5086641892395',
        '0.508324532440192',
        '0.508324532440192',
        '0.504836573860212',
        '0.504836573860212',
        '0.504836573860212',
        '0.504836573860212',
        '0.504836573860212',
        '0.502710710811555',
        '0.502710710811555',
        '0.502710710811555',
        '0.502710710811555',
        '0.502710710811555',
        '0.502710710811555',
        '0.502710710811555',
        '0.502710710811555',
        '0.502710710811555',
        '0.502710710811555',
        '0.502710710811555'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.510545300745419',
        'topology' => 13461,
        'nodes' => {
          'one' => {},
          'output' => {
            'bias' => 0,
            'two' => '0.7688280753803',
            '601' => '-0.382499456218454'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.85870183030719',
            'bias' => '0.964246699583509'
          }
        },
        'elite' => 1,
        'id' => 14561
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.510545300745419',
      'func' => sub { "DUMMY" }
    },
    '5568' => {
      'penalty' => '10.400196677663',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749875453695871',
        '0.749875453695871',
        '0.749875453695871',
        '0.749875453695871',
        '0.749875453695871',
        '0.749875413451244',
        '0.749866530975505',
        '0.749866530975505',
        '0.749866530975505',
        '0.749866530975505',
        '0.749865570313603',
        '0.749865570313603',
        '0.749865552228366',
        '0.749865551799706',
        '0.749865551799706',
        '0.749865551799706',
        '0.749865551799706',
        '0.749865551799706',
        '0.749865175578925',
        '0.749863477124641',
        '0.749863476606723',
        '0.749863476606723',
        '0.749852477224712',
        '0.749851456001022',
        '0.74985145531135',
        '0.74985145531135',
        '0.749851444067433',
        '0.74985143370856',
        '0.74985104682163',
        '0.749850731017766',
        '0.749850728096641',
        '0.749850728096641',
        '0.749850728096641',
        '0.749850728096641',
        '0.749811552211552',
        '0.749811552211552',
        '0.749811552211552',
        '0.749811552211552',
        '0.749811552211552',
        '0.749808468829556',
        '0.749808468829556',
        '0.749808285111126',
        '0.749808279054906',
        '0.749808279054906',
        '0.749808279054906',
        '0.749808279054906',
        '0.749808128456144',
        '0.749808126025381',
        '0.74980812346377',
        '0.749808106514872',
        '0.749808106046489',
        '0.749808106046489',
        '0.749808106046489',
        '0.749808106046489',
        '0.749808106046489',
        '0.749808104425473',
        '0.749808101374025',
        '0.749794672513769',
        '0.749794672513769',
        '0.749794672513769',
        '0.749776471844949',
        '0.749765978634087',
        '0.749765978634087'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749875453695871',
        'topology' => 5568,
        'nodes' => {
          '4639' => {
            'two' => '0.956143550514995',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.809522713129075',
            'two' => '-0.271292190707034'
          },
          'output' => {
            '1863' => '-1.07943544578256',
            'one' => '3.6408828047292',
            '4639' => '-0.15303448188237',
            'bias' => '0.0726365098644019',
            'two' => '3.52516251387272',
            '601' => '-0.486306909555659'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.803701691413352',
            '4920' => '0.738769908713066',
            'bias' => '0.321085511447368'
          },
          '1863' => {
            'one' => '0.358808443675354',
            '4639' => '0.748730898051697',
            'bias' => 0,
            'two' => '-0.0604064799817263',
            '601' => '0.88316747995409'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 8131
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749875453695871',
      'func' => sub { "DUMMY" }
    },
    '14753' => {
      'penalty' => '10.229',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '7065',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'1863\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999816',
        '0.749999999999816',
        '0.749999999999816',
        '0.749999999999816',
        '0.749999999999816',
        '0.749999999999816',
        '0.749999999999815',
        '0.749999999999815',
        '0.749999999999815',
        '0.749999999999815',
        '0.749999999999815',
        '0.749999999999815',
        '0.749999999999815',
        '0.749999999999743',
        '0.749999999999743',
        '0.749999999999488',
        '0.749999999999488',
        '0.749999999999488',
        '0.74999999999922',
        '0.74999999999922'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999999816',
        'topology' => 14753,
        'id' => 15610,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '0.881261193632221',
            '4639' => '0.735995147382571',
            'two' => '-0.263780261021658',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.741173017091943',
            'bias' => 0,
            'two' => '1.03367176953706'
          },
          '7065' => {
            '4639' => '0.805477782087807',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => 10,
            '1863' => '-3.83701353982933',
            '4920' => '0.161720950292042',
            '7065' => '-0.216308343835194',
            'two' => 10,
            'bias' => '0.0555917908359439',
            '601' => '-1.89182401078975'
          },
          '6083' => {
            'bias' => '0.870572636715129'
          },
          '601' => {
            'one' => '-1.45768720780535',
            '4920' => '0.590065988169599',
            'two' => '-1.0823186169932',
            'bias' => '0.250057525323146'
          },
          '1863' => {
            'one' => '0.455358353610613',
            '4639' => '0.883538994239689',
            '7065' => '0.465467230793091',
            'two' => '-0.0236079234083927',
            'bias' => 0,
            '601' => '0.664710793286839'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999999816',
      'func' => sub { "DUMMY" }
    },
    '3064' => {
      'penalty' => '10.8057475016962',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '601',
        '1863',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749238640314769',
        '0.749238640314769',
        '0.749238640314769',
        '0.749238640314769',
        '0.749238640314769',
        '0.749238640314769',
        '0.749238640314769',
        '0.749238632502209',
        '0.749238632502209',
        '0.749238632502209',
        '0.749238632502209',
        '0.749152316228778',
        '0.749152316170978',
        '0.749152316170978',
        '0.749152316170978',
        '0.749152313904398',
        '0.749152313904398',
        '0.749152313904398',
        '0.749118911242596',
        '0.749118909987645',
        '0.749118909987645',
        '0.749101514867551',
        '0.749101514867551',
        '0.749101514104722',
        '0.749086000089299',
        '0.749086000089299',
        '0.749086000089299',
        '0.749054274417496',
        '0.749054270357451',
        '0.749054263788652',
        '0.749054263788652',
        '0.749054263788652',
        '0.749053857710605',
        '0.749053857710605',
        '0.749053857710605',
        '0.749053838143763',
        '0.749053838143763',
        '0.749053838143763',
        '0.749053838143763',
        '0.749053505277231',
        '0.749053505277231',
        '0.748980901204696',
        '0.748980901204696',
        '0.748980901204696',
        '0.74871598383905',
        '0.74871598383905',
        '0.74871598383905',
        '0.748701505739493',
        '0.748701505739493',
        '0.748701505739493',
        '0.74869623633918',
        '0.748656408531442',
        '0.748373297615465',
        '0.748373297615465',
        '0.748373297615465',
        '0.748372789571495',
        '0.748372787097825',
        '0.748359438940028',
        '0.748359438940028',
        '0.748253930624721',
        '0.7481549106699',
        '0.7481549106699',
        '0.7481549106699',
        '0.748109879672744',
        '0.747979382480067',
        '0.747755021655401',
        '0.747755021655401',
        '0.747754809246974',
        '0.747754809246974',
        '0.747754809246974',
        '0.747053127468623',
        '0.747036513345007',
        '0.74635262816239',
        '0.74635262816239',
        '0.744667826999762',
        '0.744422968234313',
        '0.743310694395396',
        '0.743302955940949',
        '0.743302955940949',
        '0.743302955940949',
        '0.74259274931418',
        '0.74259274931418',
        '0.74259274931418'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749238640314769',
        'topology' => 3064,
        'nodes' => {
          '1863' => {
            'bias' => 0,
            'two' => '-0.0801853424402698',
            '601' => '1.5595056534846'
          },
          'one' => {},
          'output' => {
            '1863' => '-1.34324736566385',
            'one' => '2.65499546007869',
            'bias' => '0.0470475287951495',
            'two' => '2.86270364642809'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '0.697484131907476',
            'two' => '0.570459350303486'
          }
        },
        'elite' => 1,
        'id' => 6592
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749238640314769',
      'func' => sub { "DUMMY" }
    },
    '15197' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '14941',
        'one',
        'two',
        '4639',
        '7065',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'14941\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'14941\'}->{\'bias\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'14941\'}*$n->{\'nodes\'}->{\'6083\'}->{\'14941\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'6083\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999931',
        '0.749999999999931',
        '0.749999999999931',
        '0.749999999999931',
        '0.749999999999931',
        '0.749999999999931',
        '0.749999999999931',
        '0.749999999999931',
        '0.749999999999931',
        '0.749999999999931',
        '0.749999999999931',
        '0.749999999999931',
        '0.749999999999931',
        '0.749999999999931',
        '0.74999999999993'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999999931',
        'topology' => 15197,
        'nodes' => {
          '4639' => {
            'one' => '-0.766731528791031',
            'two' => '1.02173872594324',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.875874431047371',
            '4639' => '0.730874276191017',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.265493642838781'
          },
          '14941' => {
            'bias' => '0.969975979169662'
          },
          '7065' => {
            '4639' => '0.846276977294643',
            'bias' => 0
          },
          '6083' => {
            '14941' => '0.965441658664882',
            '7065' => '0.93203087197066',
            'bias' => 0
          },
          'output' => {
            '1863' => '-4.02504960499814',
            'one' => 10,
            '4920' => '0.155344569817252',
            '7065' => '-0.254823330286521',
            'bias' => '0.0525574474184348',
            'two' => 10,
            '601' => '-2.03987437434243'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.64513030772989',
            '4639' => '-0.763353947231596',
            '4920' => '0.662697074673099',
            'bias' => '0.326545121176972',
            'two' => '-1.01167174561698'
          },
          'one' => {},
          '1863' => {
            'one' => '0.387959118412141',
            '4639' => '0.944404511417476',
            'bias' => 0,
            'two' => '-0.0181178518012161',
            '601' => '0.562940490332601'
          }
        },
        'elite' => 1,
        'id' => 15228
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999999931',
      'func' => sub { "DUMMY" }
    },
    '7350' => {
      'penalty' => '10.5551238372758',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        '7106',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7106\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7106\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7106\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'7106\'}->{\'one\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'7106\'}*$n->{\'nodes\'}->{\'7065\'}->{\'7106\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999994508388',
        '0.749999994508388',
        '0.749999994508388',
        '0.749999994508388',
        '0.749999985350615',
        '0.749999985350615',
        '0.749999985350615',
        '0.749999985350615',
        '0.749999969015813',
        '0.749999969015813',
        '0.749999883757118',
        '0.749999883757118',
        '0.74999968761033',
        '0.749999615972992',
        '0.749999615972992',
        '0.749999615972992',
        '0.749999615972992',
        '0.749999615972992',
        '0.749999477814218',
        '0.749999477814218',
        '0.749999477744339',
        '0.749999404565853',
        '0.749999346664552',
        '0.749999154273343',
        '0.749999150626636',
        '0.749998525129632',
        '0.749998525129632',
        '0.749998031063622',
        '0.749998010796295',
        '0.749998010796295',
        '0.749996695233681',
        '0.749996695233681',
        '0.749996695233681',
        '0.749994967406604',
        '0.749994284644512',
        '0.749994284642532',
        '0.749994284642532',
        '0.74999390015614',
        '0.749993895148769',
        '0.749993536452421',
        '0.749993536452421',
        '0.749993536452421',
        '0.749989708483963',
        '0.749989634282288',
        '0.749989634282288',
        '0.749986778415724',
        '0.749986604271896',
        '0.749986485028208',
        '0.749986485028208',
        '0.749986117675144',
        '0.749986115243111',
        '0.749986115243111',
        '0.749977547605117',
        '0.749976016392439',
        '0.749971509704136',
        '0.74997150663645',
        '0.74997150663645',
        '0.74997150663645',
        '0.74997150663645',
        '0.74997150663645',
        '0.74997150663645',
        '0.749963565298113',
        '0.749963565298113',
        '0.749951847815402',
        '0.749951847815402',
        '0.749951847815402',
        '0.749951847815402',
        '0.749951847815402',
        '0.749951847815402',
        '0.749951847799038',
        '0.749951847799038',
        '0.749951847799038',
        '0.74995184545431',
        '0.74995184545431'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999994508388',
        'topology' => 7350,
        'nodes' => {
          '4639' => {
            'two' => '1.11273766159684',
            'bias' => 0
          },
          '4920' => {
            '4639' => '1.37532710968975',
            'bias' => 0,
            'two' => '-0.331053991071393'
          },
          '7106' => {
            'one' => '0.476408708304811',
            '4639' => '1.14566429703822',
            'bias' => 0
          },
          '7065' => {
            '7106' => '1.01776828474429',
            'bias' => 0
          },
          'output' => {
            '1863' => '-2.92186298363779',
            'one' => '7.46656678998847',
            '7065' => '-0.200252082028912',
            'bias' => '0.0686515784404522',
            'two' => '7.4988810128186',
            '601' => '-0.551063002532711'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.755615959809072',
            '4920' => '0.697743282244302',
            'bias' => '0.500875935952835'
          },
          '1863' => {
            'one' => '0.335941348972174',
            '4639' => '0.803356380445842',
            'bias' => 0,
            'two' => '-0.0395976304471072',
            '601' => '0.864632565403344'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 11237
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999994508388',
      'func' => sub { "DUMMY" }
    },
    '6949' => {
      'penalty' => '10.9974098923737',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '6948',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6948\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6948\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'6948\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6948\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6948\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999123345769',
        '0.749999123345769',
        '0.749999123345769',
        '0.749999123345769',
        '0.749999123345663',
        '0.749999123345663',
        '0.749999118682107',
        '0.749999118682107',
        '0.749999118682107',
        '0.749999118682107',
        '0.749999118682107',
        '0.749999118682107',
        '0.749999118682107',
        '0.749998687937513',
        '0.749998687892557',
        '0.749998687853733',
        '0.749998687853733',
        '0.749998687515832',
        '0.749998444314429',
        '0.749998444314429',
        '0.749998159264767',
        '0.749998092142226',
        '0.74999809125541',
        '0.749997656544277',
        '0.749997543176844',
        '0.749997033186567',
        '0.749997033186567',
        '0.749996984509584',
        '0.749996916159541',
        '0.749996916159541',
        '0.749996916159541',
        '0.749996907829556',
        '0.749996907829556',
        '0.749995141268762',
        '0.749995141268762',
        '0.749993818956116',
        '0.749993582583606',
        '0.749993582583606',
        '0.74999358177039',
        '0.749993546102404',
        '0.749990930385193',
        '0.749990927760182',
        '0.749990927760182',
        '0.749990927760182',
        '0.749990927760182',
        '0.749985725817522',
        '0.749985683288215',
        '0.749985664430592',
        '0.749985664430592',
        '0.749980319502328',
        '0.749980319502328',
        '0.749967602028352',
        '0.74996212099119',
        '0.74996212099119',
        '0.74996212099119',
        '0.74996202652855',
        '0.749950262607228',
        '0.749950262607228',
        '0.749950262607228',
        '0.749950262607228',
        '0.749931406868715',
        '0.749931202701159',
        '0.749931163884818',
        '0.749931163884818',
        '0.749930392709382',
        '0.749930392709382',
        '0.749930392709382',
        '0.749930378646348',
        '0.749927405149443',
        '0.749927405149443',
        '0.749927405149443',
        '0.749926967354689',
        '0.749926967354689',
        '0.749926869358559',
        '0.749908809496238',
        '0.749908758562287',
        '0.749908758562287',
        '0.749908758562287',
        '0.749908758562287',
        '0.749908758562287',
        '0.749908758562287',
        '0.749908758562287',
        '0.749908758562287',
        '0.749908758562287'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999123345769',
        'topology' => 6949,
        'nodes' => {
          '4639' => {
            'two' => '1.04911073470454',
            'bias' => 0
          },
          '4920' => {
            '4639' => '1.20615316417804',
            '6948' => '-0.253534796254778',
            'bias' => 0
          },
          'output' => {
            '1863' => '-2.19527574975943',
            'one' => '5.00419380268082',
            '4639' => '-0.116592383069854',
            'bias' => '0.0584696011927103',
            'two' => '5.70642569877393',
            '601' => '-0.425815154114565'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.18333285357112',
            '4920' => '0.708138373144673',
            'bias' => '0.238557803432664'
          },
          '1863' => {
            'one' => '0.521555176423095',
            '4639' => '0.974023953112731',
            'bias' => 0,
            'two' => '-0.0676140121302044',
            '601' => '1.45215643291321'
          },
          'one' => {},
          '6948' => {
            'bias' => 0,
            'two' => '1.20697517778427'
          }
        },
        'elite' => 1,
        'id' => 11238
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999123345769',
      'func' => sub { "DUMMY" }
    },
    '1942' => {
      'penalty' => '10.9727592465255',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        'two',
        '981',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'981\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'981\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'981\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'981\'}*$n->{\'nodes\'}->{\'output\'}->{\'981\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.740393029048841',
        '0.740393029048841',
        '0.740393029048841',
        '0.740393029048841',
        '0.740393029048841',
        '0.740393029048841',
        '0.740100417082969',
        '0.739008135547455',
        '0.739008135547455',
        '0.738991593711303',
        '0.738991593711303',
        '0.738777938805098',
        '0.738494393280633',
        '0.738494393280633',
        '0.738494393280633',
        '0.738174316063166',
        '0.738174316063166',
        '0.738163761264294',
        '0.738163761264294',
        '0.738163761264294',
        '0.738149283403194',
        '0.738149283403194',
        '0.737382710237927',
        '0.737363392339042',
        '0.737361440613493',
        '0.737361440613493',
        '0.737255876760327',
        '0.736074647243502',
        '0.735577680180643',
        '0.735577126527136',
        '0.735577126527136',
        '0.735577126527136',
        '0.735577126527136',
        '0.735577126527136',
        '0.735577126527136',
        '0.735577126527136',
        '0.735564337407894',
        '0.735399683131448',
        '0.735399683131448',
        '0.735399683131448',
        '0.734526989777831',
        '0.734526989777831',
        '0.734526989777831',
        '0.734429269394624',
        '0.734407829823401',
        '0.734406638856434',
        '0.730604197214055',
        '0.730499710991221',
        '0.730499710991221',
        '0.729295439781697',
        '0.729295439781697',
        '0.727988775719222',
        '0.727988775719222',
        '0.722477740229446',
        '0.718654707711424',
        '0.71864786380441',
        '0.716589060216846',
        '0.708912596602797',
        '0.691043907294579',
        '0.645495478617183',
        '0.642618050965613',
        '0.640128952579828',
        '0.639760519308896',
        '0.639414495280324',
        '0.639378515112086',
        '0.63498222221284',
        '0.63498222221284',
        '0.629912288519369',
        '0.629879647874654',
        '0.627107167422825',
        '0.620536415181302',
        '0.62044466100036',
        '0.62044466100036',
        '0.62044466100036',
        '0.608573493185172',
        '0.607089919403566',
        '0.60703147267951',
        '0.606925531165533',
        '0.599372724827365',
        '0.597080759333707',
        '0.597080759333707',
        '0.57419281305134',
        '0.553239776883804'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.740393029048841',
        'topology' => 1942,
        'nodes' => {
          '981' => {
            'two' => '1.38124910437828',
            'bias' => '-0.329887368003351'
          },
          'one' => {},
          'output' => {
            '981' => '2.09303768797041',
            'one' => '2.00725058534531',
            'bias' => '-1.01569049309115',
            '601' => '-1.4229548495618'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '-1.32464581211129'
          }
        },
        'elite' => 1,
        'id' => 6003
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.740393029048841',
      'func' => sub { "DUMMY" }
    },
    '6365' => {
      'penalty' => '10.8101527695983',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999992571',
        '0.749999999992571',
        '0.749999999992571',
        '0.749999999992571',
        '0.749999999992277',
        '0.749999999992277',
        '0.74999999999226',
        '0.74999999999226',
        '0.749999999992242',
        '0.749999999992242',
        '0.749999999992242',
        '0.749999999992242',
        '0.749999999992242',
        '0.749999999991755',
        '0.749999999991623',
        '0.749999999991623',
        '0.749999999991623',
        '0.749999999991623',
        '0.749999999991623',
        '0.749999999991613',
        '0.749999999991613',
        '0.749999999991613',
        '0.749999999991613',
        '0.749999999991596',
        '0.74999999999146',
        '0.74999999999146',
        '0.749999999991455',
        '0.749999999989774',
        '0.749999999986905',
        '0.749999999986905',
        '0.749999999982866',
        '0.749999999982281',
        '0.749999999933753',
        '0.749999999916953',
        '0.749999999882887',
        '0.749999999882887',
        '0.749999999882887',
        '0.749999999860547',
        '0.749999999852812',
        '0.749999999852749',
        '0.749999999617311',
        '0.749999999617306',
        '0.749999999617306',
        '0.749999999617306',
        '0.749999999617306',
        '0.749999999281799',
        '0.749999999281799',
        '0.749999999278853',
        '0.7499999990154',
        '0.7499999990154',
        '0.7499999990154',
        '0.749999997426259',
        '0.749999997426259',
        '0.749999997000199',
        '0.74999999157991',
        '0.749999984299267',
        '0.74999997239201',
        '0.749999967047271',
        '0.749999967046345',
        '0.749999967046345',
        '0.749999965899068',
        '0.749999907552423',
        '0.749999737547027',
        '0.749999722590554',
        '0.749999722590554',
        '0.749999722590554',
        '0.749999722590554',
        '0.749999707506355',
        '0.749999648701617',
        '0.749999648701617',
        '0.749999523213867',
        '0.749999063497181',
        '0.749999059744343',
        '0.749999059744343',
        '0.749999059744343',
        '0.749998941181018',
        '0.749998941181018',
        '0.749998667538088',
        '0.749998667538088',
        '0.749997748541966',
        '0.749997748541966',
        '0.749997748541942',
        '0.749996415316586',
        '0.749994998724471',
        '0.749994998724471',
        '0.74999152160683',
        '0.74999152160683',
        '0.749991521176169',
        '0.749991521176169',
        '0.749991521176169',
        '0.749989818379354',
        '0.749985536233339',
        '0.749985390568344',
        '0.749985298123464',
        '0.749985298123464',
        '0.749985298123464',
        '0.749985298123464',
        '0.749985298123464',
        '0.749985277790741',
        '0.749985277790741'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999992571',
        'topology' => 6365,
        'id' => 14167,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.839074065013486',
            'two' => '-0.262972856946557',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '0.943031378647539'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => 10,
            '1863' => '-3.99673934651357',
            '4639' => '-0.138408783041531',
            '4920' => '0.109681250116612',
            'two' => 10,
            'bias' => '0.0633044234318319',
            '601' => '-1.10229734277953'
          },
          '601' => {
            'one' => '-0.546184463502046',
            '4639' => '-0.794675540669943',
            '4920' => '0.923393572294117',
            'bias' => '0.343330969207763'
          },
          '1863' => {
            'one' => '0.681045118625208',
            '4920' => '0.781711319427398',
            '4639' => '0.563663398817764',
            'two' => '-0.0639901462323342',
            'bias' => 0,
            '601' => '1.70744574919525'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999992571',
      'func' => sub { "DUMMY" }
    },
    '3619' => {
      'penalty' => '10.19414175609',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '3618',
        '601',
        'one',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3618\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3618\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'3618\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3618\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3618\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.748327806038722',
        '0.748327806038722',
        '0.748327806038722',
        '0.748327806038722',
        '0.748327691141664',
        '0.748327691141664',
        '0.748319268095237',
        '0.748319268095237',
        '0.748317767367715',
        '0.748317767367715',
        '0.748317767367715',
        '0.748317767367715',
        '0.748317408777906',
        '0.748317408777906',
        '0.748315389089278',
        '0.748315389089278',
        '0.748315057221241',
        '0.748315057221241',
        '0.74831464751168',
        '0.74831464751168',
        '0.74831464751168',
        '0.74831464751168',
        '0.74831464751168',
        '0.74831464751168',
        '0.74831464751168',
        '0.748313130872243',
        '0.747922121651988',
        '0.747702091062983',
        '0.747702091062983',
        '0.747176076110776',
        '0.747127064933147',
        '0.746365174069811',
        '0.746365150495255',
        '0.746364977764012',
        '0.746364977764012',
        '0.74624242413513',
        '0.746241602490768',
        '0.746241602490768',
        '0.745833366027483',
        '0.745833366027483',
        '0.745749320367068'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.748327806038722',
        'topology' => 3619,
        'nodes' => {
          '1863' => {
            'one' => '0.583787551826243',
            '3618' => '-0.0707569104584352',
            'bias' => 0,
            '601' => '0.908721768263617'
          },
          'one' => {},
          '3618' => {
            'two' => '1.08297327488504',
            'bias' => 0
          },
          'output' => {
            '1863' => '-1.13839030908034',
            'one' => '2.63177276784501',
            'bias' => '0.0558941839608614',
            'two' => '2.39451351407997'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '0.433502949853034',
            'two' => '0.379293810619728'
          }
        },
        'elite' => 1,
        'id' => 5409
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.748327806038722',
      'func' => sub { "DUMMY" }
    },
    '10443' => {
      'penalty' => '5.93427559558066',
      'max' => '0.749999999422074',
      'adj-total' => '1.49999999884403',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999422074',
        '0.74999999942196',
        '0.749999999216987',
        '0.749999999216987',
        '0.749999999216559',
        '0.74999999921334',
        '0.74999999921334',
        '0.74999999921334',
        '0.749999997968189',
        '0.749999997968176',
        '0.749999997968176',
        '0.749999997968167',
        '0.749999997960303',
        '0.749999997960303',
        '0.749999997960303',
        '0.749999997959379',
        '0.74999999795246',
        '0.74999999795246',
        '0.74999999795246',
        '0.74999999795246',
        '0.74999999795246',
        '0.74999999795246',
        '0.749999997900702',
        '0.749999997878058',
        '0.749999997878055',
        '0.749999997878055',
        '0.749999997832787',
        '0.749999997829191',
        '0.749999997829191',
        '0.749999997826746',
        '0.749999997826746',
        '0.749999997825463',
        '0.749999997825463',
        '0.749999997805241',
        '0.749999997805241',
        '0.749999997805241',
        '0.749999997805241',
        '0.749999997805241',
        '0.749999997805241',
        '0.74999999780517',
        '0.749999997784708',
        '0.74999999507494',
        '0.749999995074928',
        '0.749999995074928',
        '0.749999995074928',
        '0.749999995074928',
        '0.749999995074928',
        '0.749999995074928',
        '0.749999995063233',
        '0.749999994522703',
        '0.749999994522703',
        '0.749999994511762',
        '0.7499999944928',
        '0.74999999447884',
        '0.74999999447884',
        '0.749999993611115',
        '0.749999993611115',
        '0.749999993501207',
        '0.749999993501207',
        '0.749999992921165',
        '0.749999992769797',
        '0.749999992684802',
        '0.749999992684802',
        '0.749999992684802',
        '0.749999992684802',
        '0.749999992672744',
        '0.749999992224697',
        '0.749999992224697',
        '0.749999991336534',
        '0.749999991336534',
        '0.749999991243177',
        '0.749999991243177',
        '0.749999990723068',
        '0.749999990723068',
        '0.749999990675529',
        '0.749999990675529',
        '0.749999990555667',
        '0.749999990555667',
        '0.749999990555667',
        '0.749999990555667',
        '0.749999988717443',
        '0.749999988717443',
        '0.749999988717443',
        '0.749999988501856',
        '0.749999988501856',
        '0.749999988501856',
        '0.749999988466939',
        '0.749999988432291',
        '0.74999996805506',
        '0.749999967182672',
        '0.749999954224707',
        '0.749999954224707',
        '0.749999954224707',
        '0.749999954224707',
        '0.749999954018363',
        '0.749999860153534',
        '0.749999860153534',
        '0.749999860153534',
        '0.74999985607819',
        '0.749999749168103'
      ],
      'count' => 3,
      'adjusted' => '0.73835033848984',
      'avg' => '0.749999999010394',
      'min' => '0.749999998187149',
      'last' => '0.749999999258381',
      'champion' => {
        'fitness' => '0.74999999942196',
        'topology' => 10443,
        'nodes' => {
          '4639' => {
            'two' => '1.11595904813886',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.591194628667654',
            'bias' => 0
          },
          'output' => {
            '1863' => '-3.26276800555068',
            'one' => '8.22665952870093',
            '4639' => '-0.102293434575215',
            '4920' => '-0.442481840980792',
            'bias' => '0.0591499626147604',
            'two' => '8.29822654718356',
            '601' => '-0.510617999255357'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.927843340462494',
            '4639' => '-0.575667683908536',
            '4920' => '0.304353010526961',
            'bias' => '0.394883829732671'
          },
          '1863' => {
            'one' => '0.442901882645799',
            '4639' => '0.697148893095542',
            'bias' => 0,
            'two' => '-0.0637410446997384',
            '601' => '1.05633352450603'
          },
          'one' => {}
        },
        'elite' => 0,
        'id' => 16107
      },
      'adj-avg' => '0.749999999422017',
      'total' => '2.24999999703118',
      'offspring' => 0,
      'members' => [
        16169,
        16107,
        16170
      ],
      'best' => '0.749999999422074',
      'func' => sub { "DUMMY" }
    },
    '5930' => {
      'penalty' => '10.090781357222',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749825939919996',
        '0.749825939919996',
        '0.749825939919996',
        '0.749825939919996',
        '0.749825939919996',
        '0.749825939919996',
        '0.749817592026828',
        '0.749817376343437',
        '0.749817376343437',
        '0.749817317441123',
        '0.749817317441123',
        '0.74981607797624',
        '0.749816019947884',
        '0.749816019947884',
        '0.749816015651456',
        '0.749816015651456',
        '0.749816015651456',
        '0.749816015651456',
        '0.749816015651456',
        '0.749815532617417',
        '0.749813857737497',
        '0.749813852004763',
        '0.749813852004763',
        '0.749813814180547',
        '0.749813814180547',
        '0.749812931279556',
        '0.749812931279556',
        '0.749811324314428',
        '0.749811324314428',
        '0.749811324314428',
        '0.749811320297761',
        '0.749811320297761',
        '0.74981131825445',
        '0.74981131825445',
        '0.74981131825445',
        '0.74981131528988',
        '0.74981131528988',
        '0.74981131528988'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749825939919996',
        'topology' => 5930,
        'id' => 7223,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.99496552709397',
            'two' => '-0.265183501444371'
          },
          '4639' => {
            'bias' => 0,
            'two' => '0.881201475760972'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.65877030017945',
            '1863' => '-1.05998156380422',
            '4920' => '-0.0459683666292676',
            '4639' => '-0.126755797615302',
            'two' => '3.26162675281551',
            'bias' => '0.0723682565748498',
            '601' => '-0.486306909555659'
          },
          '601' => {
            'one' => '-0.851244048357399',
            '4920' => '0.71321909885474',
            'bias' => '0.320946382798954'
          },
          '1863' => {
            'one' => '0.495422798674994',
            '4639' => '0.748730898051697',
            'two' => '-0.060196910992202',
            'bias' => 0,
            '601' => '0.899009678724246'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749825939919996',
      'func' => sub { "DUMMY" }
    },
    '12760' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'two' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        '601',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 12760,
        'id' => 13314,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '-0.400125299892493',
            'bias' => 0,
            '601' => '-0.57552280150154'
          },
          '601' => {
            'one' => '0.427487749047356',
            'bias' => '0.95742277755288'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '7226' => {
      'penalty' => '10.4122048033319',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        '7106',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7106\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7106\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7106\'}->{\'bias\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'7106\'}*$n->{\'nodes\'}->{\'7065\'}->{\'7106\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'7065\'}->{\'one\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999910709614',
        '0.749999910709614',
        '0.749999910709614',
        '0.749999910709614',
        '0.749999910709614',
        '0.749999910709614',
        '0.749999910709614',
        '0.749999879802946',
        '0.749999874723446',
        '0.749999874723446',
        '0.749999874723446',
        '0.749999874723446',
        '0.749999870414749',
        '0.749999870414749',
        '0.749999870414749',
        '0.74999980318086',
        '0.74999980318086',
        '0.749999800749367',
        '0.749999759809342',
        '0.749999759809342',
        '0.749999759809342',
        '0.749999707453694',
        '0.749999707453694',
        '0.749999689343966',
        '0.749999688060242',
        '0.749999687326171',
        '0.74999955146298',
        '0.749999551000494',
        '0.749999529890935',
        '0.749998745961238',
        '0.749998745961238',
        '0.749998553192714',
        '0.74999849835057',
        '0.749998498331199',
        '0.749998498297892',
        '0.749997167960903',
        '0.749997167960903',
        '0.74999422393669',
        '0.74999422393669',
        '0.749993398332576',
        '0.749993398029486',
        '0.749993398029486',
        '0.749991311603685',
        '0.749991311603685',
        '0.749990320603804',
        '0.749985844431334',
        '0.749985742221861',
        '0.749985684418663',
        '0.749985674125634',
        '0.749985674125634',
        '0.749985200735691',
        '0.749985200735691',
        '0.749978629215843',
        '0.749965160135997',
        '0.749965160135702',
        '0.749965157336407',
        '0.749965157336407',
        '0.74996416900811',
        '0.749964168823758',
        '0.749964168823758',
        '0.749964156984079',
        '0.749959819988636',
        '0.749959819988636',
        '0.749959414886751',
        '0.74995941488386',
        '0.74995941488386',
        '0.749959378088226',
        '0.749959378088226',
        '0.74995259258239',
        '0.749952571313227',
        '0.749952571313227',
        '0.749952571313227',
        '0.749952571313227',
        '0.749949864554377',
        '0.74994964458712',
        '0.74994964458712'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999910709614',
        'topology' => 7226,
        'id' => 11127,
        'elite' => 1,
        'nodes' => {
          '7106' => {
            '4639' => '0.766541233452065',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.547104355733999',
            'two' => '-0.300189685123649',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '1.00171288695495'
          },
          '7065' => {
            'one' => '-1.43748349479968',
            '7106' => '0.943134570041618',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '6.21129769414411',
            '1863' => '-2.42759266299271',
            '7065' => '-0.179246552293513',
            'two' => '6.58140496245166',
            'bias' => '0.0502004282495996',
            '601' => '-0.452403079412237'
          },
          '601' => {
            'one' => '-0.543707945370099',
            '4920' => '0.70337146994576',
            'bias' => '0.459788526822929'
          },
          '1863' => {
            'one' => '0.65447591212987',
            '4639' => '1.2321550185463',
            'two' => '-0.0649278828012354',
            'bias' => 0,
            '601' => '1.24865107245426'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999910709614',
      'func' => sub { "DUMMY" }
    },
    '8886' => {
      'penalty' => '10.6478629751652',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        '601' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        '3756',
        'two',
        '1863',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3756\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3756\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3756\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3756\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999348961472',
        '0.749999348961472',
        '0.749999348961472',
        '0.749999348961472',
        '0.749999348961472',
        '0.749999348961472',
        '0.749999348961472',
        '0.749997983938709',
        '0.749997203175489',
        '0.749991290121115',
        '0.749991290121115',
        '0.749991290121115',
        '0.74999073587681',
        '0.749987856294166',
        '0.749986862705663',
        '0.749986862705663',
        '0.749986146716712',
        '0.749982215967547',
        '0.749980116277432',
        '0.749980116277432',
        '0.749980116277432',
        '0.749980116277432',
        '0.749969872834766',
        '0.749969872834766',
        '0.749969872834766',
        '0.749969478337762',
        '0.749969478337762',
        '0.74996548017028',
        '0.749953935872749',
        '0.749945925021698',
        '0.749945925021698',
        '0.749945925021698',
        '0.749933472365329',
        '0.749927554155323',
        '0.749924836841304',
        '0.749924836841304',
        '0.749867761460405',
        '0.749867761460405',
        '0.749842563559101',
        '0.749842563559101',
        '0.749842563559101',
        '0.749834563681687',
        '0.749834563681687',
        '0.749706661067484',
        '0.749705999269863',
        '0.749705999269863',
        '0.749662997851336',
        '0.749662997851336',
        '0.749662997851336',
        '0.74961938170451',
        '0.749576172481002',
        '0.749576039765121',
        '0.749576039765121',
        '0.749576039765121',
        '0.749576039765121',
        '0.749456443536589',
        '0.749456443536589',
        '0.749221871495696',
        '0.749221871495696',
        '0.749221193166914',
        '0.749221003819919',
        '0.749221003819919',
        '0.749141602973963',
        '0.749141602973963',
        '0.748904269769088',
        '0.748854439175011',
        '0.748740750264484',
        '0.748740750264484',
        '0.748740750264484',
        '0.748740750264484',
        '0.748739668810451',
        '0.748739668810451'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999348961472',
        'topology' => 8886,
        'nodes' => {
          '3756' => {
            'bias' => 0
          },
          '1863' => {
            '3756' => '1.08690093792719',
            'bias' => 0,
            'two' => '-0.101081264166937'
          },
          'one' => {},
          'output' => {
            '1863' => '-2.97862009420085',
            'one' => '5.43721055184101',
            'bias' => '0.0948972904839367',
            'two' => '5.82578201977922'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '0.388983278878132'
          }
        },
        'elite' => 1,
        'id' => 12726
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999348961472',
      'func' => sub { "DUMMY" }
    },
    '13612' => {
      'penalty' => '10.072382',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'1863\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999998746',
        '0.749999999998746',
        '0.749999999998746',
        '0.749999999998746',
        '0.749999999998746',
        '0.749999999998746',
        '0.749999999998746',
        '0.749999999998741',
        '0.749999999998718',
        '0.749999999998718',
        '0.749999999998684',
        '0.749999999998684',
        '0.749999999998684',
        '0.749999999998684',
        '0.749999999998684',
        '0.749999999998684',
        '0.749999999998684',
        '0.749999999998012',
        '0.749999999998012',
        '0.749999999998012',
        '0.749999999998',
        '0.749999999998',
        '0.749999999997843',
        '0.749999999997821'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999998746',
        'topology' => 13612,
        'nodes' => {
          '4639' => {
            'one' => '-0.650083675411187',
            'two' => '0.878369451141423',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.88990408011986',
            '4639' => '0.733166102156049',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.29915923640935'
          },
          '6083' => {
            'bias' => '1.02220125048858'
          },
          'output' => {
            '1863' => '-3.41976472661062',
            'one' => '9.99464342196622',
            '4920' => '0.199227809115443',
            '4639' => '-0.232188679973838',
            'bias' => '0.0450817139164004',
            'two' => 10,
            '601' => '-2.02415373990404'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.27807057250805',
            '4920' => '0.767765479402868',
            'bias' => '0.27393835407373',
            'two' => '-0.902420397914554'
          },
          '1863' => {
            'one' => '0.410622238918635',
            '4639' => '0.942711141395208',
            '6083' => '-0.190997977802093',
            'bias' => 0,
            'two' => '-0.0222474601789391',
            '601' => '0.585541048652095'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 14363
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999998746',
      'func' => sub { "DUMMY" }
    },
    '8655' => {
      'penalty' => '10.5458844947826',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '601',
        'one',
        '1863',
        '4920',
        '7106',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'7106\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7106\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'7106\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7106\'}->{\'bias\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'7106\'}*$n->{\'nodes\'}->{\'7065\'}->{\'7106\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999686049',
        '0.749999999686049',
        '0.749999999686049',
        '0.749999999686049',
        '0.749999999686049',
        '0.749999999686049',
        '0.749999999686049',
        '0.749999999686048',
        '0.749999999686048',
        '0.74999999968596',
        '0.74999999968596',
        '0.74999999968596',
        '0.749999999673651',
        '0.749999999673651',
        '0.749999999673651',
        '0.749999999673651',
        '0.749999999673651',
        '0.749999999673286',
        '0.749999999671585',
        '0.749999999671585',
        '0.749999998343038',
        '0.749999997774017',
        '0.749999997774017',
        '0.749999997774017',
        '0.749999994042676',
        '0.749999993167657',
        '0.749999987265471',
        '0.749999979940652',
        '0.74999997967773',
        '0.74999994095981',
        '0.749999940848956',
        '0.74999994084889',
        '0.749999864878736',
        '0.749999812688016',
        '0.749999812688016',
        '0.749999812687899',
        '0.749999763249836',
        '0.749999763249802',
        '0.749999693257758',
        '0.749999693257758',
        '0.749999634863718',
        '0.749999634863718',
        '0.749999634863718',
        '0.749999634863693',
        '0.749999634863693',
        '0.749999111932795',
        '0.749999111932795',
        '0.749999111932795',
        '0.749998585489386',
        '0.749998585489386',
        '0.749997537759438',
        '0.749997537759438',
        '0.749997537759438',
        '0.749997537759438',
        '0.749997537759438',
        '0.749997537759432',
        '0.749996249961409',
        '0.749996249931372',
        '0.749992409364875',
        '0.749992409364875',
        '0.749992409364874',
        '0.749992409364874',
        '0.749989285164376',
        '0.749989285164376',
        '0.749989285164376',
        '0.74998045670122',
        '0.749980255106783',
        '0.749980255106783',
        '0.749972441612695',
        '0.749965218842489',
        '0.749965218842489',
        '0.749965218842489',
        '0.749964895433321',
        '0.749964895433321',
        '0.749964895433321',
        '0.74995403205038',
        '0.749934084817763',
        '0.74993346690396',
        '0.74993346690396',
        '0.749933466824456',
        '0.749929131908523',
        '0.749929131908523',
        '0.749885007276768',
        '0.749885005963268',
        '0.749803190669368',
        '0.749803190669368',
        '0.749784530702486',
        '0.749784530702486',
        '0.749784530702486',
        '0.749784530702483',
        '0.749600838170279',
        '0.749600838170279',
        '0.749600838170279'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999686049',
        'topology' => 8655,
        'id' => 13589,
        'elite' => 1,
        'nodes' => {
          '7106' => {
            '4639' => '0.837151677863776',
            '4920' => '0.848168944780159',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.868557315471391',
            'two' => '-0.366388047786076',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '1.0786832358887'
          },
          '7065' => {
            '7106' => '1.32028099199124',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '8.66242946283857',
            '1863' => '-4.0359382561214',
            '7065' => '-0.150426993387558',
            'bias' => 0,
            'two' => '9.26841681889563',
            '601' => '0.0591269326702183'
          },
          '601' => {
            'bias' => '1.02323098330248'
          },
          '1863' => {
            'one' => '0.338533524659734',
            '4639' => '0.674941936901974',
            'two' => '-0.0440449149471677',
            'bias' => 0,
            '601' => '1.1013616861811'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999686049',
      'func' => sub { "DUMMY" }
    },
    '3881' => {
      'penalty' => '10.9209546269357',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        '3880',
        'two',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3880\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3880\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'3880\'}->{\'one\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3880\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3880\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749622918172244',
        '0.749622918172244',
        '0.749622918172244',
        '0.749492584514683',
        '0.749492584514683',
        '0.749492584514683',
        '0.749492584514683',
        '0.749334685721516',
        '0.749334685721516',
        '0.749334685721516',
        '0.749331670049545',
        '0.749112817813025',
        '0.749112817813025',
        '0.749112817813025',
        '0.749112817813025',
        '0.749112817813025',
        '0.7490985634993',
        '0.7490985634993',
        '0.7490985634993',
        '0.7490985634993',
        '0.7490985634993',
        '0.7490985634993',
        '0.749089969042363',
        '0.749089969042363',
        '0.749089969042363',
        '0.749081223708941',
        '0.749081223708941',
        '0.749081222816812',
        '0.749081222816812',
        '0.749081222816812',
        '0.74908121733441',
        '0.74908121733441',
        '0.749078741754314',
        '0.749078741754314',
        '0.749072789733887',
        '0.749072789733887',
        '0.749072789733887',
        '0.749071885755182',
        '0.749071881053423',
        '0.749066446995324',
        '0.74906643942347',
        '0.749066437780653',
        '0.749066430128579',
        '0.749066430128579',
        '0.749043446637525',
        '0.749043446637525',
        '0.749015495791789',
        '0.749015495791789',
        '0.749015492515804',
        '0.749015492515804',
        '0.748789838059169',
        '0.748789838059169',
        '0.748789838059169',
        '0.748789838059169',
        '0.748789838059169',
        '0.748788676195248',
        '0.748788676195248',
        '0.748788676195248',
        '0.748778467485941',
        '0.748778462768977',
        '0.748778462768977',
        '0.748778462768977',
        '0.748778462768977',
        '0.748774750194674',
        '0.748774743791137',
        '0.748774743791137',
        '0.748774743791137',
        '0.748774743791137',
        '0.748774743791137',
        '0.74877151103796',
        '0.74877151103796',
        '0.748754411802759',
        '0.748754406766452',
        '0.748754406766452',
        '0.748754404732826',
        '0.748754404732826',
        '0.748754396073387',
        '0.748677690726002',
        '0.748677690726002',
        '0.748677690726002',
        '0.748646829529992',
        '0.748646821060284',
        '0.748510905748883',
        '0.74836074911658',
        '0.74836074911658',
        '0.74836074911658',
        '0.748271113733534',
        '0.748180375602503',
        '0.747867582413668',
        '0.747867582413668',
        '0.747439267885902'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749622918172244',
        'topology' => 3881,
        'nodes' => {
          '1863' => {
            '3880' => '0.528108730598721',
            'bias' => 0,
            'two' => '-0.0855858097102313',
            '601' => '1.05596823827733'
          },
          'one' => {},
          '3880' => {
            'one' => '0.777645799618945',
            'bias' => 0
          },
          'output' => {
            '1863' => '-1.35190674055073',
            'one' => '3.13683274945569',
            'bias' => '0.0338071391473115',
            'two' => '3.71449099255913'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '0.503764910403742',
            'two' => '0.602680424625263'
          }
        },
        'elite' => 0,
        'id' => 7625
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749622918172244',
      'func' => sub { "DUMMY" }
    },
    '14388' => {
      'penalty' => '5.0976297035032',
      'max' => '0.749999999993284',
      'adj-total' => '1.49999999998657',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999993284',
        '0.749999999993284',
        '0.749999999993284',
        '0.749999999993284',
        '0.749999999993282',
        '0.749999999993282',
        '0.749999999993275',
        '0.749999999993275',
        '0.749999999993259',
        '0.749999999993217',
        '0.749999999993175',
        '0.749999999993175',
        '0.749999999993142',
        '0.749999999993142',
        '0.749999999993142',
        '0.749999999992946',
        '0.749999999992936',
        '0.749999999992933',
        '0.749999999991859',
        '0.749999999991859',
        '0.749999999991849',
        '0.749999999991849',
        '0.749999999991849',
        '0.749999999990407',
        '0.749999999990407',
        '0.749999999990407',
        '0.749999999990407',
        '0.749999999989719',
        '0.749999999988702',
        '0.74999999998821',
        '0.749999999987999',
        '0.749999999987999',
        '0.749999999987998',
        '0.749999999987939',
        '0.749999999987939',
        '0.749999999977089'
      ],
      'count' => 3,
      'adjusted' => '0.749899910530889',
      'avg' => '0.749999999992925',
      'min' => '0.749999999992206',
      'last' => '0.749999999990288',
      'champion' => {
        'fitness' => '0.749999999993284',
        'topology' => 14388,
        'nodes' => {
          '4639' => {
            'one' => '-0.693039194464127',
            'two' => '0.886734969684357',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.855923878701785',
            '4639' => '0.711813906813447',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.23739832193562'
          },
          '6083' => {
            'bias' => '0.909432665025555'
          },
          'output' => {
            '1863' => '-3.30197576183839',
            'one' => '9.67094529656186',
            '4920' => '0.167565227831531',
            '4639' => '-0.225545243211408',
            'bias' => '0.0495354058975829',
            'two' => 10,
            '601' => '-1.80247200868192'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.74574846578041',
            '4920' => '0.590746278557682',
            '4639' => '0.612475581438852',
            'bias' => '0.231462590151812',
            'two' => '-0.871470709072418'
          },
          '1863' => {
            'one' => '0.533356469889955',
            '4639' => '1.04660476652572',
            'bias' => 0,
            'two' => '-0.0203431169294252',
            '601' => '0.607714667063519'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 15985
      },
      'adj-avg' => '0.749999999993284',
      'total' => '2.24999999997877',
      'offspring' => 0,
      'members' => [
        15985,
        16171,
        16172
      ],
      'best' => '0.749999999993284',
      'func' => sub { "DUMMY" }
    },
    '4921' => {
      'penalty' => '10.8285070620498',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.74979028524936',
        '0.74979028524936',
        '0.74979028524936',
        '0.74979028524936',
        '0.749790246858092',
        '0.749790246858092',
        '0.749790246858092',
        '0.749790246858092',
        '0.749788042621905',
        '0.749744710510998',
        '0.749743583252702',
        '0.749743583252702',
        '0.749743583252702',
        '0.749743583252702',
        '0.749743529450924',
        '0.749743528321556',
        '0.749743528321556',
        '0.749743319373603',
        '0.749743319373603',
        '0.749743319373603',
        '0.749739374273637',
        '0.749739374273637',
        '0.749739374273637',
        '0.749739374273637',
        '0.749730703648484',
        '0.749730630476849',
        '0.749727515544312',
        '0.749727515544312',
        '0.749704982355477',
        '0.749704982355477',
        '0.749686997359668',
        '0.749686997359668',
        '0.749686997359668',
        '0.749686997263163',
        '0.749680401952141',
        '0.749680401952141',
        '0.749680401952141',
        '0.749680401952141',
        '0.749678349926282',
        '0.749678349926282',
        '0.749678349926282',
        '0.749678349926282',
        '0.749678349926282',
        '0.749678349926282',
        '0.749678349926282',
        '0.749678349926282',
        '0.749678349926282'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.74979028524936',
        'topology' => 4921,
        'nodes' => {
          '4639' => {
            'two' => '0.94097198440005',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.944519934344166',
            'bias' => 0
          },
          'output' => {
            '1863' => '-0.989544804182196',
            'one' => '3.2298957386847',
            'bias' => '0.0648292916875705',
            'two' => '3.78503609758829',
            '601' => '-0.524986488902645'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.868476298390267',
            '4920' => '0.825066331637297',
            'bias' => '0.321085511447368'
          },
          '1863' => {
            'one' => '0.448040602177304',
            'bias' => 0,
            'two' => '-0.049213257673847',
            '601' => '0.88316747995409'
          },
          'one' => {}
        },
        'elite' => 0,
        'id' => 6718
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.74979028524936',
      'func' => sub { "DUMMY" }
    },
    '13913' => {
      'penalty' => '3.39572849964192',
      'max' => '0.749978866555623',
      'adj-total' => '0.749978866555623',
      'ignore' => {},
      'adj-count' => 1,
      'order' => [
        'bias',
        '2016',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'2016\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'2016\'}->{\'bias\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'2016\'}*$n->{\'nodes\'}->{\'601\'}->{\'2016\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749978866555623',
        '0.749956895738211',
        '0.749956334057501',
        '0.74994795748031',
        '0.74994795748031',
        '0.749947946891658',
        '0.749947946891658',
        '0.749947781687119',
        '0.749947781687119',
        '0.749945109585069',
        '0.749942204672647',
        '0.749942204672647',
        '0.749942204672647',
        '0.749942204672647',
        '0.749942204672647',
        '0.749941758761271',
        '0.749941758761271',
        '0.749941758761271',
        '0.749918804020663',
        '0.749900629343274',
        '0.749900527282226',
        '0.749889446852539',
        '0.749889446852539',
        '0.7498893024859',
        '0.749858620062757',
        '0.749827237363852',
        '0.749827237363852',
        '0.749825572640442',
        '0.749825571531674',
        '0.749825571531674',
        '0.749824087981154',
        '0.74982408797629',
        '0.74982408797629',
        '0.74982408797629',
        '0.749823279653393',
        '0.749823279653393',
        '0.749823279653393',
        '0.749823279653393',
        '0.749803358159314',
        '0.749802617772091',
        '0.749802617772091',
        '0.749802617772091',
        '0.749802617772091',
        '0.749802617772091',
        '0.749802617440208',
        '0.749790378509308',
        '0.749790352729709'
      ],
      'count' => 3,
      'adjusted' => '0.749912767821397',
      'avg' => '0.749964219344015',
      'min' => '0.749956895738211',
      'last' => '0.749947440887066',
      'champion' => {
        'fitness' => '0.749956895738211',
        'topology' => 13913,
        'id' => 16111,
        'elite' => 0,
        'nodes' => {
          '2016' => {
            'bias' => '0.966447713167801'
          },
          '4920' => {
            '4639' => '0.923009708200735',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '0.860780481636632'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '4.79043605673986',
            '1863' => '-1.28303367384499',
            'two' => '4.27196349244991',
            'bias' => '0.0434223869643894',
            '601' => '-0.514742246807809'
          },
          '601' => {
            '2016' => '0.338261859451856',
            'one' => '-0.817421682815118',
            '4920' => '1.25519488202725',
            'bias' => 0
          },
          '1863' => {
            'one' => '0.398788559091019',
            'two' => '-0.0502115470515555',
            'bias' => 0,
            '601' => '0.861416227613597'
          },
          'one' => {}
        }
      },
      'adj-avg' => '0.749978866555623',
      'total' => '2.24989265803205',
      'offspring' => 0,
      'members' => [
        16174,
        16173,
        16111
      ],
      'best' => '0.749978866555623',
      'func' => sub { "DUMMY" }
    },
    '12927' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '601',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999992754',
        '0.749999999992754',
        '0.749999999992754',
        '0.749999999992754',
        '0.749999999992754',
        '0.749999999992754',
        '0.749999999992754',
        '0.749999999992754',
        '0.749999999992754',
        '0.749999999992754',
        '0.749999999992754',
        '0.749999999992754',
        '0.749999999992725',
        '0.749999999992725',
        '0.749999999992725',
        '0.749999999992725',
        '0.749999999992725'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999992754',
        'topology' => 12927,
        'id' => 13189,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => 10,
            'two' => 10,
            'bias' => '0.0206497544057552',
            '601' => '-5.2416097910959'
          },
          '601' => {
            'one' => '-0.830059668937473',
            'bias' => '0.616339484543626',
            'two' => '0.0160812051922383'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999992754',
      'func' => sub { "DUMMY" }
    },
    '15837' => {
      'penalty' => 2,
      'max' => '0.749999999999956',
      'adj-total' => '1.49999999999991',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        '14941',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'14941\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'14941\'}->{\'bias\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'14941\'}*$n->{\'nodes\'}->{\'6083\'}->{\'14941\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'14941\'}*$n->{\'nodes\'}->{\'7065\'}->{\'14941\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'7065\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'7065\'}->{\'one\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999956',
        '0.749999999999956',
        '0.749999999999956',
        '0.749999999999956',
        '0.749999999999956',
        '0.749999999999954',
        '0.749999999999954'
      ],
      'count' => 3,
      'adjusted' => '0.749999999924956',
      'avg' => '0.749999999999955',
      'min' => '0.749999999999952',
      'last' => '0.749999999999861',
      'champion' => {
        'fitness' => '0.749999999999956',
        'topology' => 15837,
        'id' => 15925,
        'elite' => 1,
        'nodes' => {
          '14941' => {
            'bias' => '0.870617382773356'
          },
          '4920' => {
            'one' => '0.885328459665327',
            '4639' => '0.74818269290369',
            'two' => '-0.26328696396865',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.813190399667706',
            'bias' => 0,
            'two' => '0.922952418267393'
          },
          '7065' => {
            'one' => '-0.480080803715552',
            '14941' => '-0.0583717664415744',
            '4639' => '0.772105773171098',
            'bias' => 0,
            '601' => '0.589004279822695'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.70662371456309',
            '1863' => '-3.69581600195527',
            '4920' => '0.12605005076848',
            '7065' => '-0.231250165869107',
            'two' => 10,
            'bias' => '0.0488006401349257',
            '601' => '-2.32940902258125'
          },
          '6083' => {
            '14941' => '0.872373519036789',
            'bias' => 0
          },
          '601' => {
            'one' => '-1.8075566236214',
            '4920' => '0.696863027294279',
            '4639' => '-0.774208687257148',
            'two' => '-1.01833251924781',
            'bias' => '0.323495560023782'
          },
          '1863' => {
            'one' => '0.416736701810705',
            '4639' => '0.92589482452091',
            'two' => '-0.0163541192303563',
            'bias' => 0,
            '601' => '0.518989863496797'
          },
          'one' => {}
        }
      },
      'adj-avg' => '0.749999999999956',
      'total' => '2.24999999999986',
      'offspring' => 0,
      'members' => [
        15925,
        16175,
        16176
      ],
      'best' => '0.749999999999956',
      'func' => sub { "DUMMY" }
    },
    '5005' => {
      'penalty' => '10.1244',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749690752255596',
        '0.749690752255596',
        '0.749690752255596',
        '0.749690752255596',
        '0.749690559514327',
        '0.749690559514327',
        '0.749690559514327',
        '0.749690559514327',
        '0.749690559514327',
        '0.749690559514327',
        '0.749690541736876',
        '0.749689565431898',
        '0.749689372358638',
        '0.749689372358638',
        '0.749689372358638',
        '0.749689372358638',
        '0.749689372358638',
        '0.749689372333121',
        '0.749689372333121',
        '0.749689135869699',
        '0.749689135869699',
        '0.749689135869699'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749690752255596',
        'topology' => 5005,
        'nodes' => {
          '4639' => {
            'two' => '0.99747201187799',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.86000843699628',
            'bias' => 0
          },
          'output' => {
            '1863' => '-0.989544804182196',
            'one' => '3.20523224797128',
            'bias' => '0.074429753902327',
            'two' => '3.14927581474822',
            '601' => '-0.463509631260245'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.83390853366443',
            '4920' => '0.824082968770008',
            'bias' => '0.321085511447368'
          },
          '1863' => {
            'one' => '0.513351698528216',
            '4639' => '0.784433683097218',
            'bias' => 0,
            'two' => '-0.0480958728125836',
            '601' => '0.88316747995409'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 5786
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749690752255596',
      'func' => sub { "DUMMY" }
    },
    '6286' => {
      'penalty' => '10.1841186',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749863635501176',
        '0.749863635501176',
        '0.749863635501176',
        '0.749863635501176',
        '0.749862261076979',
        '0.749862261076979',
        '0.749862261076979',
        '0.749861043271145',
        '0.749861043271145',
        '0.749861043271145',
        '0.749861042924998',
        '0.749861042924998',
        '0.749861042924998',
        '0.749860827546401',
        '0.749860827546401',
        '0.749860582947249',
        '0.749860582947249',
        '0.749858257056456',
        '0.749858257056456',
        '0.749858257056456',
        '0.749858257056456',
        '0.749858257056456',
        '0.749858249881811',
        '0.749858141028261',
        '0.749858141028261',
        '0.749858141028261',
        '0.749858141028261'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749863635501176',
        'topology' => 6286,
        'nodes' => {
          '4639' => {
            'two' => 1,
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.99496552709397',
            'bias' => 0,
            'two' => '-0.265499719370495'
          },
          'output' => {
            '1863' => '-1.06034219359517',
            'one' => '3.20523224797128',
            '4639' => '-0.141095710983915',
            'bias' => '0.074429753902327',
            'two' => '3.64959154863263',
            '601' => '-0.486306909555659'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.95371743440753',
            '4920' => '0.81615238490166',
            '4639' => '-0.792935045480231',
            'bias' => '0.307932848437218'
          },
          '1863' => {
            'one' => '0.51062893160562',
            '4639' => '0.842620974791196',
            '4920' => '0.399272919613317',
            'bias' => 0,
            'two' => '-0.0485027036571635',
            '601' => '0.88316747995409'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 7153
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749863635501176',
      'func' => sub { "DUMMY" }
    },
    '11987' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'two' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        '1863',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 11987,
        'id' => 12014,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          '1863' => {
            'bias' => 0,
            '601' => 1
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '-0.404353333689505',
            '1863' => '-0.57552280150154',
            'bias' => 0
          },
          '601' => {
            'bias' => '0.95742277755288'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '6795' => {
      'penalty' => '10.4694596474516',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '6794',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6794\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'6794\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6794\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'6794\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6794\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999991029',
        '0.749999999991029',
        '0.749999999991029',
        '0.749999999991029',
        '0.749999999990998',
        '0.749999999990998',
        '0.749999999990998',
        '0.749999999990998',
        '0.749999999990998',
        '0.749999999990998',
        '0.749999999990998',
        '0.749999999990998',
        '0.74999999999027',
        '0.749999999974634',
        '0.749999999964566',
        '0.749999999964122',
        '0.749999999964122',
        '0.749999999964117',
        '0.749999999964117',
        '0.749999999901386',
        '0.749999999901386',
        '0.749999999901289',
        '0.749999999901235',
        '0.749999999901234',
        '0.749999999901234',
        '0.749999999901234',
        '0.749999999901231',
        '0.74999999983731',
        '0.749999999795058',
        '0.749999999792938',
        '0.749999999792732',
        '0.749999999790139',
        '0.749999999790139',
        '0.749999999790139',
        '0.749999999790139',
        '0.749999999790139',
        '0.749999999790139',
        '0.749999999785744',
        '0.749999999785744',
        '0.749999999785697',
        '0.749999999398922',
        '0.749999998916261',
        '0.749999998417857',
        '0.749999998417857',
        '0.749999996909026',
        '0.749999996909026',
        '0.749999992188463',
        '0.74999999028865',
        '0.749999975463457',
        '0.749999951249638',
        '0.749999932441451',
        '0.749999932441451',
        '0.749999932310886',
        '0.749999932310886',
        '0.749999932310886',
        '0.749999893190337',
        '0.749999878250196',
        '0.749999834816536',
        '0.749999834816536',
        '0.749999672091837',
        '0.749999219006488',
        '0.749998565371378',
        '0.749998565371378',
        '0.749997622143646',
        '0.749997197023462',
        '0.749997196966841',
        '0.749996644106738',
        '0.749993188341489',
        '0.749992788605625',
        '0.749992786730895',
        '0.749992777940967',
        '0.749992777940967',
        '0.749992055493332',
        '0.749992055493332',
        '0.749992055493332',
        '0.749992055493332',
        '0.749991541809569',
        '0.749991541809569',
        '0.749991541809569',
        '0.74999141017967',
        '0.749986994964656',
        '0.749979449198424',
        '0.749979449172953',
        '0.749979449172953',
        '0.749979443927965',
        '0.749979443927965',
        '0.749979443886688',
        '0.749972319090904',
        '0.749972319090904',
        '0.749971507608736',
        '0.749971507608736',
        '0.749970567635592',
        '0.749970567635592',
        '0.749955556633653',
        '0.749948892330138',
        '0.749948879553291',
        '0.749948879553291',
        '0.749948879553291',
        '0.749948820907392',
        '0.749927082003408'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999991029',
        'topology' => 6795,
        'nodes' => {
          '4639' => {
            'two' => '0.687890657104484',
            'bias' => 0
          },
          '4920' => {
            '6794' => '1.0161854829191',
            'bias' => 0,
            'two' => '-0.519791539171734'
          },
          'output' => {
            '1863' => '-4.34583401756604',
            'one' => 10,
            '4639' => '-0.161748345735076',
            'bias' => '0.0577740154639567',
            'two' => 10,
            '601' => '-0.659859614344653'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.31076239896421',
            '4920' => '0.661420247425958',
            'bias' => '0.279303013063157'
          },
          '6794' => {
            '4639' => '0.906280062828297',
            'bias' => 0
          },
          '1863' => {
            'one' => '0.442145786462307',
            '4639' => '0.879993207839063',
            'bias' => 0,
            'two' => '-0.0422831635576836',
            '601' => '1.01932877068615'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 13591
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999991029',
      'func' => sub { "DUMMY" }
    },
    '6045' => {
      'penalty' => '10.3465426229329',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        '549',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'549\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'549\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'549\'}->{\'one\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'549\'}*$n->{\'nodes\'}->{\'output\'}->{\'549\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.638201143769361',
        '0.638201143769361',
        '0.638201143769361',
        '0.638201143769361',
        '0.638201143769361',
        '0.638201143769351',
        '0.638201142708408',
        '0.638201142708408',
        '0.638201142708408',
        '0.638201142708408',
        '0.638201142708408',
        '0.638201038444048',
        '0.63820103844103',
        '0.60897552865633',
        '0.60897552865633',
        '0.60897552865633',
        '0.608975528656254',
        '0.608975528656254',
        '0.608975528656254',
        '0.608975528656254',
        '0.608975528656254',
        '0.608969420573823',
        '0.608969420573823',
        '0.608882887176849',
        '0.608882887176849',
        '0.608882887176849',
        '0.60888076447401',
        '0.608880135708814',
        '0.608880135708814',
        '0.608794138330653',
        '0.607074921710026',
        '0.607074918256405',
        '0.607074910230156',
        '0.607074910230156',
        '0.607059920262087',
        '0.607059920262087',
        '0.60705990533694',
        '0.60705990533694',
        '0.604267133035042'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.638201143769361',
        'topology' => 6045,
        'nodes' => {
          '549' => {
            'one' => '1.04187898074661',
            'bias' => 0
          },
          '4639' => {
            'two' => '0.930788569328464',
            'bias' => 0
          },
          '4920' => {
            '4639' => '1.02490275447767',
            'bias' => 0,
            'two' => '-0.269377255189397'
          },
          'output' => {
            '1863' => '-1.15448324278314',
            '549' => '3.20523224797128',
            '4639' => '-0.135800061574209',
            'bias' => '0.0688208905103387',
            'two' => '4.0802725360189',
            '601' => '-0.495511183901079'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.978918074475015',
            '4920' => '0.803646918676541',
            'bias' => '0.321085511447368'
          },
          'one' => {},
          '1863' => {
            'one' => '0.468511781725094',
            '4639' => '0.816318894040748',
            'bias' => 0,
            'two' => '-0.0485027036571635',
            '601' => '0.919666843176843'
          }
        },
        'elite' => 1,
        'id' => 7357
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.638201143769361',
      'func' => sub { "DUMMY" }
    },
    '602' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'two' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 602,
        'id' => 643,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '-0.404353333689505',
            'bias' => 0,
            '601' => '-0.57552280150154'
          },
          '601' => {
            'bias' => '0.95742277755288'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '3687' => {
      'penalty' => '10.6444806604',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '3618',
        '601',
        '1863',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3618\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3618\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'3618\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3618\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3618\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.748762220531758',
        '0.748762220531758',
        '0.748762220531758',
        '0.748762220531758',
        '0.748762220531758',
        '0.748762220531758',
        '0.748762220531758',
        '0.748762220531758',
        '0.748762215134919',
        '0.748762215134919',
        '0.748752355084884',
        '0.748752355084884',
        '0.748666132937757',
        '0.748666132937757',
        '0.748666132937757',
        '0.748666132937757',
        '0.748666132937757',
        '0.748351239506608',
        '0.748351239506608',
        '0.74815462899367',
        '0.748018433581687',
        '0.748008079040351',
        '0.748008079040351',
        '0.748008079040351',
        '0.748008079040351',
        '0.748008079040351',
        '0.747786444126277',
        '0.747786444126277',
        '0.747593614033417',
        '0.747593614033417',
        '0.746491137346177',
        '0.746491137346177',
        '0.746491137346177'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.748762220531758',
        'topology' => 3687,
        'nodes' => {
          '1863' => {
            '3618' => '-0.0800610018183154',
            'bias' => 0,
            '601' => '1.21216760454185'
          },
          'one' => {},
          '3618' => {
            'two' => '1.00031691370065',
            'bias' => 0
          },
          'output' => {
            '1863' => '-1.24929591795827',
            'one' => '2.53959130601119',
            'bias' => '0.0671196931608042',
            'two' => '2.54196448450059'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '0.51176328237042'
          }
        },
        'elite' => 1,
        'id' => 5143
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.748762220531758',
      'func' => sub { "DUMMY" }
    },
    '6326' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'}), 5 ); }',
      'history' => [
        '0.500356894581895',
        '0.500356894581895',
        '0.500356894581895',
        '0.500356894581895',
        '0.500356894581895',
        '0.500356894581895',
        '0.500356894581895',
        '0.500356894581895',
        '0.500356894581895',
        '0.500356894581895',
        '0.500356894581895',
        '0.500356894581895',
        '0.500356894581895',
        '0.500356894581895',
        '0.500356894581895'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.500356894581895',
        'topology' => 6326,
        'nodes' => {
          'one' => {},
          '1863' => {
            'bias' => 0,
            '601' => 1
          },
          'output' => {
            '1863' => '-0.390562420329345',
            'bias' => 0
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '0.610887394894519',
            'bias' => '1.04155149256474',
            'two' => '-0.687462870644616'
          }
        },
        'elite' => 1,
        'id' => 6325
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.500356894581895',
      'func' => sub { "DUMMY" }
    },
    '5970' => {
      'penalty' => '6.77651540148704',
      'max' => '0.749999999989647',
      'adj-total' => '1.49999999997849',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'two',
        '4639',
        'one',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999989647',
        '0.749999999989647',
        '0.749999999989647',
        '0.749999999956461',
        '0.749999999956461',
        '0.749999999956418',
        '0.749999999956418',
        '0.749999999956379',
        '0.749999999956379',
        '0.749999999956379',
        '0.749999999956379',
        '0.749999999956379',
        '0.749999999956348',
        '0.749999999956348',
        '0.749999999956348',
        '0.749999999956348',
        '0.749999999956329',
        '0.749999999956329',
        '0.749999999956329',
        '0.749999999952595',
        '0.749999999952595',
        '0.749999999952349',
        '0.749999999922042',
        '0.749999999921923',
        '0.749999999865747',
        '0.749999999865747',
        '0.74999999986525',
        '0.74999999986525',
        '0.749999999865235',
        '0.749999999865235',
        '0.749999999865235',
        '0.749999999865235',
        '0.749999999865227',
        '0.749999999865227',
        '0.749999999865227',
        '0.749999999865213',
        '0.749999999862761',
        '0.749999999862761',
        '0.749999999862701',
        '0.749999999862701',
        '0.749999999862546',
        '0.74999999986245',
        '0.749999999862417',
        '0.749999999862417',
        '0.749999999862417',
        '0.749999999654381',
        '0.749999999654381',
        '0.749999999619889',
        '0.749999999619889',
        '0.749999999031741',
        '0.749999999017075',
        '0.749999999017075',
        '0.749999999017075',
        '0.749999999016468',
        '0.749999999016468',
        '0.749999999016453',
        '0.749999999016453',
        '0.749999999016453',
        '0.749999998832145',
        '0.749999998796177',
        '0.749999998748464',
        '0.749999998658504',
        '0.749999998576245',
        '0.749999998576245',
        '0.749999997830065',
        '0.749999994482382',
        '0.749999994482382',
        '0.749999994482196',
        '0.749999994482196',
        '0.749999994424105',
        '0.749999994424105',
        '0.749999992622895',
        '0.749999992567771',
        '0.749999990563904',
        '0.749999990544679',
        '0.749999990544679',
        '0.749999990544679',
        '0.749999971380068',
        '0.749999970281047',
        '0.749999970281047',
        '0.749999970280862',
        '0.749999955760986',
        '0.749999955760986',
        '0.749999955760986',
        '0.749999955760986',
        '0.749999946990313',
        '0.749999946990313',
        '0.749999918278822',
        '0.749999898093052',
        '0.749999898093052',
        '0.749999806754491',
        '0.749999806754491',
        '0.749999733816447',
        '0.749999733816447',
        '0.749999733816447',
        '0.749999733765613',
        '0.749999710037828',
        '0.749999675896113',
        '0.749999675894504',
        '0.749999674893538'
      ],
      'count' => 3,
      'adjusted' => '0.746897436914654',
      'avg' => '0.749999999985686',
      'min' => '0.749999999978565',
      'last' => '0.749999999967849',
      'champion' => {
        'fitness' => '0.749999999989647',
        'topology' => 5970,
        'nodes' => {
          '4639' => {
            'two' => '1.32030224852881',
            'bias' => 0
          },
          '4920' => {
            'one' => '-0.760199343369218',
            '4639' => '1.51879957507953',
            'bias' => 0
          },
          'output' => {
            '1863' => '-2.83071441546955',
            'one' => '9.79759650725988',
            '4639' => '-0.20785636061795',
            '4920' => '-1.37199713363109',
            'bias' => '0.0667254119103062',
            'two' => 10,
            '601' => '-0.737211300268103'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.26822427045454',
            '4920' => '0.612243107388409',
            'bias' => '0.269658874419856'
          },
          '1863' => {
            'one' => '0.38961117093688',
            '4639' => '0.404197396227757',
            'bias' => 0,
            'two' => '-0.0718071876030817',
            '601' => '0.630165332261681'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 16054
      },
      'adj-avg' => '0.749999999989245',
      'total' => '2.24999999995706',
      'offspring' => 0,
      'members' => [
        16054,
        16177,
        16178
      ],
      'best' => '0.749999999989647',
      'func' => sub { "DUMMY" }
    },
    '15362' => {
      'penalty' => '5.887',
      'max' => '0.749999999999921',
      'adj-total' => '1.49999999999984',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '15005',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'6083\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'15005\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'15005\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'15005\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'15005\'}*$n->{\'nodes\'}->{\'output\'}->{\'15005\'})+($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999921',
        '0.749999999999921',
        '0.749999999999921',
        '0.749999999999921',
        '0.749999999999921',
        '0.749999999999921',
        '0.749999999999919',
        '0.749999999999918',
        '0.749999999999918',
        '0.749999999999918',
        '0.749999999999918',
        '0.749999999999918',
        '0.749999999999917',
        '0.749999999999917',
        '0.749999999999917',
        '0.749999999999915',
        '0.749999999999915'
      ],
      'count' => 3,
      'adjusted' => '0.749417246817785',
      'avg' => '0.749999999999851',
      'min' => '0.74999999999971',
      'last' => '0.749999999999895',
      'champion' => {
        'fitness' => '0.749999999999921',
        'topology' => 15362,
        'nodes' => {
          '4639' => {
            'one' => '-0.789059138254083',
            'two' => '0.797392843838522',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.830184157349972',
            '4639' => '0.832787461469161',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.250960521109716'
          },
          '7065' => {
            '4639' => '0.823797369551354',
            'bias' => 0
          },
          '6083' => {
            '4639' => '0.516043012815754',
            'bias' => '1.10358392566837'
          },
          'output' => {
            '15005' => '0.174985038771674',
            'one' => 10,
            '1863' => '-3.98061330262503',
            '7065' => '-0.253192198752137',
            'bias' => '0.0512600784596415',
            'two' => 10,
            '601' => '-2.08793751891109'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.53675125013032',
            '4639' => '-0.760029791163951',
            '4920' => '0.746703587456477',
            'bias' => '0.253155432738357',
            'two' => '-0.973020068257078'
          },
          '1863' => {
            'one' => '0.403453267740469',
            '4920' => '0.370555464327978',
            '4639' => '0.837204567087668',
            'bias' => 0,
            'two' => '-0.0212244242808698',
            '601' => '0.652150293409306'
          },
          'one' => {},
          '15005' => {
            '4920' => '0.996061116250089',
            'bias' => 0
          }
        },
        'elite' => 0,
        'id' => 16117
      },
      'adj-avg' => '0.749999999999921',
      'total' => '2.24999999999955',
      'offspring' => 0,
      'members' => [
        16179,
        16117,
        16180
      ],
      'best' => '0.749999999999921',
      'func' => sub { "DUMMY" }
    },
    '15478' => {
      'penalty' => '5.5',
      'max' => '0.749999999999962',
      'adj-total' => '1.49999999999992',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        '14941',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'14941\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'14941\'}->{\'bias\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'14941\'}*$n->{\'nodes\'}->{\'6083\'}->{\'14941\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'7065\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999962',
        '0.749999999999962',
        '0.749999999999953',
        '0.749999999999953',
        '0.749999999999953',
        '0.749999999999953',
        '0.749999999999953',
        '0.749999999999953',
        '0.749999999999953',
        '0.74999999999995',
        '0.74999999999995',
        '0.749999999999948',
        '0.749999999999948',
        '0.749999999999948'
      ],
      'count' => 3,
      'adjusted' => '0.749744620283093',
      'avg' => '0.749999999999842',
      'min' => '0.749999999999602',
      'last' => '0.749999999999956',
      'champion' => {
        'fitness' => '0.749999999999962',
        'topology' => 15478,
        'id' => 16120,
        'elite' => 0,
        'nodes' => {
          '14941' => {
            'bias' => '1.00199445005898'
          },
          '4920' => {
            'one' => '0.921729632751144',
            '4639' => '0.77412759067162',
            'two' => '-0.24898724807452',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.772039605430058',
            'bias' => 0,
            'two' => '0.880319372766154'
          },
          '7065' => {
            '4639' => '0.708361059939282',
            'bias' => 0,
            '601' => '0.63529443389206'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => 10,
            '1863' => '-3.97507330753409',
            '4920' => '0.143153098989579',
            '7065' => '-0.232051060311991',
            'two' => 10,
            'bias' => '0.0480206339594631',
            '601' => '-2.42271780532361'
          },
          '6083' => {
            '14941' => '0.921156595343108',
            'bias' => 0
          },
          '601' => {
            'one' => '-1.72422578787602',
            '4920' => '0.653535106812237',
            '4639' => '-0.732232883661773',
            'two' => '-0.960957031257227',
            'bias' => '0.353565708672801'
          },
          '1863' => {
            'one' => '0.44806741993128',
            '4639' => '0.890628149165944',
            'two' => '-0.0157607723127472',
            'bias' => 0,
            '601' => '0.477716979512454'
          },
          'one' => {}
        }
      },
      'adj-avg' => '0.749999999999962',
      'total' => '2.24999999999953',
      'offspring' => 0,
      'members' => [
        16181,
        16120,
        16182
      ],
      'best' => '0.749999999999962',
      'func' => sub { "DUMMY" }
    },
    '1130' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'one' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        'two',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 1130,
        'nodes' => {
          'one' => {},
          'output' => {
            'bias' => 0,
            'two' => '0.808366641712881',
            '601' => '-0.416274674695368'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '1.01138476385972'
          }
        },
        'elite' => 1,
        'id' => 1634
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '550' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'two' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        '549',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'549\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'549\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'549\'}->{\'one\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'549\'}*$n->{\'nodes\'}->{\'output\'}->{\'549\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'}), 5 ); }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 550,
        'id' => 828,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          '549' => {
            'one' => '-0.174361057746415',
            'bias' => '-0.592913330976868'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            '549' => '0.425153342501666',
            'bias' => '0.10709270279486'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '15715' => {
      'penalty' => '0',
      'max' => '0.74999999999997',
      'adj-total' => '1.49999999999994',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        '15714',
        '14941',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'15714\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'15714\'}->{\'bias\'}), 5 ); $v->{\'14941\'} = sigmoid( ($v->{\'15714\'}*$n->{\'nodes\'}->{\'14941\'}->{\'15714\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'14941\'}->{\'bias\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'14941\'}*$n->{\'nodes\'}->{\'6083\'}->{\'14941\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'7065\'}->{\'601\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'7065\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.74999999999997',
        '0.74999999999997',
        '0.749999999999955',
        '0.749999999999955',
        '0.749999999999954',
        '0.749999999999954',
        '0.749999999999954',
        '0.749999999999951',
        '0.749999999999951'
      ],
      'count' => 3,
      'adjusted' => '0.74999999999997',
      'avg' => '0.749999999999742',
      'min' => '0.749999999999286',
      'last' => '0.74999999999996',
      'champion' => {
        'fitness' => '0.74999999999997',
        'topology' => 15715,
        'id' => 16122,
        'elite' => 0,
        'nodes' => {
          '14941' => {
            '15714' => '1.04749914969966',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.924931603035461',
            '4639' => '0.68068504884433',
            'two' => '-0.238870659791816',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.731630767616259',
            'bias' => 0,
            'two' => '0.945733305333831'
          },
          '7065' => {
            '4639' => '0.805103362161658',
            'bias' => 0,
            '6083' => '-0.323173239125185',
            '601' => '0.550501653490412'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => 10,
            '1863' => '-3.92295024243986',
            '4920' => '0.155112462455947',
            '7065' => '-0.277696531697446',
            'two' => 10,
            'bias' => '0.0483366914975657',
            '601' => '-2.48320411743114'
          },
          '6083' => {
            '14941' => '0.963256163234184',
            'bias' => 0
          },
          '601' => {
            'one' => '-1.56611463526347',
            '4920' => '0.656073182124121',
            '4639' => '-0.775934578443355',
            'two' => '-0.931272048626625',
            'bias' => '0.297538127144574'
          },
          '1863' => {
            'one' => '0.404002742198397',
            '4639' => '0.871622366353709',
            'two' => '-0.0193792016236484',
            'bias' => 0,
            '601' => '0.546883228987512'
          },
          'one' => {},
          '15714' => {
            'bias' => '1.02690192023271'
          }
        }
      },
      'adj-avg' => '0.74999999999997',
      'total' => '2.24999999999923',
      'offspring' => 0,
      'members' => [
        16122,
        16183,
        16184
      ],
      'best' => '0.74999999999997',
      'func' => sub { "DUMMY" }
    },
    '14114' => {
      'penalty' => '5.62199507033529',
      'max' => '0.749999999999886',
      'adj-total' => '1.49999999999975',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'1863\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'output\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999886',
        '0.749999999999862',
        '0.749999999999862',
        '0.74999999999986',
        '0.749999999999855',
        '0.749999999999854',
        '0.749999999999854',
        '0.749999999999854',
        '0.749999999999846',
        '0.749999999999846',
        '0.749999999999838',
        '0.749999999999806',
        '0.749999999999806',
        '0.749999999999806',
        '0.749999999999806',
        '0.749999999999806',
        '0.749999999999806',
        '0.749999999999774',
        '0.749999999999774',
        '0.749999999999774',
        '0.749999999998893',
        '0.749999999998893',
        '0.749999999997955',
        '0.749999999997194',
        '0.749999999997045',
        '0.749999999996452',
        '0.749999999996452',
        '0.749999999996452',
        '0.74999999999644',
        '0.74999999999644',
        '0.749999999996412',
        '0.749999999996412',
        '0.749999999996412',
        '0.749999999996412',
        '0.749999999996412',
        '0.749999999996236',
        '0.749999999996236',
        '0.749999999996236',
        '0.749999999990204',
        '0.749999999990204',
        '0.749999999990204',
        '0.749999999990204',
        '0.749999999990204'
      ],
      'count' => 3,
      'adjusted' => '0.743215141830687',
      'avg' => '0.749999999999835',
      'min' => '0.749999999999758',
      'last' => '0.74999999999819',
      'champion' => {
        'fitness' => '0.749999999999862',
        'topology' => 14114,
        'nodes' => {
          '4639' => {
            'one' => '-0.638902688113302',
            'two' => '0.927629888225935',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.851759453453911',
            '4639' => '0.675255238947453',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.255560225769298'
          },
          '6083' => {
            'bias' => '0.956932596230542'
          },
          'output' => {
            '4920' => '0.218704639343872',
            '4639' => '-0.214855144462092',
            '6083' => '0.484604010436996',
            'bias' => '0.0405384053167402',
            'two' => '9.98866227319026',
            '601' => '-2.7694292802136',
            'one' => '9.05345195027613',
            '1863' => '-3.59037218769902'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.47533157990865',
            '4920' => '0.611690941752034',
            'bias' => '0.279881419779531',
            'two' => '-0.955649391868786'
          },
          '1863' => {
            'one' => '0.420148915420318',
            '4639' => '0.900386800394611',
            '6083' => '-0.176067487842335',
            'bias' => 0,
            'two' => '-0.0244946171357634',
            '601' => '0.728533085107138'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 16061
      },
      'adj-avg' => '0.749999999999874',
      'total' => '2.24999999999951',
      'offspring' => 0,
      'members' => [
        16185,
        16061,
        16186
      ],
      'best' => '0.749999999999886',
      'func' => sub { "DUMMY" }
    },
    '13575' => {
      'penalty' => '10.019',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        '3756',
        '1863',
        'two',
        '4523',
        '981',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'3756\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'3756\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'3756\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3756\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3756\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'}), 5 ); $v->{\'4523\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4523\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4523\'}->{\'two\'}), 5 ); $v->{\'981\'} = sigmoid( ($v->{\'4523\'}*$n->{\'nodes\'}->{\'981\'}->{\'4523\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'981\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'981\'}*$n->{\'nodes\'}->{\'output\'}->{\'981\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.607371209295946',
        '0.607371209295946',
        '0.607371209295946',
        '0.607371209295946',
        '0.591833343432835',
        '0.591833343432835',
        '0.591833343432835',
        '0.591833343432835',
        '0.591833343432835',
        '0.591833343432835',
        '0.591833343432835',
        '0.591833343432835',
        '0.591833343432835',
        '0.591833343432835',
        '0.591810969322102',
        '0.591810969322102',
        '0.591810969322102',
        '0.568503014135794',
        '0.568503014135794',
        '0.568503014135794',
        '0.568503014135794',
        '0.568503014135794'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.607371209295946',
        'topology' => 13575,
        'id' => 14368,
        'elite' => 1,
        'nodes' => {
          '3756' => {
            'bias' => 0,
            '601' => '1.08857319655544'
          },
          '981' => {
            'bias' => '-0.327071550928606',
            '4523' => '0.83975857306277'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            '981' => '2.22869270617443',
            'one' => '1.90896379026649',
            '1863' => '-1.22666343134899',
            'bias' => '-0.954182666255171'
          },
          '601' => {
            'bias' => '-1.56905168459966'
          },
          'one' => {},
          '1863' => {
            '3756' => '1.07818630306771',
            'bias' => 0
          },
          '4523' => {
            'two' => '1.5000988705556',
            'bias' => 0
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.607371209295946',
      'func' => sub { "DUMMY" }
    },
    '9062' => {
      'penalty' => '4.02884054087642',
      'max' => '0.749999999861295',
      'adj-total' => '1.49999999971766',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'one',
        '601',
        'two',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999861295',
        '0.749999999856363',
        '0.749999999856363',
        '0.749999999814304',
        '0.749999999731384',
        '0.749999999731384',
        '0.749999999370923',
        '0.749999997961191',
        '0.749999994993768',
        '0.74999999499239',
        '0.749999994992326',
        '0.749999994992326',
        '0.749999994393971',
        '0.749999994393429',
        '0.749999994393429',
        '0.749999994392389',
        '0.749999994392389',
        '0.749999994392389',
        '0.749999992237046',
        '0.749999991928443',
        '0.749999991560082',
        '0.749999983355465',
        '0.749999983355465',
        '0.749999983355465',
        '0.749999981128711',
        '0.74999993979276',
        '0.749999935117393',
        '0.749999935117393',
        '0.749999935117393',
        '0.749999935117393',
        '0.749999935117393',
        '0.749999935117392',
        '0.749999934548075',
        '0.749999934548075',
        '0.749999934548075',
        '0.749999934548075',
        '0.749999934205192',
        '0.749999934205192',
        '0.749999934205192',
        '0.749999934205192',
        '0.749999934205192',
        '0.749999933878914',
        '0.749999933878823',
        '0.74999992406614',
        '0.749999921304851',
        '0.749999879631471',
        '0.749999845827897',
        '0.749999785749985',
        '0.749999689893141',
        '0.749999689890062',
        '0.749999689890062',
        '0.749999689890062',
        '0.749999689826533',
        '0.749999689826533',
        '0.749999689826533',
        '0.749999689785256',
        '0.749999689785256',
        '0.749999689785256',
        '0.749999490703693',
        '0.749999482251663',
        '0.749999321795407',
        '0.749999321795407',
        '0.749999306121233',
        '0.749999306115525',
        '0.749999306115525',
        '0.749999306115503',
        '0.749999303536046',
        '0.749999217204398',
        '0.749999217204398',
        '0.749999094003197',
        '0.749999093581729',
        '0.749999093581729',
        '0.749999093581729',
        '0.749997926951049',
        '0.749997919890548',
        '0.749997919890548',
        '0.749997919890548',
        '0.749997807813552',
        '0.749997298606924',
        '0.749997298606924',
        '0.749997298606924',
        '0.749996836590574',
        '0.749996836590574',
        '0.749996836590574',
        '0.749996835556341',
        '0.749996835556341',
        '0.749996835556341',
        '0.749996835556341',
        '0.749995898566273',
        '0.749995898566273',
        '0.749995898566273',
        '0.749995897292411',
        '0.749995896188756',
        '0.749995616516849',
        '0.749995616510094',
        '0.749994776855189',
        '0.74999088731454',
        '0.749990658152215',
        '0.749988655256244',
        '0.749983874113957'
      ],
      'count' => 3,
      'adjusted' => '0.749757653243057',
      'avg' => '0.749999999722877',
      'min' => '0.749999999450972',
      'last' => '0.749999999654862',
      'champion' => {
        'fitness' => '0.749999999856363',
        'topology' => 9062,
        'nodes' => {
          '1863' => {
            'one' => '-0.363698714721895',
            'bias' => '-1.55751621201981',
            'two' => '2.72860162914371',
            '601' => '-0.651224997129459'
          },
          'one' => {},
          'output' => {
            '1863' => '5.7179166861018',
            'one' => 10,
            'bias' => '-4.38474545662926',
            'two' => '3.1075005991353'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.0455430212387701',
            'bias' => '-0.235634525891272'
          }
        },
        'elite' => 1,
        'id' => 16064
      },
      'adj-avg' => '0.749999999858829',
      'total' => '2.24999999916863',
      'offspring' => 0,
      'members' => [
        16187,
        16064,
        16188
      ],
      'best' => '0.749999999861295',
      'func' => sub { "DUMMY" }
    },
    '3301' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'one' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        'two',
        '981',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'981\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'981\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'981\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'981\'}*$n->{\'nodes\'}->{\'output\'}->{\'981\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'}), 5 ); }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 3301,
        'nodes' => {
          '981' => {
            'two' => 1,
            'bias' => 0
          },
          'one' => {},
          'output' => {
            '981' => '0.808366641712881',
            'bias' => 0,
            '601' => '-0.416274674695368'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '1.11105616958966'
          }
        },
        'elite' => 1,
        'id' => 3316
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '3826' => {
      'penalty' => '10.00049',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '601',
        'one',
        '1863',
        '549',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'549\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'549\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'549\'}->{\'one\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'549\'}*$n->{\'nodes\'}->{\'output\'}->{\'549\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.597701004527779',
        '0.597701004527779',
        '0.597701004527779',
        '0.597701004527779',
        '0.597701004527779',
        '0.597701004527779',
        '0.597699481940365',
        '0.597699481940365',
        '0.597699481940365',
        '0.597699481940365',
        '0.597699481940365',
        '0.588224784051332',
        '0.588224784051332',
        '0.588063864621586',
        '0.588063526477623',
        '0.588063170320514',
        '0.588063170320514',
        '0.588063170320514',
        '0.588062773425548',
        '0.588062357425902',
        '0.588062017637649',
        '0.586883329673861',
        '0.586872299507228'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.597701004527779',
        'topology' => 3826,
        'nodes' => {
          '1863' => {
            'one' => '0.433974036822764',
            'bias' => 0,
            'two' => '-0.0684199827390589',
            '601' => '0.94934987994094'
          },
          'one' => {},
          '549' => {
            'one' => '1.05435471027151',
            'bias' => 0
          },
          'output' => {
            '1863' => '-1.0451160653707',
            '549' => '2.13813300832422',
            'bias' => '0.0476736861479745',
            'two' => '2.48912888417222'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '0.444147202017783',
            'two' => '0.605682576640438'
          }
        },
        'elite' => 1,
        'id' => 4698
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.597701004527779',
      'func' => sub { "DUMMY" }
    },
    '5854' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.500053503835182',
        '0.500053503835182',
        '0.500053503835182',
        '0.500053503835182',
        '0.500053503835182',
        '0.500053503835182',
        '0.500053503835182',
        '0.500053503835182',
        '0.500053503835182',
        '0.500053503835182',
        '0.500053503835182',
        '0.500053503835182',
        '0.500053503835182',
        '0.500053503835182',
        '0.500053503835182'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.500053503835182',
        'topology' => 5854,
        'nodes' => {
          '4639' => {
            'two' => 1,
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.99496552709397',
            'two' => '-0.245246010783063'
          },
          'output' => {
            '1863' => '-1.05998156380422',
            '4639' => '-0.135800061574209',
            'bias' => '0.074429753902327',
            'two' => '3.26162675281551',
            '601' => '-0.486306909555659'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.803701691413352',
            '4920' => '0.803646918676541',
            'bias' => '0.321085511447368'
          },
          '1863' => {
            'one' => '0.513351698528216',
            '4639' => '0.748730898051697',
            'bias' => 0,
            'two' => '-0.0480958728125836',
            '601' => '0.88316747995409'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 5853
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.500053503835182',
      'func' => sub { "DUMMY" }
    },
    '13165' => {
      'penalty' => '10.578834413062',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999998828',
        '0.749999999998828',
        '0.749999999998828',
        '0.749999999998828',
        '0.749999999998828',
        '0.749999999998828',
        '0.749999999998828',
        '0.749999999998828',
        '0.749999999998828',
        '0.749999999998762',
        '0.749999999998601',
        '0.749999999998601',
        '0.749999999998601',
        '0.749999999998601',
        '0.749999999998601',
        '0.749999999996863',
        '0.749999999996854',
        '0.749999999996839',
        '0.749999999996839',
        '0.749999999996556',
        '0.749999999996548',
        '0.749999999996544',
        '0.749999999996544',
        '0.749999999996544',
        '0.749999999996478',
        '0.749999999996478',
        '0.749999999996478',
        '0.749999999996478',
        '0.749999999996413',
        '0.749999999995',
        '0.749999999994949',
        '0.749999999992877'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999998828',
        'topology' => 13165,
        'nodes' => {
          '4639' => {
            'one' => '-0.627496835791804',
            'two' => '0.754235100511101',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.77614353925707',
            '4639' => '0.663035557538659',
            'bias' => 0,
            'two' => '-0.278294264259808'
          },
          'output' => {
            '1863' => '-3.78778743042789',
            'one' => 10,
            '4920' => '0.172097086884455',
            '4639' => '-0.181718059550562',
            'bias' => '0.0434076679351999',
            'two' => 10,
            '601' => '-1.73880367208721'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.29618120882391',
            '4920' => '0.725030556710999',
            'bias' => '0.23492184898452',
            'two' => '-0.846570560616272'
          },
          '1863' => {
            'one' => '0.414369191557771',
            '4639' => '0.965068119872207',
            'bias' => 0,
            'two' => '-0.0196666191345081',
            '601' => '0.542854361819058'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 14214
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999998828',
      'func' => sub { "DUMMY" }
    },
    '6873' => {
      'penalty' => '10.5330097598264',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999996943',
        '0.749999999996943',
        '0.749999999996943',
        '0.749999999996943',
        '0.749999999996943',
        '0.749999999996943',
        '0.749999999996943',
        '0.749999999996911',
        '0.749999999996581',
        '0.749999999996581',
        '0.749999999996581',
        '0.749999999996571',
        '0.749999999996571',
        '0.749999999996571',
        '0.749999999996566',
        '0.749999999996566',
        '0.749999999996566',
        '0.74999999999632',
        '0.74999999999632',
        '0.749999999996227',
        '0.749999999996219',
        '0.749999999996219',
        '0.749999999995152',
        '0.749999999995152',
        '0.749999999995117',
        '0.749999999995117',
        '0.749999999995077',
        '0.749999999995062',
        '0.749999999995061',
        '0.749999999995061',
        '0.749999999995061',
        '0.749999999995011',
        '0.749999999995011',
        '0.749999999994984',
        '0.749999999994697',
        '0.749999999994678',
        '0.749999999994668',
        '0.749999999994668',
        '0.749999999994646',
        '0.749999999994646',
        '0.749999999994646',
        '0.749999999971966',
        '0.749999999971966',
        '0.749999999961562',
        '0.749999999905689',
        '0.749999999905689',
        '0.749999999905663',
        '0.749999999905663',
        '0.749999999905587',
        '0.749999999905587',
        '0.749999999905587',
        '0.749999999905587',
        '0.749999999905587',
        '0.749999999902192',
        '0.749999999834627',
        '0.74999999983336',
        '0.749999999489893',
        '0.749999999446473',
        '0.749999998619794',
        '0.749999998521954',
        '0.749999998508097',
        '0.749999998103571',
        '0.749999998103571',
        '0.749999998103516',
        '0.749999998103237',
        '0.749999998027146',
        '0.749999998010397',
        '0.749999998010397',
        '0.749999998010397',
        '0.749999997982601',
        '0.74999999393502',
        '0.74999999393502',
        '0.74999999393502',
        '0.749999990040953',
        '0.749999975878987',
        '0.749999975780871',
        '0.749999934589259',
        '0.749999896418547',
        '0.749999896418547',
        '0.749999857834865',
        '0.749999857834637',
        '0.749999857543343',
        '0.749999833319051',
        '0.749999776153803',
        '0.749999599305033',
        '0.7499994791817',
        '0.749999478653881',
        '0.749999478653881',
        '0.749998728005817',
        '0.749998648152749',
        '0.749997517662934',
        '0.749997517662934',
        '0.749996095884506',
        '0.749996095884506',
        '0.749993923872995',
        '0.749993923872995',
        '0.749993923872995',
        '0.749993754046749',
        '0.749993754046749',
        '0.749993312359613'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999996943',
        'topology' => 6873,
        'id' => 14570,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.616690234520872',
            'two' => '-0.256666621339081',
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.669221001761932',
            'bias' => 0,
            'two' => '0.974794352039368'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.46767851466462',
            '1863' => '-3.55974104719163',
            '4639' => '-0.201782643343358',
            '4920' => '0.195658631217139',
            'two' => 10,
            'bias' => '0.0434536019667028',
            '601' => '-1.72156634905523'
          },
          '601' => {
            'one' => '-1.53436123401306',
            '4920' => '0.910594771069826',
            'two' => '-0.859187004198225',
            'bias' => '0.293551704702053'
          },
          '1863' => {
            'one' => '0.409585653131803',
            '4639' => '1.07943937165311',
            'two' => '-0.0216134024295024',
            'bias' => 0,
            '601' => '0.610651533027473'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999996943',
      'func' => sub { "DUMMY" }
    },
    '14152' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'two' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        '601',
        '1863',
        '2665',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'}), 5 ); $v->{\'2665\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'2665\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'2665\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'2665\'}*$n->{\'nodes\'}->{\'output\'}->{\'2665\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'}), 5 ); }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 14152,
        'nodes' => {
          'one' => {},
          '1863' => {
            'bias' => 0,
            '601' => 1
          },
          '2665' => {
            '1863' => 1,
            'bias' => 0
          },
          'output' => {
            '2665' => '-0.390562420329345',
            'bias' => 0
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '0.610887394894519',
            'bias' => '1.04155149256474'
          }
        },
        'elite' => 1,
        'id' => 14151
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '8427' => {
      'penalty' => '10.0988104015947',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999998376625',
        '0.749999998376625',
        '0.749999998376625',
        '0.749999998376625',
        '0.749999998296183',
        '0.749999998296183',
        '0.749999998296183',
        '0.749999998286786',
        '0.749999998286786',
        '0.749999998283103',
        '0.749999998283103',
        '0.749999998275576',
        '0.749999998275576',
        '0.74999999827557',
        '0.74999999827557',
        '0.749999994842954',
        '0.749999994842954',
        '0.749999994842954',
        '0.749999994842954',
        '0.749999994659812',
        '0.749999994659797',
        '0.749999994659797',
        '0.749999994659797',
        '0.749999994659797',
        '0.749999994659797',
        '0.749999994142692',
        '0.749999994133364',
        '0.749999994133364',
        '0.749999994099356',
        '0.749999994099356',
        '0.749999994099356',
        '0.749999994099356',
        '0.749999993560386',
        '0.749999993554884',
        '0.749999993554884',
        '0.749999993552303',
        '0.749999987241479',
        '0.749999983074876',
        '0.749999979952865',
        '0.749999979952865',
        '0.749999971685489',
        '0.749999971685489',
        '0.749999971685489',
        '0.749999971685489',
        '0.74999997008157',
        '0.74999997008157',
        '0.749999960127872',
        '0.749999960125315',
        '0.749999917882109',
        '0.749999917882109',
        '0.749999842490081',
        '0.749999740786205',
        '0.749999740786205',
        '0.749999707248698',
        '0.749999657962382',
        '0.749999657962382',
        '0.749999623531874',
        '0.749999598566541',
        '0.749999598564503',
        '0.749999498475592',
        '0.749999130930515',
        '0.749999118663444',
        '0.749999117888259',
        '0.749999117888259',
        '0.749999116994048',
        '0.749999116994048',
        '0.749999116994048',
        '0.749999116994048',
        '0.749999116994048',
        '0.749998577102544',
        '0.74999747010647',
        '0.74999747010647',
        '0.749997267208337',
        '0.749997255871476',
        '0.749997254070709',
        '0.749997254070709',
        '0.749997254070709',
        '0.749997254070709',
        '0.749997231279268',
        '0.749997231279268',
        '0.74999723104529',
        '0.74999723104529',
        '0.74999723104529',
        '0.749996325917199',
        '0.749996325917199',
        '0.749996299561269',
        '0.749996299561269',
        '0.749996299561269',
        '0.749996299561269',
        '0.749996262306576',
        '0.749996262306576',
        '0.749995642123574',
        '0.74999564174862',
        '0.749995546484636',
        '0.749991470197034',
        '0.749989637621733',
        '0.749989637621733',
        '0.749989637621733',
        '0.749989637621733',
        '0.749989637621733'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999998376625',
        'topology' => 8427,
        'nodes' => {
          '1863' => {
            'one' => '0.457181599887487',
            'bias' => 0,
            'two' => '-0.0501263329674465',
            '601' => '0.67574414246802'
          },
          'one' => {},
          '4639' => {
            'one' => '0.379793519055812',
            'two' => '1.17024431976265',
            'bias' => 0
          },
          'output' => {
            '1863' => '-3.32329708962744',
            'one' => '8.01629087300599',
            'bias' => '0.0382749697754793',
            'two' => '8.12918999575733',
            '601' => '-0.673992719651428'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.589068276844198',
            '4639' => '0.670642473712881',
            'bias' => '0.324927048801886',
            'two' => '0.058906993663831'
          }
        },
        'elite' => 1,
        'id' => 14646
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999998376625',
      'func' => sub { "DUMMY" }
    },
    '15900' => {
      'penalty' => 1,
      'max' => '0.749786885167564',
      'adj-total' => '1.49956778816701',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749786885167564',
        '0.749786885167564',
        '0.749753058085807',
        '0.749753058085807',
        '0.749690856698114',
        '0.749689284559875'
      ],
      'count' => 3,
      'adjusted' => '0.749786885167564',
      'avg' => '0.749735797912241',
      'min' => '0.749639605569711',
      'last' => '0.749764333779726',
      'champion' => {
        'fitness' => '0.749786885167564',
        'topology' => 15900,
        'nodes' => {
          '4639' => {
            'two' => '0.892301063865834',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.798721000577184',
            'bias' => 0
          },
          'output' => {
            '1863' => '-1.10949553549857',
            'one' => '3.60780348257894',
            'bias' => '0.0711828354012376',
            'two' => '3.15135084737426',
            '601' => '-0.438704305655747'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.853245940751012',
            '4920' => '0.804285443063132',
            '4639' => '-0.813434797888388',
            'bias' => '0.32440410088749'
          },
          '1863' => {
            'one' => '0.523688939852903',
            '4639' => '0.816823503664859',
            'bias' => 0,
            'two' => '-0.0467046184334436',
            '601' => '0.77946102246837'
          },
          'one' => {}
        },
        'elite' => 0,
        'id' => 16128
      },
      'adj-avg' => '0.749783894083506',
      'total' => '2.24920739373672',
      'offspring' => 0,
      'members' => [
        16128,
        16189,
        16190
      ],
      'best' => '0.749786885167564',
      'func' => sub { "DUMMY" }
    },
    '11102' => {
      'penalty' => '10.0841578910959',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        '1863',
        'two',
        '4523',
        '981',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'}), 5 ); $v->{\'4523\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4523\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4523\'}->{\'two\'}), 5 ); $v->{\'981\'} = sigmoid( ($v->{\'4523\'}*$n->{\'nodes\'}->{\'981\'}->{\'4523\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'981\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'981\'}*$n->{\'nodes\'}->{\'output\'}->{\'981\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.681693411033408',
        '0.681693411033408',
        '0.681693411033408',
        '0.681693411033408',
        '0.681664285893603',
        '0.681664285893603',
        '0.681662398906879',
        '0.681662398906879',
        '0.672856924173089',
        '0.672856924173089',
        '0.672856924173089',
        '0.672856924173089',
        '0.672856924173089',
        '0.672856924173089',
        '0.672810784249252',
        '0.672810784249252',
        '0.672083578252886',
        '0.672083578252886',
        '0.672083578252886',
        '0.672083578252886',
        '0.664138565662307',
        '0.664138565662307',
        '0.664138565662307',
        '0.664138565662307',
        '0.664138565662307',
        '0.652357058405017',
        '0.645010408660049',
        '0.644037152014856',
        '0.644034517965386',
        '0.644034517965386',
        '0.644032357841444',
        '0.636146043489155',
        '0.623866764001844',
        '0.614748536013054',
        '0.61452550491964',
        '0.61452550491964',
        '0.610604721457917',
        '0.593615571204794',
        '0.593615571204794',
        '0.593615571204794',
        '0.593615571204794',
        '0.581073703580463',
        '0.575825552897311',
        '0.575825552897311',
        '0.575777114203647',
        '0.57577531602006',
        '0.575740848890824',
        '0.575705992316835',
        '0.566117574803421',
        '0.566117574803421',
        '0.566117574803421',
        '0.565031803770611'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.681693411033408',
        'topology' => 11102,
        'nodes' => {
          '981' => {
            'bias' => '-0.338217886756813',
            '4523' => '0.799013091119783'
          },
          'output' => {
            '981' => '2.22027027855016',
            '1863' => '-1.2302708073063',
            'one' => '2.01441091577123',
            'bias' => '-1.05120247952064'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '-1.67347955408513'
          },
          'one' => {},
          '1863' => {
            'bias' => 0,
            '601' => '1.05569226975457'
          },
          '4523' => {
            'bias' => 0,
            'two' => '1.42333972951548'
          }
        },
        'elite' => 1,
        'id' => 13635
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.681693411033408',
      'func' => sub { "DUMMY" }
    },
    '6599' => {
      'penalty' => '10.0146265490992',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        'one',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749905472847773',
        '0.749905472847773',
        '0.749905472847773',
        '0.749905472847773',
        '0.749905472847773',
        '0.749905472847773',
        '0.749905472847773',
        '0.749905443642152',
        '0.749903819048895',
        '0.749903819048895',
        '0.749903819048895',
        '0.749901251670525',
        '0.749901251670525',
        '0.749901251670525',
        '0.749898946101357',
        '0.749898946101357',
        '0.749898939551578',
        '0.749898939551578',
        '0.749898939551578',
        '0.749898939551578',
        '0.749898939551578',
        '0.74989885912863',
        '0.749898845204181',
        '0.749897030949006',
        '0.74986321602081',
        '0.749862348392655',
        '0.749862292660666',
        '0.749862292660666',
        '0.749862292660666',
        '0.749862292660666',
        '0.749855215535438',
        '0.74985230154286',
        '0.74985230154286'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749905472847773',
        'topology' => 6599,
        'id' => 7744,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '-0.222472491409973',
            '4639' => '0.99496552709397',
            'two' => '-0.265499719370495',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => 1
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.20523224797128',
            '1863' => '-1.06034219359517',
            '4639' => '-0.123401745142675',
            '4920' => '-0.473112682871097',
            'two' => '3.71103226117526',
            'bias' => '0.0865775341034362',
            '601' => '-0.464724780750896'
          },
          '601' => {
            'one' => '-0.893699952579114',
            '4639' => '-0.828742921334062',
            '4920' => '0.803646918676541',
            'bias' => '0.307932848437218'
          },
          '1863' => {
            'one' => '0.513351698528216',
            '4920' => '0.399272919613317',
            '4639' => '0.724040662403683',
            'two' => '-0.0485027036571635',
            'bias' => 0,
            '601' => '0.805556494048141'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749905472847773',
      'func' => sub { "DUMMY" }
    },
    '6836' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        '981',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'981\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'981\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'981\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'981\'}*$n->{\'nodes\'}->{\'output\'}->{\'981\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.573122932331684',
        '0.573122932331684',
        '0.573122932331684',
        '0.573122932331684',
        '0.573122932331684',
        '0.573122932331684',
        '0.573122932331684',
        '0.573122932331684',
        '0.573122932331684',
        '0.573122932331684',
        '0.573122932331684',
        '0.573122932331684',
        '0.573122086254754',
        '0.573122086134281',
        '0.573122086134281',
        '0.573122086134281',
        '0.573122086134281'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.573122932331684',
        'topology' => 6836,
        'id' => 7000,
        'elite' => 1,
        'nodes' => {
          '981' => {
            'two' => '1.08304332251285',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.99496552709397',
            'two' => '-0.288238670638719',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => 1
          },
          'two' => {},
          'bias' => {},
          'output' => {
            '981' => '3.57951348142397',
            'one' => '3.52818458295627',
            '1863' => '-1.13703142638551',
            '4639' => '-0.135800061574209',
            'bias' => '0.074429753902327',
            '601' => '-0.486306909555659'
          },
          '601' => {
            'one' => '-0.88264688394766',
            '4920' => '0.803646918676541',
            'bias' => '0.307932848437218'
          },
          '1863' => {
            'one' => '0.513351698528216',
            '4639' => '0.862488012855591',
            'two' => '-0.0498626774879982',
            'bias' => 0,
            '601' => '0.962571724858496'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.573122932331684',
      'func' => sub { "DUMMY" }
    },
    '12' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'one' => 1,
        'bias' => 1
      },
      'adj-count' => 0,
      'order' => [
        'two',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'output\'} = sigmoid( ($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 12,
        'id' => 391,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          'two' => {},
          'bias' => {},
          'output' => {
            'two' => '-1.06922452082275'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '10153' => {
      'penalty' => '10.4122990003758',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999980916',
        '0.749999999980916',
        '0.749999999980916',
        '0.749999999980916',
        '0.749999999980916',
        '0.749999999980915',
        '0.749999999980915',
        '0.749999999980915',
        '0.749999999980915',
        '0.749999999979162',
        '0.749999999979162',
        '0.749999999979162',
        '0.749999999979162',
        '0.74999999995895',
        '0.749999999922454',
        '0.749999999922454',
        '0.749999999922452',
        '0.749999999922452',
        '0.749999999921983',
        '0.749999999915743',
        '0.749999999914099',
        '0.749999999913934',
        '0.749999999913934',
        '0.749999999913934',
        '0.749999999912405',
        '0.749999999912405',
        '0.749999999912405',
        '0.749999999785277',
        '0.749999999193223',
        '0.749999997497947',
        '0.74999999402777',
        '0.749999989487414',
        '0.749999989487414',
        '0.749999989347748',
        '0.74999998646205',
        '0.749999973504282',
        '0.749999973504282',
        '0.749999959559647',
        '0.749999937914521',
        '0.749999937914521',
        '0.749999937787552',
        '0.749999937787552',
        '0.749999937785479',
        '0.749999860956978',
        '0.749999860956978',
        '0.74999986033769',
        '0.74999985053023',
        '0.749999795232982',
        '0.749999775501748',
        '0.749999775501748',
        '0.749999771949828',
        '0.74999952757989',
        '0.749999527172621',
        '0.749999527172621',
        '0.749999527172621'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999980916',
        'topology' => 10153,
        'nodes' => {
          '4639' => {
            'two' => '0.619055225258188',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.993797258689082',
            'bias' => 0
          },
          'output' => {
            '1863' => '-3.9770009797618',
            'one' => '9.18111983870528',
            '4639' => '-0.0681215560116294',
            '4920' => '-0.483472952421668',
            'bias' => '0.0522223686461687',
            'two' => 10,
            '601' => '-0.450151176461947'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.45170917584949',
            '4920' => '0.481247849992875',
            'bias' => '0.301916700666822',
            'two' => '-0.155025000503444'
          },
          '1863' => {
            'one' => '0.527855468107172',
            '4639' => '0.65994931574521',
            'bias' => 0,
            'two' => '-0.0615550347084941',
            '601' => '0.818257815232599'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 12967
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999980916',
      'func' => sub { "DUMMY" }
    },
    '13650' => {
      'penalty' => '10.5467727',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749536097551101',
        '0.749536097551101',
        '0.749536097551101',
        '0.749536097551101',
        '0.749536083368655',
        '0.749536083368655',
        '0.749536083368655',
        '0.749536083368655',
        '0.749535553003215',
        '0.749535553003215',
        '0.749535553003215',
        '0.749535309778052',
        '0.749535309778052',
        '0.749530548694864',
        '0.74953054669408',
        '0.749530543786704',
        '0.749530543786704',
        '0.749530543786704',
        '0.749530198373803',
        '0.749530198373803',
        '0.749530198373803',
        '0.749530198373803',
        '0.749448363252349',
        '0.749309569299618',
        '0.749305437910522',
        '0.749300800225889'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749536097551101',
        'topology' => 13650,
        'id' => 14647,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.805333493248406',
            'two' => '0.675880210272811',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '0.943447783971363'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.89123073910508',
            '1863' => '-1.11978894641861',
            '4920' => '0.31043766109109',
            'two' => '3.09188009691582',
            'bias' => '0.0671379594075692',
            '601' => '-0.505292870820183'
          },
          '601' => {
            'one' => '-0.700696026908013',
            '4920' => '0.896645114566013',
            'bias' => '0.361997768114118'
          },
          '1863' => {
            'one' => '0.477929677049615',
            'two' => '-0.0490210358935508',
            'bias' => 0,
            '601' => '0.864631577657487'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749536097551101',
      'func' => sub { "DUMMY" }
    },
    '12481' => {
      'penalty' => '10.729',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        '981',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'981\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'981\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'981\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'981\'}*$n->{\'nodes\'}->{\'output\'}->{\'981\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.749497541980079',
        '0.749497541980079',
        '0.749497541980079',
        '0.749497541980079',
        '0.749497541980079',
        '0.749497541980079',
        '0.749497541980079',
        '0.749497541980079',
        '0.749497541980079',
        '0.749497541980079',
        '0.749497541980079',
        '0.749497541980079',
        '0.749497540923221',
        '0.749497538097712',
        '0.749497538097712',
        '0.749014818190119',
        '0.727119897051',
        '0.710271836240788',
        '0.673489890871176',
        '0.569051346324586',
        '0.569051346324586',
        '0.56905134632451',
        '0.56905134632451',
        '0.567187412754862',
        '0.558547914354462',
        '0.558547914354462',
        '0.558547914354462'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749497541980079',
        'topology' => 12481,
        'nodes' => {
          '981' => {
            'two' => '0.780390450623173',
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.642195298188939',
            'two' => '0.5012739673093',
            'bias' => 0
          },
          '4920' => {
            '4639' => '1.17824494399987',
            'bias' => 0,
            'two' => '-0.333035413390663'
          },
          'output' => {
            '981' => '5.98364750807774',
            '1863' => '-3.87140545130986',
            'one' => '7.1333595345876',
            '4639' => '-0.181933417089943',
            'bias' => '0.0651373347795448',
            '601' => '-0.579240846742935'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.699213287030544',
            '4920' => '0.999879260888203',
            'bias' => '0.233633931614467'
          },
          '1863' => {
            'one' => '0.343411278694941',
            '4639' => '2.81564546428766',
            'bias' => 0,
            'two' => '-0.0317336907911368',
            '601' => '1.39404158347769'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 13521
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749497541980079',
      'func' => sub { "DUMMY" }
    },
    '765' => {
      'penalty' => '10.1389831500286',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        '549',
        'two',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'549\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'549\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'549\'}->{\'one\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'549\'}*$n->{\'nodes\'}->{\'output\'}->{\'549\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.707178568184332',
        '0.707178568184332',
        '0.707178568184332',
        '0.707178568184332',
        '0.706285480600545',
        '0.706285480600545',
        '0.702245658523434',
        '0.702245658523434',
        '0.696846271663554',
        '0.696846271663554',
        '0.694380958586165',
        '0.694380958586165',
        '0.694380958586165',
        '0.694380958586165',
        '0.694380958586165',
        '0.694380958586165',
        '0.694380958586165',
        '0.694350817954624',
        '0.694350817954624',
        '0.692963938296578',
        '0.692963938296578',
        '0.692963938296578',
        '0.692963938296578',
        '0.691128729889627',
        '0.691128729889627',
        '0.691128729889627',
        '0.689155460212599',
        '0.689155460212599',
        '0.685438639343522',
        '0.685224840072349',
        '0.685224840072349',
        '0.685219973743152',
        '0.685219973743152',
        '0.6850692016773',
        '0.6850692016773',
        '0.683825024698964',
        '0.678842233976904',
        '0.678842233976904',
        '0.678842233976904',
        '0.672930536059637',
        '0.672930536059637',
        '0.672920306515092',
        '0.672920306515092',
        '0.669892017942682',
        '0.666454126161734',
        '0.662157509568921',
        '0.658223286348885',
        '0.658191041870308',
        '0.658191041870308',
        '0.655403017768666',
        '0.655085972957746',
        '0.648617042420592',
        '0.645369482428843',
        '0.644599213517623',
        '0.641725334996506',
        '0.641725334996506',
        '0.64136631108668',
        '0.64021715546445',
        '0.639080380671276',
        '0.638836915498726',
        '0.633141152305156',
        '0.625860334397778',
        '0.625860334397778',
        '0.622998564479007',
        '0.622760159059029',
        '0.615030138965483',
        '0.613411650307812',
        '0.608877721998496',
        '0.608877721998496',
        '0.601126678637436',
        '0.601126678637436',
        '0.596880975292348',
        '0.58936416202425',
        '0.585193260796653',
        '0.584816324326206',
        '0.58161734448186',
        '0.568869136946276',
        '0.568869136946276',
        '0.568812214623809',
        '0.568812214623809',
        '0.566048853925453',
        '0.559340635782741',
        '0.548446902697914',
        '0.54283359547831',
        '0.54283359547831',
        '0.516927802069252'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.707178568184332',
        'topology' => 765,
        'id' => 5546,
        'elite' => 1,
        'nodes' => {
          '549' => {
            'one' => '-1.70971625248934',
            'bias' => '0.0575935964821614'
          },
          'one' => {},
          'two' => {},
          'bias' => {},
          'output' => {
            '549' => '2.31290051013462',
            'bias' => '0.505327351560286',
            'two' => '-0.986807570895418'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.707178568184332',
      'func' => sub { "DUMMY" }
    },
    '6637' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.499969558136965',
        '0.499969558136965',
        '0.499969558136965',
        '0.499969558136965',
        '0.499969558136965',
        '0.499969558136965',
        '0.499969558136965',
        '0.499969558136965',
        '0.499969558136965',
        '0.499969558136965',
        '0.499969558136965',
        '0.499969558136965',
        '0.499969558136965',
        '0.499969558136965',
        '0.499969558136965'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.499969558136965',
        'topology' => 6637,
        'id' => 6636,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.99496552709397',
            'two' => '-0.288238670638719',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => 1
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.52818458295627',
            '1863' => '-1.06034219359517',
            '4639' => '-0.135800061574209',
            'bias' => '0.074429753902327',
            '601' => '-0.486306909555659'
          },
          '601' => {
            'one' => '-0.88264688394766',
            '4920' => '0.803646918676541',
            'bias' => '0.307932848437218'
          },
          '1863' => {
            'one' => '0.513351698528216',
            '4639' => '0.862488012855591',
            'two' => '-0.0485027036571635',
            'bias' => 0,
            '601' => '0.88316747995409'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.499969558136965',
      'func' => sub { "DUMMY" }
    },
    '13536' => {
      'penalty' => '10.6',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '13535',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'13535\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'13535\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'13535\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'13535\'}*$n->{\'nodes\'}->{\'601\'}->{\'13535\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999996511',
        '0.749999999996511',
        '0.749999999996511',
        '0.749999999996511',
        '0.749999999996511',
        '0.749999999996511',
        '0.749999999996511',
        '0.749999999996511',
        '0.749999999996504',
        '0.749999999996504',
        '0.749999999996504',
        '0.749999999996504',
        '0.749999999996504',
        '0.749999999996504',
        '0.749999999996261',
        '0.749999999996257',
        '0.749999999996173',
        '0.749999999996173',
        '0.749999999996173',
        '0.749999999996136'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999996511',
        'topology' => 13536,
        'nodes' => {
          '13535' => {
            '4920' => '0.931791736685568',
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.651069209965235',
            'two' => '0.902369455417595',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.923136842358709',
            '4639' => '0.668974406219257',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.247058844742669'
          },
          '6083' => {
            'bias' => 1
          },
          'output' => {
            '1863' => '-3.52791857611295',
            'one' => '9.85558505928864',
            '4920' => '0.188133462100286',
            '4639' => '-0.210132100445194',
            'bias' => '0.0476840681369789',
            'two' => 10,
            '601' => '-1.8807151551763'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            '13535' => '0.824816522345505',
            'one' => '-1.4093963318973',
            'bias' => '0.246486302844063',
            'two' => '-0.828653377196644'
          },
          '1863' => {
            'one' => '0.444393822451282',
            '4639' => '0.907934756661285',
            'bias' => 0,
            'two' => '-0.0205432146563809',
            '601' => '0.599671455944881'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 14101
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999996511',
      'func' => sub { "DUMMY" }
    },
    '1716' => {
      'penalty' => '10.2554864852417',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        '549',
        '601',
        'two',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'549\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'549\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'549\'}->{\'one\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'549\'}*$n->{\'nodes\'}->{\'output\'}->{\'549\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.714635333312967',
        '0.714635333312967',
        '0.714635333312967',
        '0.714635333312967',
        '0.714113371303827',
        '0.714113371303827',
        '0.705613987551755',
        '0.705613987551755',
        '0.705613987551755',
        '0.705613987551755',
        '0.705613987551755',
        '0.705613987551755',
        '0.705613987551755',
        '0.705607942383007',
        '0.705590427447383',
        '0.70199488634057',
        '0.70199488634057',
        '0.698324524740067',
        '0.691272498128784',
        '0.690966083454762',
        '0.688788112694883',
        '0.68842247265386',
        '0.68842247265386',
        '0.68842247265386',
        '0.68842247265386',
        '0.68842247265386',
        '0.68842247265386',
        '0.688211506339893',
        '0.688211506339893',
        '0.688211506339893',
        '0.688211506339893',
        '0.688208648579939',
        '0.687781946129624',
        '0.687737092951703',
        '0.687737092951703',
        '0.687708529809755',
        '0.687708529809755',
        '0.681591354305843',
        '0.681591354305843',
        '0.681556138594617',
        '0.6779228620158',
        '0.6779228620158',
        '0.6779228620158',
        '0.6779228620158',
        '0.677781393307145',
        '0.676647060830115',
        '0.673723624516783',
        '0.673575579697531',
        '0.636757599727319',
        '0.636757599727319',
        '0.627911743454715',
        '0.627885101873166',
        '0.627885101873166',
        '0.624982900422896',
        '0.624982900422896',
        '0.621445676121296',
        '0.617782366210154',
        '0.617530435323561',
        '0.617218757115744',
        '0.604448754418512',
        '0.603973814382705',
        '0.603973814382705',
        '0.589963672072857',
        '0.572376870289914'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.714635333312967',
        'topology' => 1716,
        'nodes' => {
          '549' => {
            'one' => '0.596318217551928',
            'bias' => '-0.340450545449169'
          },
          'one' => {},
          'output' => {
            '549' => '1.81074985547198',
            'bias' => '-0.847431775021584',
            'two' => '-1.22489754075315',
            '601' => '-0.211913764237678'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '-0.266261273705923'
          }
        },
        'elite' => 1,
        'id' => 5191
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.714635333312967',
      'func' => sub { "DUMMY" }
    },
    '4219' => {
      'penalty' => '10.31047',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '3880',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3880\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3880\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'3880\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'3880\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3880\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3880\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749311723714672',
        '0.749311723714672',
        '0.749311723714672',
        '0.749311723714672',
        '0.749311723714672',
        '0.749311723714672',
        '0.749311723714672',
        '0.749311723714672',
        '0.749311723714672',
        '0.749311394172803',
        '0.749311394172803',
        '0.749311369806917',
        '0.749311369806917',
        '0.749279380747494',
        '0.749102612263223',
        '0.749102612263223',
        '0.749102612263223',
        '0.749102612263223',
        '0.749102612263223',
        '0.749102612263223',
        '0.749102458418974',
        '0.748847164632159'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749311723714672',
        'topology' => 4219,
        'id' => 4836,
        'elite' => 1,
        'nodes' => {
          '3880' => {
            'one' => '0.853797690884145',
            'bias' => 0,
            'two' => '-0.287390968010521'
          },
          'one' => {},
          '1863' => {
            '3880' => '0.552545739461694',
            'two' => '-0.0773351293659818',
            'bias' => 0,
            '601' => '0.761711210414014'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '2.75955094889322',
            '1863' => '-1.32434198481527',
            'two' => '2.82699916887347',
            'bias' => '0.0483632614800157'
          },
          '601' => {
            'one' => '-0.128727974684248',
            'two' => '0.677081768761096',
            'bias' => '0.42987850078379'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749311723714672',
      'func' => sub { "DUMMY" }
    },
    '14041' => {
      'penalty' => '5.88668177161396',
      'max' => '0.74999999999984',
      'adj-total' => '0.74999999999984',
      'ignore' => {},
      'adj-count' => 1,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'601\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'1863\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.74999999999984',
        '0.749999999999626',
        '0.749999999999524',
        '0.74999999999952',
        '0.74999999999952',
        '0.74999999999952',
        '0.74999999999952',
        '0.749999999999513',
        '0.749999999999513',
        '0.749999999999513',
        '0.749999999999513',
        '0.749999999999513',
        '0.749999999999513',
        '0.749999999999512',
        '0.749999999999512',
        '0.749999999999512',
        '0.749999999999512',
        '0.749999999999512',
        '0.749999999999511',
        '0.749999999998652',
        '0.749999999998652',
        '0.749999999998641',
        '0.749999999998641',
        '0.749999999998641',
        '0.74999999999864',
        '0.74999999999864',
        '0.74999999999864',
        '0.749999999998624',
        '0.749999999998624',
        '0.749999999998624',
        '0.749999999998624',
        '0.749999999998624',
        '0.749999999998624',
        '0.749999999998621',
        '0.749999999998621',
        '0.74999999999861',
        '0.74999999999861',
        '0.74999999999861',
        '0.749999999998608',
        '0.749999999998608',
        '0.749999999998608',
        '0.749999999998608',
        '0.749999999998608',
        '0.749999999998608',
        '0.749999999998608'
      ],
      'count' => 3,
      'adjusted' => '0.739251651038037',
      'avg' => '0.749999999999697',
      'min' => '0.749999999999626',
      'last' => '0.749999999999333',
      'champion' => {
        'fitness' => '0.749999999999626',
        'topology' => 14041,
        'id' => 16130,
        'elite' => 0,
        'nodes' => {
          '4920' => {
            'one' => '0.913075044845904',
            '4639' => '0.67445560447376',
            'two' => '-0.275828349210611',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.697995006322268',
            'bias' => 0,
            'two' => '0.919105637222358'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.60264288363152',
            '1863' => '-3.67534096065341',
            '4639' => '-0.210568358954971',
            '4920' => '0.205641214027951',
            'two' => 10,
            'bias' => '0.0444502907770139',
            '601' => '-2.34213246391214'
          },
          '6083' => {
            'bias' => '0.931344671448865'
          },
          '601' => {
            'one' => '-1.53553722643952',
            '4920' => '0.680071426282656',
            '6083' => '0.0139940247167836',
            'two' => '-0.942854625105398',
            'bias' => '0.238294960435852'
          },
          '1863' => {
            'one' => '0.423171622469618',
            '4639' => '0.917970696065767',
            'two' => '-0.0226897827944371',
            'bias' => 0,
            '6083' => '-0.210310201483896',
            '601' => '0.612023694531412'
          },
          'one' => {}
        }
      },
      'adj-avg' => '0.74999999999984',
      'total' => '2.24999999999909',
      'offspring' => 0,
      'members' => [
        16192,
        16130,
        16191
      ],
      'best' => '0.74999999999984',
      'func' => sub { "DUMMY" }
    },
    '3550' => {
      'penalty' => '10.1504077785756',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.748745520568327',
        '0.748745520568327',
        '0.748745520568327',
        '0.748745520568327',
        '0.748745520568327',
        '0.748745426119427',
        '0.748739973023802',
        '0.748739973023802',
        '0.748739973023802',
        '0.748739973023802',
        '0.748739945665492',
        '0.748739945665492',
        '0.748739856897514',
        '0.748739856897514',
        '0.74873984988695',
        '0.74873984988695',
        '0.74873984988695',
        '0.74873984988695',
        '0.748724856802772',
        '0.748724856802772',
        '0.748724836008828',
        '0.748724836008828',
        '0.748724836008828',
        '0.748537508138353',
        '0.748537508138353',
        '0.747975866971414',
        '0.747975866971414',
        '0.747446801502507',
        '0.747446799204842',
        '0.74703386882404',
        '0.74703386882404',
        '0.74703386882404',
        '0.74600046416187',
        '0.746000463514597',
        '0.745949881985555',
        '0.745781687894656',
        '0.745781687894656'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.748745520568327',
        'topology' => 3550,
        'nodes' => {
          '1863' => {
            'one' => '0.532464958697391',
            'bias' => 0,
            'two' => '-0.0803330701568507',
            '601' => '1.12462465826484'
          },
          'one' => {},
          'output' => {
            '1863' => '-1.23498079178502',
            'one' => '2.48974160868016',
            'bias' => '0.0457907385256552',
            'two' => '2.61725428331458'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '0.853849140782417',
            'bias' => '0.324497490351681',
            'two' => '0.536495908360345'
          }
        },
        'elite' => 1,
        'id' => 5150
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.748745520568327',
      'func' => sub { "DUMMY" }
    },
    '14466' => {
      'penalty' => '10.368187976581',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'7065\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.74999999999896',
        '0.74999999999896',
        '0.74999999999896',
        '0.74999999999896',
        '0.74999999999896',
        '0.74999999999896',
        '0.74999999999896',
        '0.74999999999896',
        '0.749999999998949',
        '0.749999999998949',
        '0.749999999998948',
        '0.749999999998948',
        '0.749999999998939',
        '0.749999999998939',
        '0.749999999998937',
        '0.749999999998937',
        '0.749999999998937',
        '0.749999999998937',
        '0.749999999998923',
        '0.749999999998921',
        '0.749999999998918',
        '0.74999999999891',
        '0.74999999999891',
        '0.74999999999891',
        '0.749999999998905',
        '0.749999999998905',
        '0.749999999998905',
        '0.749999999998891',
        '0.749999999998877',
        '0.749999999998877',
        '0.749999999998877',
        '0.749999999998877'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.74999999999896',
        'topology' => 14466,
        'nodes' => {
          '4639' => {
            'one' => '-0.749631042272312',
            'two' => '0.849235137800562',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.970834714833647',
            '4639' => '0.679972478874642',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.290573850111365'
          },
          '7065' => {
            '1863' => '-0.874369640320153',
            '4639' => 1,
            'bias' => 0
          },
          '6083' => {
            'bias' => '1.04462325457099'
          },
          'output' => {
            '1863' => '-3.68486456385691',
            'one' => '9.09607621390779',
            '4920' => '0.170499260878265',
            '7065' => '-0.22371578464281',
            'bias' => '0.0515912294955894',
            'two' => 10,
            '601' => '-1.80498600987678'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.50986179336065',
            '4920' => '0.662563186863638',
            'bias' => '0.245788779708503',
            'two' => '-0.894252009528762'
          },
          '1863' => {
            'one' => '0.431411522625746',
            '4639' => '1.02451909800489',
            'bias' => 0,
            'two' => '-0.0204152672076425',
            '601' => '0.679098772135715'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 15879
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.74999999999896',
      'func' => sub { "DUMMY" }
    },
    '13105' => {
      'penalty' => '10.8059422857711',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.74999999993766',
        '0.74999999993766',
        '0.74999999993766',
        '0.74999999993766',
        '0.74999999993766',
        '0.749999999937216',
        '0.749999999937216',
        '0.749999999936403',
        '0.749999999936403',
        '0.749999999936403',
        '0.749999999936403',
        '0.749999999912181',
        '0.749999999912134',
        '0.749999999912134',
        '0.749999999912134',
        '0.749999999912131',
        '0.749999999912131',
        '0.749999999910346',
        '0.749999999910346',
        '0.749999999908069',
        '0.749999999908069',
        '0.749999999907209',
        '0.749999999907209',
        '0.749999999907199',
        '0.749999999907199',
        '0.749999999907199',
        '0.749999999907199',
        '0.749999999905036',
        '0.749999999905036',
        '0.749999999905036',
        '0.749999999905036',
        '0.749999999904631',
        '0.749999999435511',
        '0.749999999067483',
        '0.749999997657999',
        '0.749999993680838',
        '0.74999999367271',
        '0.749999993672701',
        '0.749999993597335',
        '0.749999993597335',
        '0.749999993597335',
        '0.749999993555232',
        '0.749999993552645',
        '0.749999993552474',
        '0.749999993552474',
        '0.749999993552474',
        '0.749999993552474',
        '0.749999993504729',
        '0.749999992321588',
        '0.749999992321588',
        '0.749999988787602'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.74999999993766',
        'topology' => 13105,
        'id' => 15465,
        'elite' => 0,
        'nodes' => {
          '4920' => {
            '4639' => '0.684031950474819',
            'two' => '-0.21875590789112',
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.543449331994705',
            'bias' => 0,
            'two' => '0.890227205932424'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.13685133667537',
            '1863' => '-4.61961511096221',
            '4639' => '-0.203030586701155',
            '4920' => '0.162547877733008',
            'two' => '9.26717653377587',
            'bias' => '0.040466594183232'
          },
          '601' => {
            'one' => '-1.32010979422173',
            '4920' => '0.83757395008851',
            'two' => '-0.727627452169338',
            'bias' => '0.302322534888546'
          },
          '1863' => {
            'one' => '0.43515668051498',
            '4639' => '0.919942506207597',
            'two' => '-0.0196421856436327',
            'bias' => 0,
            '601' => '0.739756088150428'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.74999999993766',
      'func' => sub { "DUMMY" }
    },
    '15401' => {
      'penalty' => '4.5883',
      'max' => '0.749999999999973',
      'adj-total' => '1.49999999999995',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '15005',
        '15400',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'6083\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'15005\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'15005\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'15005\'}->{\'bias\'}), 5 ); $v->{\'15400\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'15400\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'15400\'}*$n->{\'nodes\'}->{\'7065\'}->{\'15400\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'15005\'}*$n->{\'nodes\'}->{\'output\'}->{\'15005\'})+($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999973',
        '0.749999999999973',
        '0.749999999999973',
        '0.749999999999968',
        '0.749999999999968',
        '0.749999999999968',
        '0.749999999999968',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999934',
        '0.749999999999934',
        '0.749999999999934',
        '0.749999999999934'
      ],
      'count' => 3,
      'adjusted' => '0.749973457078976',
      'avg' => '0.749999999998899',
      'min' => '0.749999999996752',
      'last' => '0.749999999999769',
      'champion' => {
        'fitness' => '0.749999999999973',
        'topology' => 15401,
        'nodes' => {
          '15400' => {
            'bias' => '0.936670003969818'
          },
          '4639' => {
            'one' => '-0.708782047630469',
            'two' => '0.794888017621053',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.768382065120033',
            '4639' => '0.694002128552999',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.233554893584987'
          },
          '7065' => {
            '15400' => 0,
            '4639' => '0.906891060463882',
            'bias' => 0
          },
          '6083' => {
            '4639' => '0.494467940529544',
            'bias' => '0.972409227409902'
          },
          'output' => {
            '15005' => '0.207872860444669',
            'one' => 10,
            '1863' => '-3.90916408092117',
            '7065' => '-0.278976699735253',
            'bias' => '0.058641142037788',
            'two' => 10,
            '601' => '-2.54492288003864'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.51930426187057',
            '4639' => '-0.794717029537337',
            '4920' => '0.788960073555388',
            'bias' => '0.227922108991647',
            'two' => '-0.89518050060115'
          },
          '15005' => {
            '4920' => '0.922022188875977',
            'bias' => 0
          },
          'one' => {},
          '1863' => {
            'one' => '0.458672322127919',
            '4639' => '0.813444678729258',
            'bias' => 0,
            'two' => '-0.021940274256734',
            '601' => '0.650216855146504'
          }
        },
        'elite' => 1,
        'id' => 16069
      },
      'adj-avg' => '0.749999999999973',
      'total' => '2.2499999999967',
      'offspring' => 0,
      'members' => [
        16069,
        16193,
        16194
      ],
      'best' => '0.749999999999973',
      'func' => sub { "DUMMY" }
    },
    '6756' => {
      'penalty' => '10.341107976581',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749916530534424',
        '0.749916530534424',
        '0.749916530534424',
        '0.749916530534424',
        '0.749916530534424',
        '0.749916530534424',
        '0.749916530534424',
        '0.749916530534424',
        '0.749916530534424',
        '0.749916279229073',
        '0.749916279229073',
        '0.749913156929011',
        '0.749913156929011',
        '0.749913156929011',
        '0.749885403213001',
        '0.749885329915837',
        '0.749885329915837',
        '0.749885141336652',
        '0.749884318600524',
        '0.749884317339808',
        '0.749884265801122',
        '0.749884265801122',
        '0.749884265801122',
        '0.749884237895305',
        '0.749884237895305',
        '0.749884218503998',
        '0.749884218503998',
        '0.749883797193482',
        '0.749883796876536',
        '0.749883796876536',
        '0.749883763325775',
        '0.749883763325775',
        '0.749883713548739'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749916530534424',
        'topology' => 6756,
        'nodes' => {
          '4639' => {
            'one' => '-0.671783466150721',
            'two' => '0.829619676621625',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.859311056383922',
            'bias' => 0,
            'two' => '-0.288238670638719'
          },
          'output' => {
            '1863' => '-1.16946850045166',
            'one' => '3.52818458295627',
            '4639' => '-0.140584148296402',
            'bias' => '0.0715745248003742',
            'two' => '3.57951348142397',
            '601' => '-0.500332541252664'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.923059480144435',
            '4920' => '0.803646918676541',
            'bias' => '0.29874002823388',
            'two' => '-0.568769710965967'
          },
          '1863' => {
            'one' => '0.513351698528216',
            '4639' => '0.943143291903189',
            '4920' => '1.00331629377975',
            'bias' => 0,
            'two' => '-0.0485027036571635',
            '601' => '0.88316747995409'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 7685
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749916530534424',
      'func' => sub { "DUMMY" }
    },
    '16150' => {
      'penalty' => 0,
      'max' => '0.738202205408361',
      'adj-total' => '1.4764013022962',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.738202205408361',
        '0.738199096887839'
      ],
      'count' => 3,
      'adjusted' => '0.738199096887839',
      'avg' => '0.737937718631062',
      'min' => '0.737411853596985',
      'last' => '0.738199096887839',
      'champion' => {
        'fitness' => '0.738199096887839',
        'topology' => 16150,
        'nodes' => {
          '4920' => {
            'one' => '0.399678855756235',
            '4639' => 1,
            'bias' => 0
          },
          '4639' => {
            'one' => '0.752581809101276',
            'two' => 1,
            'bias' => 0
          },
          'output' => {
            '1863' => '-1.11823547443776',
            'one' => '3.49185984168382',
            '4639' => '-0.994089460612003',
            'bias' => '0.074429753902327',
            'two' => '3.15939663495568',
            '601' => '-0.526647115749034'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.877804811548979',
            '4920' => '0.86079157493664',
            'bias' => '0.321085511447368'
          },
          'one' => {},
          '1863' => {
            'one' => '0.513351698528216',
            'bias' => 0,
            'two' => '-0.0443270863407186',
            '601' => '0.81906082502257'
          }
        },
        'elite' => 0,
        'id' => 16149
      },
      'adj-avg' => '0.7382006511481',
      'total' => '2.21381315589319',
      'offspring' => 0,
      'members' => [
        16195,
        16149,
        16196
      ],
      'best' => 0,
      'func' => sub { "DUMMY" }
    },
    '1' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'one' => 1,
        'bias' => 1,
        'output' => 1,
        'two' => 1
      },
      'adj-count' => 0,
      'order' => [],
      'code' => 'sub { my ( $n, $v ) = @_; }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 1,
        'id' => 33,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          'two' => {},
          'bias' => {},
          'output' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '15069' => {
      'penalty' => '10.2444',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'6083\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'6083\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999888',
        '0.749999999999888',
        '0.749999999999888',
        '0.749999999999888',
        '0.749999999999888',
        '0.749999999999888',
        '0.749999999999888',
        '0.749999999999886',
        '0.749999999999883',
        '0.749999999999883',
        '0.749999999999883',
        '0.749999999999883',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881',
        '0.749999999999881'
      ],
      'count' => 0,
      'adjusted' => '0',
      'avg' => 0,
      'min' => '1e+99',
      'last' => '0.749999999999888',
      'champion' => {
        'fitness' => '0.749999999999888',
        'topology' => 15069,
        'id' => 15821,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '0.904908738372898',
            '4639' => '0.888265271040376',
            'two' => '-0.239574144635801',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.664534092714396',
            'bias' => 0,
            'two' => '0.873615839473153'
          },
          '7065' => {
            '4639' => '0.878838152478575',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.80493045964252',
            '1863' => '-4.09068247734553',
            '4920' => '0.165703283630543',
            '7065' => '-0.252546847431124',
            'two' => '9.97549071218686',
            'bias' => '0.0541125356504947',
            '601' => '-1.90689009884692'
          },
          '6083' => {
            '4639' => '0.515121949650011',
            'bias' => '1.04405034804969',
            'two' => '0.0832012009306311'
          },
          '601' => {
            'one' => '-1.47497203303356',
            '4920' => '0.679253025373847',
            '4639' => '-0.813497143733293',
            'two' => '-0.957239412017106',
            'bias' => '0.277847370510789'
          },
          '1863' => {
            'one' => '0.410442421409931',
            '4639' => '0.777919335047257',
            'two' => '-0.0196994510953219',
            'bias' => 0,
            '601' => '0.593075138760012'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999999888',
      'func' => sub { "DUMMY" }
    },
    '14661' => {
      'penalty' => '5.7275428539358',
      'max' => '0.749999999999837',
      'adj-total' => '1.49999999999957',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'1863\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999837',
        '0.749999999999837',
        '0.749999999999837',
        '0.749999999999786',
        '0.749999999999786',
        '0.749999999999675',
        '0.749999999999675',
        '0.749999999999675',
        '0.749999999999675',
        '0.749999999999674',
        '0.749999999999581',
        '0.749999999999581',
        '0.749999999999581',
        '0.749999999999581',
        '0.749999999999581',
        '0.749999999999566',
        '0.749999999999429',
        '0.749999999999427',
        '0.749999999999427',
        '0.749999999999427',
        '0.749999999999427',
        '0.749999999999427',
        '0.749999999999424',
        '0.749999999999424',
        '0.749999999999424',
        '0.749999999999362',
        '0.749999999999362',
        '0.749999999999105',
        '0.749999999999104'
      ],
      'count' => 3,
      'adjusted' => '0.749581769205856',
      'avg' => '0.749999999999676',
      'min' => '0.749999999999454',
      'last' => '0.749999999999819',
      'champion' => {
        'fitness' => '0.749999999999837',
        'topology' => 14661,
        'id' => 16133,
        'elite' => 0,
        'nodes' => {
          '4920' => {
            'one' => '0.827858764653565',
            '4639' => '0.490968357595885',
            'two' => '-0.25321770908545',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.84062668342683',
            'bias' => 0,
            'two' => '0.801473892419512'
          },
          '7065' => {
            '4639' => '0.830871961540551',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.73635981163391',
            '1863' => '-3.60275117612385',
            '4920' => '0.171742263528346',
            '7065' => '-0.230674324499748',
            'two' => 10,
            'bias' => '0.0462575594488473',
            '601' => '-2.12946098158755'
          },
          '6083' => {
            'bias' => '1.07242592196957'
          },
          '601' => {
            'one' => '-1.51699304734952',
            '4920' => '0.730257010466798',
            'two' => '-1.01563320144578',
            'bias' => '0.234300525198189'
          },
          '1863' => {
            'one' => '0.431771435176528',
            '4639' => '0.796402175536851',
            '6083' => '0.744924730607302',
            'two' => '-0.0210747482145011',
            'bias' => 0,
            '601' => '0.767212394395799'
          },
          'one' => {}
        }
      },
      'adj-avg' => '0.749999999999787',
      'total' => '2.24999999999903',
      'offspring' => 0,
      'members' => [
        16133,
        16197,
        16198
      ],
      'best' => '0.749999999999837',
      'func' => sub { "DUMMY" }
    },
    '13046' => {
      'penalty' => '10.8881241522213',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        '549',
        'two',
        '601',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'549\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'549\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'549\'}->{\'one\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'549\'}*$n->{\'nodes\'}->{\'output\'}->{\'549\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999987952',
        '0.749999999987952',
        '0.749999999987952',
        '0.749999999987952',
        '0.749999999987952',
        '0.749999999987952',
        '0.749999999987952',
        '0.749999999987952',
        '0.749999999987952',
        '0.74999999998795',
        '0.74999999998795',
        '0.749999999981251',
        '0.749999999950017',
        '0.749999999949856',
        '0.749999999949856',
        '0.749999999949856',
        '0.749999999742103',
        '0.749999999648886',
        '0.749999999648886',
        '0.749999999648886',
        '0.749999999648326',
        '0.74999999964831',
        '0.749999999448842',
        '0.749999999448842',
        '0.749999999448842',
        '0.749999999448842',
        '0.749999999448842',
        '0.749999999448068',
        '0.749999999448068',
        '0.749999997950738',
        '0.749999996468384',
        '0.749999989580484',
        '0.749999989580484',
        '0.749999989580484',
        '0.749999989580484',
        '0.749999989580484',
        '0.749999979163977',
        '0.749999979163968',
        '0.749999979163966',
        '0.749999774721118',
        '0.749972768827986',
        '0.749972768827986',
        '0.749972768827986',
        '0.749972768827986',
        '0.749972768827986',
        '0.749798990575565',
        '0.749798990575565',
        '0.749798990575565',
        '0.749798990575565',
        '0.749798478042817',
        '0.749798478042817',
        '0.746115526429221',
        '0.725111872626046',
        '0.725111872626046',
        '0.622193642110775',
        '0.622193642110775'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999987952',
        'topology' => 13046,
        'id' => 15314,
        'elite' => 1,
        'nodes' => {
          '549' => {
            'one' => '0.946887612414965',
            'bias' => 0
          },
          'one' => {},
          'two' => {},
          'bias' => {},
          'output' => {
            '549' => '9.36211701875412',
            'two' => '9.81015394245111',
            'bias' => '0.0199406023625579',
            '601' => -10
          },
          '601' => {
            'one' => '-0.997958693290664',
            'bias' => '0.616855365050835',
            'two' => '0.0127208095491749'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999987952',
      'func' => sub { "DUMMY" }
    },
    '1641' => {
      'penalty' => '10.2056859610867',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        '601',
        'two',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.746033713519478',
        '0.746033713519478',
        '0.746033713519478',
        '0.746033713519478',
        '0.746033713519478',
        '0.746033713519478',
        '0.746033713519478',
        '0.746033713519478',
        '0.745998656991469',
        '0.745998656991469',
        '0.745998656991469',
        '0.745950445258866',
        '0.745950445258866',
        '0.745950445258866',
        '0.745361695539443',
        '0.74531320246017',
        '0.744832901321936',
        '0.744788126801361',
        '0.744788126801361',
        '0.744788126801361',
        '0.744787985263079',
        '0.744787985263079',
        '0.744787985263079',
        '0.744688750389052',
        '0.744589406732113',
        '0.744582809117812',
        '0.744415531814753',
        '0.743880117713942',
        '0.743236707459601',
        '0.742916529513856',
        '0.742916529513856',
        '0.740881540297077',
        '0.740881540297077',
        '0.740854478768447',
        '0.740854478768447',
        '0.740444914484874',
        '0.740444914484874',
        '0.740149744104978',
        '0.738689428602908',
        '0.73758955010864',
        '0.737065551805908',
        '0.736105225067212',
        '0.736105225067212',
        '0.735730825571773',
        '0.73458336610097',
        '0.73458336610097',
        '0.734352916290929',
        '0.734145769639531',
        '0.733698093237854',
        '0.731597441778135',
        '0.730864980457305',
        '0.730397186392372',
        '0.728292515469387',
        '0.728255876424105',
        '0.728255876424105',
        '0.72803512301388',
        '0.72803512301388',
        '0.72803512301388',
        '0.726363030318605',
        '0.723127005864623',
        '0.722652845091256',
        '0.72087650465109',
        '0.720818484558526',
        '0.718832449217201',
        '0.718446127014818',
        '0.715980038284136',
        '0.714832399973923',
        '0.711698970371114'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.746033713519478',
        'topology' => 1641,
        'id' => 5155,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '1.99076585102548',
            'two' => '2.11172966161457',
            'bias' => '0.0523479925725475',
            '601' => '-1.04056675264548'
          },
          '601' => {
            'one' => '-0.175154687376099',
            'bias' => '0.479944431452089'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.746033713519478',
      'func' => sub { "DUMMY" }
    },
    '654' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'one' => 1,
        'two' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'}), 5 ); }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 654,
        'nodes' => {
          'one' => {},
          'output' => {
            'bias' => 0,
            '601' => '-0.374823078221472'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '1.07881762579467'
          }
        },
        'elite' => 1,
        'id' => 743
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '6714' => {
      'penalty' => '10.2651581415116',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749953582752963',
        '0.749953582752963',
        '0.749953582752963',
        '0.749953582752963',
        '0.749935963720998',
        '0.749935963720998',
        '0.749935963720998',
        '0.749924261076692',
        '0.749924234972973',
        '0.749924234972973',
        '0.749924203960437',
        '0.749924203960437',
        '0.749906079607896',
        '0.749906065649133',
        '0.749906065649133',
        '0.749906065649133',
        '0.749904759043717',
        '0.749904759043717',
        '0.749904149669504',
        '0.749904149669504',
        '0.749904149669504',
        '0.749904149669504',
        '0.749904149669504',
        '0.749904149669504',
        '0.749904149669504',
        '0.749904137622654',
        '0.749904064952598',
        '0.749903247221183',
        '0.749903247221183',
        '0.749903247221183',
        '0.749902686300249',
        '0.749902411614603',
        '0.749902411614603',
        '0.749902410072432',
        '0.749902410072432',
        '0.749883149030341',
        '0.749883149030341',
        '0.749883090030808'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749953582752963',
        'topology' => 6714,
        'id' => 8225,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.846717896005936',
            'two' => '-0.323559105062958',
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.732148342227148',
            'bias' => 0,
            'two' => '1.08555664421368'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.48091683202511',
            '1863' => '-1.27862920608194',
            '4639' => '-0.12937492214485',
            'two' => '3.73854424482475',
            'bias' => '0.0765672289879033',
            '601' => '-0.538484312382997'
          },
          '601' => {
            'one' => '-0.979940782634388',
            '4920' => '0.634534223217088',
            'two' => '-0.629072729411877',
            'bias' => '0.283093452197004'
          },
          '1863' => {
            'one' => '0.468905260599961',
            '4639' => '0.938929816125624',
            'two' => '-0.0489481213366018',
            'bias' => 0,
            '601' => '0.880544321993358'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749953582752963',
      'func' => sub { "DUMMY" }
    },
    '7783' => {
      'penalty' => '10.7683690193126',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '3618',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3618\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3618\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'3618\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3618\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3618\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.74999999999272',
        '0.74999999999272',
        '0.74999999999272',
        '0.749999999992646',
        '0.749999999992646',
        '0.749999999992646',
        '0.749999999992646',
        '0.749999999992646',
        '0.74999999999262',
        '0.74999999999262',
        '0.74999999999262',
        '0.74999999999262',
        '0.749999999992492',
        '0.749999999992492',
        '0.749999999986224',
        '0.749999999986224',
        '0.749999999986208',
        '0.749999999986208',
        '0.749999999951179',
        '0.749999999951179',
        '0.74999999984375',
        '0.749999999789289',
        '0.749999999650728',
        '0.749999998931314',
        '0.749999995189701',
        '0.749999995189701',
        '0.749999995189701',
        '0.749999995189701',
        '0.749999994812386',
        '0.749999994812386',
        '0.749999994812386',
        '0.749999992491416',
        '0.749999992491416',
        '0.749999992491416',
        '0.749999992491416',
        '0.749999991527695',
        '0.749999978788726',
        '0.749999978739734',
        '0.749999976997521',
        '0.749999976997521',
        '0.749999925058797',
        '0.749999908676346',
        '0.749999846387182',
        '0.749999414604423',
        '0.749999303589564',
        '0.749999303589564',
        '0.749999303589564',
        '0.74999924194829',
        '0.74999924194829',
        '0.749998899327072',
        '0.749998899327072',
        '0.749998899295182',
        '0.749998899246891',
        '0.749998899246891',
        '0.749998890405893',
        '0.749998883998769',
        '0.749998865845112',
        '0.749997846821341',
        '0.749997846821341',
        '0.749997846821341',
        '0.749997846821341',
        '0.749997698119951',
        '0.749997672397976',
        '0.749995550960744',
        '0.749995550960744',
        '0.749995496605274',
        '0.749993477698041',
        '0.749993414939832',
        '0.749993414503357',
        '0.749992322873353',
        '0.749992292277353',
        '0.749989146993137',
        '0.749985154594192',
        '0.749985154594192',
        '0.749984865238063',
        '0.749984865238063',
        '0.749984813109458',
        '0.749984779243378',
        '0.749984779243378',
        '0.749979053837285',
        '0.749970464595381',
        '0.749970464595381',
        '0.749970464595381',
        '0.749970464071063',
        '0.749970464071063',
        '0.749941896935894',
        '0.749941896935894',
        '0.749941741608568',
        '0.749941635236729',
        '0.749941526127496',
        '0.749904525785925',
        '0.749904525785925',
        '0.749904525624841',
        '0.749899990515265',
        '0.749803264992471',
        '0.749679001883725',
        '0.749679001883725',
        '0.749669247129364',
        '0.749669247129364',
        '0.749669247129364'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.74999999999272',
        'topology' => 7783,
        'nodes' => {
          '1863' => {
            '3618' => '-0.0886880828315294',
            'bias' => 0,
            '601' => '1.06454380442283'
          },
          'one' => {},
          '3618' => {
            'two' => '2.11656269222827',
            'bias' => 0
          },
          'output' => {
            '1863' => '-5.18746756335511',
            'one' => '7.70275786603642',
            'bias' => '0.0452820139689344',
            'two' => 10
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.2666725090121',
            'bias' => '0.29265991925298'
          }
        },
        'elite' => 0,
        'id' => 13770
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.74999999999272',
      'func' => sub { "DUMMY" }
    },
    '14232' => {
      'penalty' => '10.24',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'output\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999996151',
        '0.749999999996151',
        '0.749999999996151',
        '0.749999999996151',
        '0.749999999996151',
        '0.749999999996151',
        '0.749999999996151',
        '0.749999999996151',
        '0.749999999996151',
        '0.74999999999399',
        '0.74999999999399',
        '0.74999999999399',
        '0.74999999999399',
        '0.74999999999399',
        '0.74999999999342',
        '0.749999999973601',
        '0.749999999973008',
        '0.749999999972998',
        '0.749999999971254',
        '0.749999999971254',
        '0.749999999971062',
        '0.749999999970816'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999996151',
        'topology' => 14232,
        'nodes' => {
          '4639' => {
            'one' => '-0.782860383245347',
            'two' => '0.796299061888038',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.970834714833647',
            '4639' => '0.679972478874642',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.308742902839159'
          },
          '6083' => {
            'bias' => '1.04462325457099'
          },
          'output' => {
            '4920' => '0.174490973177659',
            '4639' => '-0.22371578464281',
            '6083' => '-0.774371595320765',
            'bias' => '0.0515912294955894',
            'two' => 10,
            '601' => '-1.80498600987678',
            'one' => '9.09607621390779',
            '1863' => '-3.40221510958076'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.50986179336065',
            '4920' => '0.68369839410397',
            'bias' => '0.258456158786827',
            'two' => '-0.894252009528762'
          },
          '1863' => {
            'one' => '0.45457465638839',
            '4639' => '0.905644144003548',
            'bias' => 0,
            'two' => '-0.0190850011534445',
            '601' => '0.647552302604054'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 14741
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999996151',
      'func' => sub { "DUMMY" }
    },
    '4797' => {
      'penalty' => '10.213461489',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '3880',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3880\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3880\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'3880\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'3880\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3880\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3880\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749488210210667',
        '0.749488210210667',
        '0.749488210210667',
        '0.749488210210667',
        '0.749487136932527',
        '0.749487136932527',
        '0.749487136932527',
        '0.749486631079261',
        '0.749486631079261',
        '0.749486631079261',
        '0.74948650623868',
        '0.74948650623868',
        '0.74948650623868',
        '0.74948650623868',
        '0.74948650623868',
        '0.74948650623868',
        '0.74948650623868',
        '0.74948650623868',
        '0.749486391782686',
        '0.749486391782686',
        '0.749486175865539',
        '0.749486175865539',
        '0.749486095218676',
        '0.749486095218676',
        '0.749442100668396',
        '0.749441933681319',
        '0.749441933681319',
        '0.749441540518088',
        '0.749441540518088'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749488210210667',
        'topology' => 4797,
        'nodes' => {
          '1863' => {
            '3880' => '0.541169684904098',
            'bias' => 0,
            'two' => '-0.0813998291961784',
            '601' => '0.843361671780845'
          },
          'one' => {},
          '3880' => {
            'one' => '0.821386511811251',
            'two' => '-0.276157778633391',
            'bias' => 0
          },
          'output' => {
            '1863' => '-1.29646876157465',
            'one' => '3.07590277142753',
            'bias' => '0.0426204723603256',
            'two' => '2.80035100376796',
            '601' => '-0.139084267413711'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '0.476357046019147',
            'two' => '0.550099092916997'
          }
        },
        'elite' => 1,
        'id' => 5799
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749488210210667',
      'func' => sub { "DUMMY" }
    },
    '16088' => {
      'penalty' => 0,
      'max' => '0.548751659015342',
      'adj-total' => '0.548751659015342',
      'ignore' => {},
      'adj-count' => 1,
      'order' => [
        'bias',
        'two',
        '601',
        'one',
        '1863',
        '981',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'981\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'981\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'981\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'981\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'981\'}*$n->{\'nodes\'}->{\'output\'}->{\'981\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.548751659015342',
        '0.548751659015342',
        '0.546700923287876'
      ],
      'count' => 2,
      'adjusted' => '0.548751659015342',
      'avg' => '0.541623226409071',
      'min' => '0.5344947938028',
      'last' => '0.547726291151609',
      'champion' => {
        'fitness' => '0.548751659015342',
        'topology' => 16088,
        'id' => 16135,
        'elite' => 0,
        'nodes' => {
          '981' => {
            'one' => '0.585482914242263',
            'bias' => 0,
            'two' => 1
          },
          'one' => {},
          '1863' => {
            'one' => '0.488585053632672',
            'two' => '-0.0443270863407186',
            'bias' => 0,
            '601' => '0.88316747995409'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            '981' => '3.14927581474822',
            'one' => '2.99050426066213',
            '1863' => '-0.99503610076787',
            'bias' => '0.0758417247612818',
            '601' => '-0.463509631260245'
          },
          '601' => {
            'two' => '0.825066331637297',
            'bias' => '0.349379786981963'
          }
        }
      },
      'adj-avg' => '0.548751659015342',
      'total' => '1.08324645281814',
      'offspring' => 0,
      'members' => [
        16135,
        16199
      ],
      'best' => 0,
      'func' => sub { "DUMMY" }
    },
    '12986' => {
      'penalty' => '10.4',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999993022',
        '0.749999999993022',
        '0.749999999993022',
        '0.749999999993022',
        '0.749999999993022',
        '0.749999999993022',
        '0.74999999999301',
        '0.74999999999301',
        '0.74999999999301',
        '0.74999999999301',
        '0.74999999999301',
        '0.74999999999301',
        '0.74999999999301',
        '0.74999999999301',
        '0.749999999990075',
        '0.749999999990075',
        '0.749999999990075'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999993022',
        'topology' => 12986,
        'id' => 13641,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          '1863' => {
            'bias' => 0,
            '601' => '0.986466005861263'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => 10,
            '1863' => '-5.08165798130534',
            'two' => 10,
            'bias' => '0.0224170633133624'
          },
          '601' => {
            'one' => '-0.891104769989355',
            'bias' => '0.586846549174942',
            'two' => '0.0175483052114462'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999993022',
      'func' => sub { "DUMMY" }
    },
    '6521' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749868274899361',
        '0.749868274899361',
        '0.749868274899361',
        '0.749868274899361',
        '0.749868274899361',
        '0.749868274899361',
        '0.749868274899361',
        '0.749868274899361',
        '0.749868274899361',
        '0.749868274899361',
        '0.749868274899361',
        '0.749868133988049',
        '0.749866843224651',
        '0.749862492928254',
        '0.749862492928254',
        '0.749862492928254',
        '0.749862492928254'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749868274899361',
        'topology' => 6521,
        'nodes' => {
          '4639' => {
            'one' => '-0.666668164007483',
            'two' => 1,
            'bias' => 0
          },
          '4920' => {
            'one' => '-0.202183810191649',
            '4639' => '0.99496552709397',
            'bias' => 0,
            'two' => '-0.265499719370495'
          },
          'output' => {
            '1863' => '-1.06034219359517',
            'one' => '3.20523224797128',
            '4639' => '-0.140666232041262',
            'bias' => '0.074429753902327',
            'two' => '3.74049869131929',
            '601' => '-0.486306909555659'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.88264688394766',
            '4920' => '0.803646918676541',
            '4639' => '-0.828742921334062',
            'bias' => '0.307932848437218'
          },
          '1863' => {
            'one' => '0.462197085028702',
            '4639' => '0.823890313282619',
            '4920' => '0.399272919613317',
            'bias' => 0,
            'two' => '-0.0485027036571635',
            '601' => '0.88316747995409'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 7086
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749868274899361',
      'func' => sub { "DUMMY" }
    },
    '6446' => {
      'penalty' => '10.65245',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '3618',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3618\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3618\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'3618\'}->{\'two\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3618\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3618\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.7498641572803',
        '0.7498641572803',
        '0.7498641572803',
        '0.7498641572803',
        '0.7498641572803',
        '0.7498641572803',
        '0.749864151969343',
        '0.749864151969343',
        '0.749864151969343',
        '0.749864151969343',
        '0.749858968670717',
        '0.749858221857886',
        '0.749858221857886',
        '0.749858186812985',
        '0.749858186812985',
        '0.749858186812985',
        '0.749858186812985',
        '0.749858186812985',
        '0.749858186812985',
        '0.749858186812985',
        '0.749858181455293',
        '0.749858181455293',
        '0.749858119805902'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.7498641572803',
        'topology' => 6446,
        'id' => 7087,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.99496552709397',
            'two' => '-0.294759830745201',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => 1
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.20523224797128',
            '1863' => '-1.06034219359517',
            '4639' => '-0.135800061574209',
            'two' => '3.79706291872818',
            'bias' => '0.074429753902327',
            '601' => '-0.486306909555659'
          },
          '601' => {
            'one' => '-0.92485913547221',
            '4639' => '-0.828742921334062',
            '4920' => '0.803646918676541',
            'bias' => '0.307932848437218'
          },
          '1863' => {
            'one' => '0.513351698528216',
            '3618' => '-0.0485027036571635',
            '4920' => '0.399272919613317',
            '4639' => '0.842548815509647',
            'bias' => 0,
            '601' => '0.957457896224168'
          },
          'one' => {},
          '3618' => {
            'two' => 1,
            'bias' => 0
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.7498641572803',
      'func' => sub { "DUMMY" }
    },
    '13689' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999997962',
        '0.749999999997962',
        '0.749999999997962',
        '0.749999999997962',
        '0.749999999997962',
        '0.749999999997962',
        '0.749999999997962',
        '0.749999999997962',
        '0.749999999997962',
        '0.749999999997962',
        '0.749999999997962',
        '0.749999999997962',
        '0.749999999997962',
        '0.749999999997962',
        '0.749999999997919'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999997962',
        'topology' => 13689,
        'id' => 13716,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '0.923136842358709',
            '4639' => '0.661004748816121',
            'two' => '-0.283992226257545',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.651069209965235',
            'bias' => 0,
            'two' => '0.902369455417595'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.85558505928864',
            '1863' => '-3.52791857611295',
            '4639' => '-0.213070897029193',
            '4920' => '0.188133462100286',
            'two' => 10,
            'bias' => '0.0476840681369789',
            '601' => '-1.8807151551763'
          },
          '6083' => {
            'bias' => 1
          },
          '601' => {
            'one' => '-1.4093963318973',
            '4920' => '0.824816522345505',
            'two' => '-0.828653377196644',
            'bias' => '0.256852026758671'
          },
          '1863' => {
            '4639' => '0.957434478714441',
            'two' => '-0.0205432146563809',
            'bias' => 0,
            '601' => '0.599671455944881'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999997962',
      'func' => sub { "DUMMY" }
    },
    '3485' => {
      'penalty' => '10.168',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '601',
        'one',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749586204370463',
        '0.749586204370463',
        '0.749586204370463',
        '0.749586204370463',
        '0.749586204370463',
        '0.749586204370463',
        '0.749586204370463',
        '0.749586204370463',
        '0.749586181276982',
        '0.749586181276982',
        '0.749514961851161',
        '0.749514961851161',
        '0.749501390939778',
        '0.749501390939778',
        '0.749501390939778',
        '0.749501390939778',
        '0.749492448408208',
        '0.749492448408208',
        '0.749492435719103',
        '0.749492402653394',
        '0.749490026036392',
        '0.749490026036392',
        '0.749475624784284',
        '0.74935705101432',
        '0.749121549913762',
        '0.748623033012999',
        '0.748596597241799',
        '0.747530862431853',
        '0.746070177897136',
        '0.743768821176337',
        '0.743721113817355',
        '0.743721113817355',
        '0.743707402420399',
        '0.738863333138795',
        '0.738696363935513',
        '0.735930601349069',
        '0.735241415071163',
        '0.735241415071163',
        '0.73440395150561'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749586204370463',
        'topology' => 3485,
        'id' => 5282,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          '1863' => {
            'one' => '0.513351698528216',
            'two' => '-0.0472506208262097',
            'bias' => 0,
            '601' => '0.88316747995409'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '2.99050426066213',
            '1863' => '-1.04492113589717',
            'two' => '3.21280281528647',
            'bias' => '0.074429753902327',
            '601' => '-0.463509631260245'
          },
          '601' => {
            'two' => '0.802742822571111',
            'bias' => '0.340440848331582'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749586204370463',
      'func' => sub { "DUMMY" }
    },
    '6676' => {
      'penalty' => '10.3899366886621',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.74999999998302',
        '0.74999999998302',
        '0.74999999998302',
        '0.74999999998302',
        '0.74999999998302',
        '0.74999999998302',
        '0.74999999998301',
        '0.74999999998301',
        '0.74999999998301',
        '0.749999999980381',
        '0.749999999980073',
        '0.749999999980073',
        '0.749999999980073',
        '0.749999999978797',
        '0.749999999978797',
        '0.749999999978796',
        '0.749999999978796',
        '0.749999999978796',
        '0.749999999978796',
        '0.749999999976602',
        '0.749999999976602',
        '0.749999999976602',
        '0.749999999976602',
        '0.7499999999749',
        '0.749999999974898',
        '0.749999999974898',
        '0.749999999974898',
        '0.749999999878985',
        '0.749999999878106',
        '0.749999999878106',
        '0.749999999877944',
        '0.749999999874922',
        '0.749999999874922',
        '0.749999999874922',
        '0.749999999722236',
        '0.749999999720727',
        '0.749999999720727',
        '0.749999999720722',
        '0.749999999716009',
        '0.749999999716009',
        '0.749999999714676',
        '0.74999999924598',
        '0.749999998941733',
        '0.749999998832459',
        '0.749999998830687',
        '0.749999998830687',
        '0.749999998830672',
        '0.749999996990998',
        '0.749999996987322',
        '0.749999996987322',
        '0.749999995783284',
        '0.749999995783284',
        '0.749999995783284',
        '0.749999995783284',
        '0.749999995783284',
        '0.749999995783284',
        '0.749999995750733',
        '0.749999991227355',
        '0.749999991168408',
        '0.749999991168408',
        '0.749999991168408',
        '0.749999990413409',
        '0.749999990388022',
        '0.749999990387657',
        '0.749999990387657',
        '0.74999997776292',
        '0.74999997776292',
        '0.74999997776292',
        '0.749999977762908',
        '0.749999956271332',
        '0.74999994235846',
        '0.74999994235846',
        '0.749999923563477',
        '0.749999923563477',
        '0.749999801622287',
        '0.749999786513559',
        '0.749999786513559',
        '0.749999786513559',
        '0.749999786513559',
        '0.749999786474672',
        '0.749999786474634',
        '0.749999681796392',
        '0.749999392615841',
        '0.749999392615841',
        '0.74999939261584',
        '0.749999146228175',
        '0.749999146228175',
        '0.749999035460549',
        '0.749998995815219',
        '0.749998995255625',
        '0.749998994589125',
        '0.749998993901489',
        '0.749998993901489',
        '0.749998993581913',
        '0.749998111640522',
        '0.749998111640522',
        '0.749998108943236',
        '0.749998108943236',
        '0.749997194966954',
        '0.749996802055988'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.74999999998302',
        'topology' => 6676,
        'id' => 14690,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.883975140708875',
            'two' => '-0.291531455738642',
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.645647895076282',
            'bias' => 0,
            'two' => '0.485919316339937'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.91019959509041',
            '1863' => '-4.10232952173938',
            '4639' => '-0.176693516191017',
            'two' => 10,
            'bias' => '0.0841514659216286',
            '601' => '-0.593785831768622'
          },
          '601' => {
            'one' => '-0.7559211739251',
            '4920' => '1.07956406105306',
            'bias' => '0.130307692674053'
          },
          '1863' => {
            'one' => '0.392818685822062',
            '4639' => '1.89243983023327',
            'two' => '-0.0399654151844391',
            'bias' => 0,
            '601' => '1.29968392386785'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.74999999998302',
      'func' => sub { "DUMMY" }
    },
    '5694' => {
      'penalty' => '10.0452855150384',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749829717536635',
        '0.749829717536635',
        '0.749829717536635',
        '0.749829717536635',
        '0.749829717536635',
        '0.749829289114019',
        '0.749829046392281',
        '0.749829046392281',
        '0.749829045423367',
        '0.749829045423367',
        '0.749809863033011',
        '0.749809863033011',
        '0.749809863033011',
        '0.74980985951704',
        '0.74980985951704',
        '0.74980878450738',
        '0.749808781987388',
        '0.749808781987388',
        '0.749808781987388',
        '0.749805350420733',
        '0.749805345346462',
        '0.749805345346462',
        '0.749805345346462',
        '0.749804223197226',
        '0.749804223197226',
        '0.749804223197226',
        '0.749804223197226',
        '0.749804218946055',
        '0.749804218946055',
        '0.749804218946055',
        '0.749804218946055',
        '0.749804218946055',
        '0.749804213758531',
        '0.749804204359089',
        '0.749804117937322',
        '0.749804117937322',
        '0.749803469140231',
        '0.749795386707621',
        '0.749795370774316',
        '0.749795206758061'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749829717536635',
        'topology' => 5694,
        'id' => 7050,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          '1863' => {
            'one' => '0.465314378189233',
            '4639' => '0.304157902075229',
            'two' => '-0.0458714379668594',
            'bias' => 0,
            '601' => '1.05271425532259'
          },
          '4639' => {
            'one' => '0.804507351681986',
            'bias' => 0,
            'two' => '0.916270082927231'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.85360567098486',
            '1863' => '-1.14498236043176',
            'two' => '3.21250469100654',
            'bias' => '0.0707519841474871',
            '601' => '-0.526647115749034'
          },
          '601' => {
            'one' => '-0.803701691413352',
            '4639' => '0.836914216614852',
            'bias' => '0.321085511447368'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749829717536635',
      'func' => sub { "DUMMY" }
    },
    '15515' => {
      'penalty' => 8,
      'max' => '0.749999999999951',
      'adj-total' => '0.749999999999951',
      'ignore' => {},
      'adj-count' => 1,
      'order' => [
        'bias',
        '14941',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'14941\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'14941\'}->{\'bias\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'14941\'}*$n->{\'nodes\'}->{\'6083\'}->{\'14941\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'7065\'}->{\'601\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'7065\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951',
        '0.749999999999951'
      ],
      'count' => 3,
      'adjusted' => '0.728814356324952',
      'avg' => '0.749999999999941',
      'min' => '0.749999999999932',
      'last' => '0.749999999999881',
      'champion' => {
        'fitness' => '0.749999999999951',
        'topology' => 15515,
        'nodes' => {
          '4639' => {
            'one' => '-0.756890751983624',
            'two' => '1.02173872594324',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.875874431047371',
            '4639' => '0.730874276191017',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.263323031782794'
          },
          '14941' => {
            'bias' => '0.969975979169662'
          },
          '7065' => {
            '4639' => '0.846276977294643',
            '6083' => '-0.355801842283427',
            'bias' => 0,
            '601' => '0.555112388569675'
          },
          '6083' => {
            '14941' => '0.965441658664882',
            'bias' => 0
          },
          'output' => {
            '1863' => '-4.02504960499814',
            'one' => 10,
            '4920' => '0.148038340727866',
            '7065' => '-0.254823330286521',
            'bias' => '0.0525574474184348',
            'two' => 10,
            '601' => '-2.1953581303166'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.64513030772989',
            '4639' => '-0.763353947231596',
            '4920' => '0.662697074673099',
            'bias' => '0.326545121176972',
            'two' => '-1.01167174561698'
          },
          'one' => {},
          '1863' => {
            'one' => '0.364425658106815',
            '4639' => '0.958887283880007',
            'bias' => 0,
            'two' => '-0.0181178518012161',
            '601' => '0.562940490332601'
          }
        },
        'elite' => 1,
        'id' => 16013
      },
      'adj-avg' => '0.749999999999951',
      'total' => '2.24999999999982',
      'offspring' => 0,
      'members' => [
        16013,
        16201,
        16200
      ],
      'best' => '0.749999999999951',
      'func' => sub { "DUMMY" }
    },
    '15261' => {
      'penalty' => '3.22414101',
      'max' => '0.749910038716147',
      'adj-total' => '1.49982007705306',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'two',
        '4639',
        '6083',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749910038716147',
        '0.749910038716147',
        '0.749907703310944',
        '0.749907595253919',
        '0.74990727652519',
        '0.74990727652519',
        '0.74986755582017',
        '0.74986755582017',
        '0.74986755582017',
        '0.74986755582017',
        '0.749827475277095',
        '0.749827475277095',
        '0.749827475277095',
        '0.749827475277095',
        '0.749827475277095',
        '0.749827475277095',
        '0.749827162969614',
        '0.749827162969614',
        '0.74979028524936'
      ],
      'count' => 3,
      'adjusted' => '0.749883933676923',
      'avg' => '0.749909444562627',
      'min' => '0.749908256634825',
      'last' => '0.749908481818196',
      'champion' => {
        'fitness' => '0.749910038716147',
        'topology' => 15261,
        'id' => 16139,
        'elite' => 0,
        'nodes' => {
          '4920' => {
            '4639' => '0.748193605554093',
            'bias' => 0,
            '6083' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '0.817771823319366'
          },
          '6083' => {
            'bias' => '0.964905897698156'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.43050967304345',
            '1863' => '-1.20073988662792',
            'two' => '3.5853423928072',
            'bias' => '0.0661023763687548',
            '601' => '-0.662135495098946'
          },
          '601' => {
            'one' => '-0.804923118144999',
            '4920' => '0.785660412027397',
            'bias' => '0.298406115698083'
          },
          '1863' => {
            'one' => '0.496296307620057',
            'two' => '-0.0497921462826677',
            'bias' => 0,
            '601' => '0.882920568887861'
          },
          'one' => {}
        }
      },
      'adj-avg' => '0.749910038526528',
      'total' => '2.24972833368788',
      'offspring' => 0,
      'members' => [
        16139,
        16202,
        16203
      ],
      'best' => '0.749910038716147',
      'func' => sub { "DUMMY" }
    },
    '4678' => {
      'penalty' => '10.553593585891',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '2016',
        'two',
        '4639',
        '601',
        'one',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'2016\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'2016\'}->{\'bias\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'2016\'}*$n->{\'nodes\'}->{\'601\'}->{\'2016\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999985955',
        '0.749999999985955',
        '0.749999999985955',
        '0.749999999985955',
        '0.749999999985955',
        '0.749999999984983',
        '0.749999999984983',
        '0.749999999984983',
        '0.749999999984983',
        '0.749999999984983',
        '0.749999999984897',
        '0.749999999984897',
        '0.749999999984897',
        '0.749999999984897',
        '0.749999999984897',
        '0.749999999967957',
        '0.749999999965693',
        '0.749999999965693',
        '0.749999999965692',
        '0.749999999959449',
        '0.749999999959444',
        '0.749999999959427',
        '0.749999999959427',
        '0.749999999959427',
        '0.749999999914095',
        '0.749999999805353',
        '0.749999999804456',
        '0.749999999796779',
        '0.749999999796777',
        '0.74999999977364',
        '0.749999999609533',
        '0.749999999609533',
        '0.749999999609533',
        '0.749999999609533',
        '0.749999998113182',
        '0.749999998113182',
        '0.749999998084251',
        '0.749999998084251',
        '0.749999990376129',
        '0.749999985286569',
        '0.749999985282168',
        '0.749999985282168',
        '0.749999985282168',
        '0.749999985282168',
        '0.7499999852785',
        '0.7499999852785',
        '0.749999981205439',
        '0.749999981205439',
        '0.749999981205439',
        '0.749999971035373',
        '0.749999971035373',
        '0.749999933454565',
        '0.749999920593646',
        '0.74999992059188',
        '0.749999865151709',
        '0.749999829791192',
        '0.749999829791192',
        '0.749999829720457',
        '0.749999780729419',
        '0.749999768865966',
        '0.749999768853929',
        '0.749999768853929',
        '0.749999767706326',
        '0.749999767706326',
        '0.749999767706326',
        '0.749999630007193',
        '0.749999630007193',
        '0.749999468906435',
        '0.749999468817902',
        '0.749999468817902',
        '0.749999468817902',
        '0.749998946672752',
        '0.749998933716996',
        '0.749998563772164',
        '0.749998086032235',
        '0.749998086032235',
        '0.749998086032235',
        '0.749998060518153',
        '0.749996200783932',
        '0.749996200738519',
        '0.749996200666948',
        '0.749996200666948',
        '0.749996200666948',
        '0.749993187447255',
        '0.749993187432571',
        '0.749993187432571',
        '0.749993187420941',
        '0.749993187420941',
        '0.749985634735164',
        '0.749985634735164',
        '0.749985634735164',
        '0.749981000493176',
        '0.749981000493176',
        '0.749981000493176',
        '0.749965216115679',
        '0.749965216115679',
        '0.749965216084701',
        '0.749965216084701',
        '0.749963928307832',
        '0.74996240618529'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999985955',
        'topology' => 4678,
        'nodes' => {
          '2016' => {
            'bias' => '1.08526219095159'
          },
          '1863' => {
            'one' => '0.14019180487504',
            'bias' => 0,
            'two' => '-0.0534931822540688',
            '601' => '0.803235015922361'
          },
          'one' => {},
          '4639' => {
            'two' => '0.774641045499794',
            'bias' => 0
          },
          'output' => {
            '1863' => '-4.78808639422711',
            'one' => 10,
            'bias' => '0.0602818642707435',
            'two' => '9.8219746114575',
            '601' => '-0.32233411628989'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            '2016' => '0.214914958744653',
            '4639' => '1.39695481687586',
            'bias' => 0
          }
        },
        'elite' => 1,
        'id' => 13776
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999985955',
      'func' => sub { "DUMMY" }
    },
    '7066' => {
      'penalty' => '10.4491159856308',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999987931',
        '0.749999999987931',
        '0.749999999987931',
        '0.749999999987931',
        '0.749999999987931',
        '0.749999999987931',
        '0.749999999987931',
        '0.74999999998329',
        '0.749999999982619',
        '0.749999999982619',
        '0.749999999982619',
        '0.749999999982619',
        '0.749999999982619',
        '0.749999999982616',
        '0.749999999982616',
        '0.749999999982616',
        '0.749999999982616',
        '0.749999999982584',
        '0.749999999982539',
        '0.749999999982539',
        '0.74999999998245',
        '0.74999999998245',
        '0.74999999998245',
        '0.74999999998245',
        '0.749999999962938',
        '0.74999999989118',
        '0.749999999814759',
        '0.749999999814714',
        '0.749999999814714',
        '0.749999999795581',
        '0.749999999768243',
        '0.749999999768243',
        '0.749999999664489',
        '0.749999999074825',
        '0.749999999074825',
        '0.749999996753717',
        '0.749999993928199',
        '0.749999993928199',
        '0.749999993925502',
        '0.749999983878741',
        '0.749999983319361',
        '0.749999983319361',
        '0.749999983319361',
        '0.749999983211625',
        '0.749999958418355',
        '0.749999958418355',
        '0.74999995756558',
        '0.74999995756558',
        '0.74999995756558',
        '0.74999995756558',
        '0.74999995756558',
        '0.749999938973382',
        '0.749999934720259',
        '0.749999934720122',
        '0.749999934720122',
        '0.7499999342372',
        '0.749999933961354',
        '0.749999933961354',
        '0.749999928726929',
        '0.749999801666027',
        '0.749999801666027',
        '0.74999968505792',
        '0.74999968505792',
        '0.7499996829577',
        '0.7499996829577',
        '0.749999136363367',
        '0.749999136283528',
        '0.749999136280445',
        '0.749999136280445',
        '0.749999136280445',
        '0.749999136280445',
        '0.749999136203117',
        '0.74999902918355',
        '0.74999902918355',
        '0.74999902796468',
        '0.749997868091737',
        '0.749997868091737',
        '0.749997859165183',
        '0.749995818178863',
        '0.749995818178863',
        '0.749995818178863',
        '0.749995818178863',
        '0.749993990372605',
        '0.749993990372605',
        '0.749993990372605',
        '0.74999005789769',
        '0.74998986570172',
        '0.749989859523847',
        '0.749989859523847',
        '0.749988100437501',
        '0.749988100437501',
        '0.749988100437501',
        '0.749988100437501',
        '0.749987995138051',
        '0.749984293425304',
        '0.749984091090713',
        '0.749984091090713',
        '0.749984091090713',
        '0.749979557450593',
        '0.749979317720555'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999987931',
        'topology' => 7066,
        'id' => 13383,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.489842633929152',
            'two' => '-0.338881148803912',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '0.912224426156258'
          },
          '7065' => {
            '4639' => '1.03634698674571',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.49078223137679',
            '1863' => '-3.92969888276267',
            '7065' => '-0.150285383662243',
            'two' => '9.84765111730031',
            'bias' => '0.0563670347602941',
            '601' => '-0.922484595284118'
          },
          '601' => {
            'one' => '-0.854682816465318',
            '4920' => '0.887576656528612',
            'bias' => '0.0773116532203974'
          },
          '1863' => {
            'one' => '0.462085621432581',
            '4639' => '2.01454105851584',
            'two' => '-0.0816916945346888',
            'bias' => 0,
            '601' => '0.712352485199994'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999987931',
      'func' => sub { "DUMMY" }
    },
    '5295' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.500072525278543',
        '0.500072525278543',
        '0.500072525278543',
        '0.500072525278543',
        '0.500072525278543',
        '0.500072525278543',
        '0.500072525278543',
        '0.500072525278543',
        '0.500072525278543',
        '0.500072525278543',
        '0.500072525278543',
        '0.500072525278543',
        '0.500072525278543',
        '0.500072525278543',
        '0.500072525278543'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.500072525278543',
        'topology' => 5295,
        'id' => 5294,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => 1,
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => 1
          },
          'two' => {},
          'bias' => {},
          'output' => {
            '1863' => '-0.989544804182196',
            '4639' => '-0.135800061574209',
            'two' => '3.14927581474822',
            'bias' => '0.074429753902327',
            '601' => '-0.486306909555659'
          },
          '601' => {
            'one' => '-0.803701691413352',
            '4920' => '0.825066331637297',
            'bias' => '0.321085511447368'
          },
          '1863' => {
            'one' => '0.513351698528216',
            '4639' => '0.748730898051697',
            'two' => '-0.0480958728125836',
            'bias' => 0,
            '601' => '0.88316747995409'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.500072525278543',
      'func' => sub { "DUMMY" }
    },
    '14585' => {
      'penalty' => '10.39318',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        '7065',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999807',
        '0.749999999999807',
        '0.749999999999807',
        '0.749999999999807',
        '0.749999999999807',
        '0.749999999999807',
        '0.749999999999807',
        '0.749999999999807',
        '0.749999999999722',
        '0.749999999999722',
        '0.749999999999712',
        '0.749999999999672',
        '0.749999999999576',
        '0.749999999999576',
        '0.749999999999576',
        '0.749999999999576',
        '0.749999999999576',
        '0.749999999999576',
        '0.749999999999576',
        '0.74999999999929',
        '0.749999999999252',
        '0.749999999999252',
        '0.749999999999252'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999999807',
        'topology' => 14585,
        'id' => 15434,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '1.12292552506124',
            '4639' => '0.54634527586648',
            'two' => '-0.295705823056202',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.685214554747067',
            'bias' => 0,
            'two' => '0.759007085493396'
          },
          '7065' => {
            '4639' => '0.927588010717649',
            '4920' => '0.249378773388518',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.80987125873864',
            '1863' => '-3.76108941046406',
            '4920' => '0.135731022498212',
            '7065' => '-0.205307179429115',
            'two' => 10,
            'bias' => '0.051387040993176',
            '601' => '-1.96037116038338'
          },
          '6083' => {
            'bias' => '1.01168183150449'
          },
          '601' => {
            'one' => '-1.38811463267914',
            '4920' => '0.567520746736845',
            'two' => '-0.909224631966783',
            'bias' => '0.228893880794799'
          },
          '1863' => {
            'one' => '0.465202175891804',
            '4639' => '0.790652090861319',
            'two' => '-0.0193655884524174',
            'bias' => 0,
            '601' => '0.689071493181808'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999999807',
      'func' => sub { "DUMMY" }
    },
    '14877' => {
      'penalty' => '1.76840712837',
      'max' => '0.74990171015427',
      'adj-total' => '0.74990171015427',
      'ignore' => {},
      'adj-count' => 1,
      'order' => [
        'bias',
        'one',
        'two',
        '3880',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3880\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3880\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'3880\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'3880\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'3880\'}*$n->{\'nodes\'}->{\'601\'}->{\'3880\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3880\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3880\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.74990171015427',
        '0.749801486063379',
        '0.749800999055751',
        '0.749730515564014',
        '0.749730441047784',
        '0.749673088668652',
        '0.749673088668652',
        '0.749557386185012',
        '0.749557386185012',
        '0.749508390092736',
        '0.749491817852889',
        '0.749491811085458',
        '0.749491811085458',
        '0.749491807891711',
        '0.749491807891711',
        '0.749491807891711',
        '0.749491807891711',
        '0.749491807891711',
        '0.749490643432877',
        '0.749490643432877',
        '0.749452542012706',
        '0.74945203389114',
        '0.749316844906777',
        '0.749310381981884',
        '0.749310381981884'
      ],
      'count' => 3,
      'adjusted' => '0.749801178239921',
      'avg' => '0.74983488403477',
      'min' => '0.749801455886661',
      'last' => '0.749778328556243',
      'champion' => {
        'fitness' => '0.749801486063379',
        'topology' => 14877,
        'nodes' => {
          '1863' => {
            '3880' => '0.494891152383502',
            'bias' => 0,
            'two' => '-0.0689150673458593',
            '601' => '0.641431503388947'
          },
          'one' => {},
          '3880' => {
            'one' => '0.741538484145932',
            'two' => '-0.405172927236954',
            'bias' => 0
          },
          'output' => {
            '1863' => '-1.65063867361068',
            'one' => '3.45097176059475',
            'bias' => '0.0410599809633893',
            'two' => '3.14659959864522'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            '3880' => '-0.117625036142805',
            'one' => '-0.159505766280339',
            'bias' => '0.361755132061988',
            'two' => '0.642972399419093'
          }
        },
        'elite' => 0,
        'id' => 16140
      },
      'adj-avg' => '0.74990171015427',
      'total' => '2.24950465210431',
      'offspring' => 0,
      'members' => [
        16205,
        16140,
        16204
      ],
      'best' => '0.74990171015427',
      'func' => sub { "DUMMY" }
    },
    '4561' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '601',
        'one',
        '1863',
        '981',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'981\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'981\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'981\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'981\'}*$n->{\'nodes\'}->{\'output\'}->{\'981\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'}), 5 ); }',
      'history' => [
        '0.546700902685369',
        '0.546700902685369',
        '0.546700902685369',
        '0.546700902685369',
        '0.546700902685369',
        '0.546700902685369',
        '0.546700902685369',
        '0.546700902685369',
        '0.546700902685369',
        '0.546700902685369',
        '0.546700902685369',
        '0.546700902685369',
        '0.546700902685369',
        '0.546700902659209',
        '0.545692795625014'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.546700902685369',
        'topology' => 4561,
        'nodes' => {
          '981' => {
            'two' => 1,
            'bias' => 0
          },
          '1863' => {
            'one' => '0.488585053632672',
            'bias' => 0,
            'two' => '-0.0443270863407186',
            '601' => '0.88316747995409'
          },
          'one' => {},
          'output' => {
            '981' => '3.14927581474822',
            '1863' => '-0.99503610076787',
            'one' => '2.99050426066213',
            'bias' => '0.0758417247612818',
            '601' => '-0.463509631260245'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'bias' => '0.321085511447368',
            'two' => '0.825066331637297'
          }
        },
        'elite' => 1,
        'id' => 4618
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.546700902685369',
      'func' => sub { "DUMMY" }
    },
    '3990' => {
      'penalty' => '10.5191661231399',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '3880',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3880\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3880\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'3880\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'3880\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3880\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3880\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749539693729455',
        '0.749539693729455',
        '0.749539693729455',
        '0.749539693729455',
        '0.749539693729455',
        '0.749539693729455',
        '0.749539678817636',
        '0.749539678817636',
        '0.749539380588102',
        '0.749489845710576',
        '0.749489845710576',
        '0.749489845710576',
        '0.749489845710576',
        '0.749489806479115',
        '0.749489623157208',
        '0.749489623157208',
        '0.749489623157208',
        '0.749489605034',
        '0.749489605034',
        '0.749489605034',
        '0.749380957534822',
        '0.749380925892562',
        '0.749380817063273',
        '0.749380799635933',
        '0.749373446865009',
        '0.74937340362123',
        '0.74937340362123',
        '0.74937340362123',
        '0.74937340362123',
        '0.74937340362123',
        '0.749373386158575',
        '0.749373386158575',
        '0.749373353600516',
        '0.749373353600516',
        '0.749373353600516',
        '0.749373353600516',
        '0.749350643891121',
        '0.749350643891121',
        '0.74934953682461',
        '0.749349531393582',
        '0.749349531393582',
        '0.749348581186295',
        '0.749348575911454',
        '0.749348574575976',
        '0.749348574575976',
        '0.749348574575976',
        '0.749348408504853',
        '0.749348384687194',
        '0.748979084098281',
        '0.74892947566436',
        '0.74892947566436',
        '0.748852671907776',
        '0.748852671907776',
        '0.748845904418544',
        '0.74884588732852',
        '0.748379011091023',
        '0.747874713640367'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749539693729455',
        'topology' => 3990,
        'id' => 6191,
        'elite' => 1,
        'nodes' => {
          '3880' => {
            'one' => '0.766924034076025',
            'bias' => 0,
            'two' => '-0.303742818999921'
          },
          'one' => {},
          '1863' => {
            '3880' => '0.559405928523538',
            'two' => '-0.0842772567762909',
            'bias' => 0,
            '601' => '0.895423190971248'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '2.95198150409844',
            '1863' => '-1.39262073112712',
            'two' => '2.94960466177319',
            'bias' => '0.0413983562778298'
          },
          '601' => {
            'two' => '0.464500139069892',
            'bias' => '0.473225006922415'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749539693729455',
      'func' => sub { "DUMMY" }
    },
    '3360' => {
      'penalty' => '10.6812107760836',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '601',
        'one',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749218865313811',
        '0.749218865313811',
        '0.749218865313811',
        '0.749218865313811',
        '0.749218865313811',
        '0.749218865313811',
        '0.749200569499042',
        '0.749200557089149',
        '0.749200557089149',
        '0.749200337899262',
        '0.749200337899262',
        '0.749199255201146',
        '0.749199255201146',
        '0.749071719867117',
        '0.749071719867117',
        '0.749071143428498',
        '0.749071143428498',
        '0.749071143428498',
        '0.749071143428498',
        '0.749070857296409',
        '0.749070857296409',
        '0.749070857296409',
        '0.749012448668717',
        '0.748933269697578',
        '0.7489332160031',
        '0.7489332160031',
        '0.7489332160031',
        '0.748932850114137',
        '0.748932850114137',
        '0.748932850114137',
        '0.74893284078612',
        '0.748931061313778',
        '0.748922274828254',
        '0.748922132818943',
        '0.748801511504292',
        '0.748801511504292',
        '0.748801511504292',
        '0.748532603143018',
        '0.748529490476611',
        '0.748297279053367',
        '0.748289601300095',
        '0.748003952975879',
        '0.747997019494841',
        '0.747823473985813',
        '0.747762355215867',
        '0.747755234889253',
        '0.747492271541762',
        '0.747326092079255',
        '0.747326092079255',
        '0.747326092079255',
        '0.746500794583566',
        '0.746264556594527',
        '0.745784667681903',
        '0.745784667681903',
        '0.745784667681903',
        '0.745477260384122'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749218865313811',
        'topology' => 3360,
        'id' => 5763,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          '1863' => {
            'one' => '0.399354991178247',
            'two' => '-0.0973010546339119',
            'bias' => 0,
            '601' => '1.10623784800543'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.11804310562452',
            '1863' => '-1.31616898366634',
            'two' => '2.60371992371664',
            'bias' => '0.0480206227987597'
          },
          '601' => {
            'two' => '0.571017766141946',
            'bias' => '0.547487276622643'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749218865313811',
      'func' => sub { "DUMMY" }
    },
    '16214' => {
      'penalty' => 0,
      'max' => '0.653882895670818',
      'adj-total' => '0.653882895670818',
      'ignore' => {},
      'adj-count' => 1,
      'order' => [
        'bias',
        'one',
        '549',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'549\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'549\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'549\'}->{\'one\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'549\'}*$n->{\'nodes\'}->{\'4639\'}->{\'549\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'549\'}*$n->{\'nodes\'}->{\'output\'}->{\'549\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.653882895670818'
      ],
      'count' => 1,
      'avg' => '0.653882895670818',
      'min' => '0.653882895670818',
      'last' => 0,
      'adj-avg' => '0.653882895670818',
      'total' => '0.653882895670818',
      'offspring' => 0,
      'members' => [
        16213
      ],
      'best' => 0,
      'func' => sub { "DUMMY" }
    },
    '11335' => {
      'penalty' => '10.7488571587576',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999997788',
        '0.749999999997788',
        '0.749999999997788',
        '0.749999999997788',
        '0.749999999997788',
        '0.749999999997788',
        '0.749999999997788',
        '0.749999999997788',
        '0.749999999997788',
        '0.749999999997788',
        '0.749999999997065',
        '0.749999999997035',
        '0.749999999997033',
        '0.749999999997033',
        '0.74999999999703',
        '0.74999999999703',
        '0.749999999996727',
        '0.749999999996429',
        '0.749999999995651',
        '0.749999999995639',
        '0.749999999995639',
        '0.749999999995605',
        '0.749999999994174',
        '0.749999999994174',
        '0.749999999992946',
        '0.749999999992938',
        '0.749999999992933',
        '0.749999999992933',
        '0.749999999992933',
        '0.749999999992917',
        '0.749999999992917',
        '0.749999999992917',
        '0.749999999990529',
        '0.749999999990518',
        '0.749999999990518',
        '0.749999999988672',
        '0.749999999987825',
        '0.749999999922874',
        '0.749999999741663',
        '0.749999999741179',
        '0.749999999741179',
        '0.749999999741179',
        '0.749999999741179',
        '0.749999999741179',
        '0.749999999741179',
        '0.749999999740782',
        '0.749999999740782',
        '0.749999998810685',
        '0.749999998808683',
        '0.749999998808217',
        '0.749999998808217',
        '0.749999998808217',
        '0.749999998502719',
        '0.749999997782298',
        '0.74999999775875',
        '0.749999996998848',
        '0.749999996070607',
        '0.749999996070607',
        '0.74999999517538',
        '0.749999995150827',
        '0.749999995150827',
        '0.749999995150823',
        '0.749999995150817',
        '0.749999995150817',
        '0.749999994191048'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999997788',
        'topology' => 11335,
        'id' => 14184,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.709802539815915',
            'two' => '-0.290085603851077',
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.543179201684686',
            'bias' => 0,
            'two' => '1.33629418992597'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.27926309995961',
            '1863' => '-4.4453891768145',
            '4639' => '-0.26272997263231',
            '4920' => '0.168029521019525',
            'two' => '9.96419937641588',
            'bias' => '0.0424510719748963',
            '601' => '-0.98343199146053'
          },
          '601' => {
            'one' => '-1.6276059981066',
            '4920' => '0.85865655660598',
            '4639' => '-0.849153725787254',
            'two' => '-0.368594786292295',
            'bias' => '0.236897518122409'
          },
          '1863' => {
            'one' => '0.313663453149013',
            '4639' => '0.953331380030998',
            'two' => '-0.0199603532374036',
            'bias' => 0,
            '601' => '1.1310479719069'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999997788',
      'func' => sub { "DUMMY" }
    },
    '10622' => {
      'penalty' => '7.69486164805401',
      'max' => '0.749993676839256',
      'adj-total' => '0.749993676839256',
      'ignore' => {},
      'adj-count' => 1,
      'order' => [
        'bias',
        '601',
        'two',
        '1863',
        '2665',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'2665\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'2665\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'2665\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'2665\'}*$n->{\'nodes\'}->{\'output\'}->{\'2665\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749993676839256',
        '0.749993672470984',
        '0.749993672470984',
        '0.749993672470984',
        '0.749993672470984',
        '0.749993666528076',
        '0.749993666528076',
        '0.749993662341225',
        '0.749993662341225',
        '0.749993657799988',
        '0.749993657799988',
        '0.749993657799988',
        '0.749993657690939',
        '0.749993657690939',
        '0.749993657690939',
        '0.749993657690939',
        '0.749993657690939',
        '0.749993654077859',
        '0.749993652192095',
        '0.749993652192095',
        '0.749993652192095',
        '0.749993647041505',
        '0.749993647041505',
        '0.74999276187958',
        '0.749992761675609',
        '0.74998890743335',
        '0.749979428322832',
        '0.749979428322832',
        '0.749979428322832',
        '0.749979428322832',
        '0.749979428322832',
        '0.749979428322832',
        '0.749979425884063',
        '0.749979425884063',
        '0.749979425884063',
        '0.749979425884063',
        '0.749979412351514',
        '0.749979231722352',
        '0.749979231722352',
        '0.749979118746561',
        '0.749979115672376',
        '0.749978876801737',
        '0.749978876801737',
        '0.749978473252759',
        '0.749978471710057',
        '0.749978471710057',
        '0.749975217997256',
        '0.749975217997256',
        '0.749954415653363',
        '0.749916865822617',
        '0.749915509180573',
        '0.749915509180573',
        '0.749915509180573',
        '0.749915509180573',
        '0.749910418178089',
        '0.749902014058377',
        '0.74990178446484',
        '0.74990178446484',
        '0.749901782129931',
        '0.749900853456158',
        '0.749832354536362',
        '0.749720480608917',
        '0.749720480608917',
        '0.749720464838438',
        '0.749720464838438',
        '0.749680546639028',
        '0.749655929095287',
        '0.749643190747321',
        '0.749628815944969',
        '0.749628303355421',
        '0.749628285314859',
        '0.749628285314859',
        '0.7495539641354',
        '0.749553949247682',
        '0.749552710994271',
        '0.749545640135977',
        '0.749545640135977',
        '0.749545640135977',
        '0.749540103495385',
        '0.749445072303176',
        '0.749445072303176',
        '0.749445072303176',
        '0.749300368380429',
        '0.749160684234491',
        '0.748964824140809',
        '0.748964824140809',
        '0.748964824140809',
        '0.748964802606417',
        '0.748964802606417',
        '0.748964802606417',
        '0.748962633690307',
        '0.748930803936804',
        '0.748918448916259',
        '0.748918374158578',
        '0.748918374158578',
        '0.748917763667874',
        '0.748288214080036',
        '0.748288214080036',
        '0.748288214080036',
        '0.748189749490245'
      ],
      'count' => 2,
      'adjusted' => '0.593448145769277',
      'avg' => '0.74999367465512',
      'min' => '0.749993672470984',
      'last' => '0.749993672470984',
      'champion' => {
        'fitness' => '0.749993672470984',
        'topology' => 10622,
        'id' => 15956,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          '1863' => {
            'two' => '-0.165548280507315',
            'bias' => 0,
            '601' => '0.77362383391275'
          },
          '2665' => {
            '1863' => '1.22127021608853',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '4.80593526967544',
            '2665' => '-2.53522830143552',
            'two' => '4.56559334929907',
            'bias' => '0.0667863482932033',
            '601' => '0.185699645923906'
          },
          '601' => {
            'bias' => '0.716182509385334'
          }
        }
      },
      'adj-avg' => '0.749993676839256',
      'total' => '1.49998734931024',
      'offspring' => 0,
      'members' => [
        16206,
        15956
      ],
      'best' => '0.749993676839256',
      'func' => sub { "DUMMY" }
    },
    '16026' => {
      'penalty' => 0,
      'max' => '0.749999999999972',
      'adj-total' => '1.49999999999994',
      'ignore' => {},
      'adj-count' => 2,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '15005',
        '15400',
        '601',
        '7065',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'6083\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'15005\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'15005\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'15005\'}->{\'bias\'}), 5 ); $v->{\'15400\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'15400\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'15400\'}*$n->{\'nodes\'}->{\'7065\'}->{\'15400\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'1863\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'15005\'}*$n->{\'nodes\'}->{\'output\'}->{\'15005\'})+($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999972',
        '0.749999999999972',
        '0.749999999999972',
        '0.749999999999972'
      ],
      'count' => 3,
      'adjusted' => '0.749999999999972',
      'avg' => '0.749999999999954',
      'min' => '0.74999999999992',
      'last' => '0.749999999999754',
      'champion' => {
        'fitness' => '0.749999999999972',
        'topology' => 16026,
        'nodes' => {
          '15400' => {
            'bias' => '1.01522511039501'
          },
          '4639' => {
            'one' => '-0.740846112100489',
            'two' => '0.849596772657647',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.764677505696626',
            '4639' => '0.720816089471203',
            'bias' => 0,
            '6083' => 0,
            'two' => '-0.254259080461883'
          },
          '7065' => {
            '15400' => 0,
            '4639' => '0.898038384478704',
            'bias' => 0
          },
          '6083' => {
            '4639' => '0.473230261888713',
            'bias' => '0.958944098191'
          },
          'output' => {
            '15005' => '0.193298957142422',
            'one' => 10,
            '1863' => '-3.88250583485404',
            '7065' => '-0.298767761863803',
            'bias' => '0.0547087175929212',
            'two' => 10,
            '601' => '-2.39968738852891'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.5516835235558',
            '4639' => '-0.820424634347233',
            '4920' => '0.805282860821832',
            'bias' => '0.240516539098082',
            'two' => '-0.972193894956376'
          },
          '15005' => {
            '4920' => '1.00233861630301',
            'bias' => 0
          },
          'one' => {},
          '1863' => {
            'one' => '0.425883061341092',
            '4639' => '0.868812773047928',
            '7065' => '-0.114984991737771',
            'bias' => 0,
            'two' => '-0.0203029006087107',
            '601' => '0.688508801594894'
          }
        },
        'elite' => 1,
        'id' => 16025
      },
      'adj-avg' => '0.749999999999972',
      'total' => '2.24999999999986',
      'offspring' => 0,
      'members' => [
        16025,
        16207,
        16208
      ],
      'best' => 0,
      'func' => sub { "DUMMY" }
    },
    '15326' => {
      'penalty' => '2.3880348',
      'max' => '0.749999999999844',
      'adj-total' => '0.749999999999844',
      'ignore' => {},
      'adj-count' => 1,
      'order' => [
        'bias',
        '14941',
        'one',
        'two',
        '4639',
        '7065',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'14941\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'14941\'}->{\'bias\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'7065\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'7065\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'7065\'}->{\'bias\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'14941\'}*$n->{\'nodes\'}->{\'6083\'}->{\'14941\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'6083\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'14941\'}*$n->{\'nodes\'}->{\'601\'}->{\'14941\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'7065\'}*$n->{\'nodes\'}->{\'output\'}->{\'7065\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999844',
        '0.749999999999802',
        '0.749999999999802',
        '0.749999999999802',
        '0.749999999999798',
        '0.749999999999781',
        '0.749999999999781',
        '0.749999999999736',
        '0.749999999999736',
        '0.749999999998866',
        '0.749999999998866',
        '0.749999999998866',
        '0.749999999998857',
        '0.749999999998852',
        '0.749999999998852',
        '0.749999999998852',
        '0.749999999998852',
        '0.749999999998852'
      ],
      'count' => 3,
      'adjusted' => '0.749998702693039',
      'avg' => '0.749999999999816',
      'min' => '0.749999999999802',
      'last' => '0.749999999999612',
      'champion' => {
        'fitness' => '0.749999999999802',
        'topology' => 15326,
        'id' => 16145,
        'elite' => 0,
        'nodes' => {
          '14941' => {
            'bias' => '0.955223878057281'
          },
          '4920' => {
            'one' => '0.840555535739377',
            '4639' => '0.74529835189222',
            'two' => '-0.29087319444848',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.7206584096366',
            'bias' => 0,
            'two' => '1.02408240789687'
          },
          '7065' => {
            '4639' => '0.785613006326375',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => 10,
            '1863' => '-3.75906856205432',
            '4920' => '0.165370427844004',
            '7065' => '-0.271611660541111',
            'two' => '9.67725337424673',
            'bias' => '0.0547653081457571',
            '601' => '-2.00726217579481'
          },
          '6083' => {
            '14941' => '0.783155938423414',
            '7065' => '0.943865305275076',
            'bias' => 0
          },
          '601' => {
            'one' => '-1.76967774449626',
            '4920' => '0.651070519499068',
            '4639' => '-0.833259824467983',
            '14941' => '0.576135882420606',
            'two' => '-1.09890300553794',
            'bias' => '0.321445621235546'
          },
          '1863' => {
            'one' => '0.41690815356245',
            '4639' => '0.947754437402546',
            'two' => '-0.0197627171097382',
            'bias' => 0,
            '601' => '0.560003992612271'
          },
          'one' => {}
        }
      },
      'adj-avg' => '0.749999999999844',
      'total' => '2.24999999999945',
      'offspring' => 0,
      'members' => [
        16210,
        16209,
        16145
      ],
      'best' => '0.749999999999844',
      'func' => sub { "DUMMY" }
    },
    '4640' => {
      'penalty' => '10.69016884',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '601',
        'one',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749625559689959',
        '0.749625559689959',
        '0.749625559689959',
        '0.749625559689959',
        '0.749625559689959',
        '0.749625559689959',
        '0.749625559689959',
        '0.749625559689959',
        '0.749625559689959',
        '0.749612766935621',
        '0.749612528706755',
        '0.749612525394927',
        '0.749612525394927',
        '0.749612525394927',
        '0.749612525394927',
        '0.749611228802648',
        '0.749611228802648',
        '0.749606811140803',
        '0.749606189564853',
        '0.749606189564853',
        '0.749606189564853',
        '0.749606189564853',
        '0.749606189564853',
        '0.749606189564853',
        '0.749606189564853',
        '0.749606189564853',
        '0.749606189564853'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749625559689959',
        'topology' => 4640,
        'nodes' => {
          '1863' => {
            'one' => '0.513351698528216',
            'bias' => 0,
            'two' => '-0.0445944976388343',
            '601' => '0.88316747995409'
          },
          'one' => {},
          '4639' => {
            'two' => 1,
            'bias' => 0
          },
          'output' => {
            '1863' => '-0.989544804182196',
            'one' => '2.99050426066213',
            'bias' => '0.0693304135178356',
            'two' => '3.14927581474822',
            '601' => '-0.481109685378157'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            '4639' => '0.889480710866878',
            'bias' => '0.32546134351659'
          }
        },
        'elite' => 1,
        'id' => 5365
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749625559689959',
      'func' => sub { "DUMMY" }
    },
    '2591' => {
      'penalty' => '10.9289510234903',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        'one',
        'two',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.748233704482643',
        '0.748233704482643',
        '0.748233704482643',
        '0.748233704482643',
        '0.748233704482643',
        '0.748233704482643',
        '0.748233704482643',
        '0.748210962583912',
        '0.748210769755683',
        '0.748170176305648',
        '0.748170152933654',
        '0.748170152933654',
        '0.748170152933654',
        '0.748009152685285',
        '0.748009152685285',
        '0.748009152685285',
        '0.748009152685285',
        '0.748009152685285',
        '0.747679561683825',
        '0.747667588674418',
        '0.747644011933518',
        '0.747644011933518',
        '0.747465349887875',
        '0.747465349887875',
        '0.747465349887875',
        '0.747465295688106',
        '0.747465295688106',
        '0.747465295688106',
        '0.74746526498078',
        '0.74746526498078',
        '0.74746526498078',
        '0.747111380545206',
        '0.747111380545206',
        '0.747050554015427',
        '0.747020836317017',
        '0.747019433421207',
        '0.746997729756308',
        '0.74692664687978',
        '0.746157949129199',
        '0.746157949129199',
        '0.746157949129199',
        '0.746157949129199',
        '0.746157185508819',
        '0.746157185508819',
        '0.745759519163942',
        '0.745757800461049',
        '0.745500186640874',
        '0.745500186640874',
        '0.745499813230217',
        '0.745499802674041',
        '0.745483293644893',
        '0.744341654281514',
        '0.742676124695616',
        '0.742676124695616',
        '0.740068708235654',
        '0.740068708235654',
        '0.739773360718917',
        '0.737377485476006',
        '0.735166303755542',
        '0.735165449929813',
        '0.735118895390816'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.748233704482643',
        'topology' => 2591,
        'id' => 5599,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          '1863' => {
            'one' => '0.470669553448141',
            'two' => '-0.0857138276569304',
            'bias' => 0,
            '601' => '1.11206744683146'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '2.59435720621828',
            '1863' => '-1.07176765299742',
            'two' => '2.61458037002272',
            'bias' => '0.0530884366973219'
          },
          '601' => {
            'bias' => '0.371950745656799'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.748233704482643',
      'func' => sub { "DUMMY" }
    },
    '2666' => {
      'penalty' => '10.3110533111616',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        '601',
        'two',
        '1863',
        '2665',
        'one',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'2665\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'2665\'}->{\'1863\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'2665\'}->{\'bias\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'2665\'}*$n->{\'nodes\'}->{\'output\'}->{\'2665\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.748210273904553',
        '0.748210273904553',
        '0.748210273904553',
        '0.748210273904553',
        '0.748210273904553',
        '0.748210048940776',
        '0.748210048940776',
        '0.748210048940776',
        '0.748210048940776',
        '0.748210048940776',
        '0.748207111321244',
        '0.748193480796501',
        '0.748193480796501',
        '0.748193480796501',
        '0.74819322287499',
        '0.748193097387783',
        '0.748191931865414',
        '0.748191878487124',
        '0.748171502608636',
        '0.747247399904119',
        '0.747247399904119',
        '0.747035640804509',
        '0.7470003745003',
        '0.74661917665592',
        '0.745234947324858',
        '0.745234947324858',
        '0.744726042535449',
        '0.743580263130282',
        '0.743580263130282',
        '0.743580263130282',
        '0.743177451826161',
        '0.743177451826161',
        '0.74194101606629',
        '0.74194101606629',
        '0.740261334228563',
        '0.739249587147229',
        '0.739249587147229',
        '0.739249587147229',
        '0.739249587147229',
        '0.739249587147229',
        '0.738703102841356',
        '0.737769308280028',
        '0.737660755579122',
        '0.737660745704984',
        '0.735115513163516',
        '0.735115513163516'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.748210273904553',
        'topology' => 2666,
        'id' => 4954,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          '1863' => {
            'two' => '-0.0740916282390711',
            'bias' => 0,
            '601' => '0.96734286702404'
          },
          '2665' => {
            '1863' => '0.886240876089162',
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '2.32319860087957',
            '2665' => '-1.13704009845522',
            'two' => '2.70153469529266',
            'bias' => '0.0708072699964418'
          },
          '601' => {
            'bias' => '0.604927170186186'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.748210273904553',
      'func' => sub { "DUMMY" }
    },
    '497' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'one' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'output\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 497,
        'id' => 1238,
        'elite' => 1,
        'nodes' => {
          'one' => {},
          'two' => {},
          'bias' => {},
          'output' => {
            'bias' => '-0.31616644847075',
            'two' => '0.0377780014348634'
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '13726' => {
      'penalty' => '10.525004978',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '13725',
        'one',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'13725\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'13725\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'13725\'}->{\'two\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'13725\'}*$n->{\'nodes\'}->{\'4639\'}->{\'13725\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'1863\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999998702',
        '0.749999999998702',
        '0.749999999998702',
        '0.749999999998702',
        '0.749999999998702',
        '0.749999999998702',
        '0.749999999998702',
        '0.749999999998696',
        '0.749999999998696',
        '0.749999999998468',
        '0.749999999998468',
        '0.749999999998468',
        '0.749999999998468',
        '0.749999999998468',
        '0.749999999998467',
        '0.749999999998454',
        '0.749999999998454',
        '0.749999999998454',
        '0.749999999998454',
        '0.749999999998454',
        '0.749999999998454',
        '0.749999999998448',
        '0.749999999998441',
        '0.749999999998441',
        '0.749999999998441',
        '0.749999999998441',
        '0.749999999998431',
        '0.749999999998431',
        '0.749999999998431'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999998702',
        'topology' => 13726,
        'id' => 14693,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '0.923136842358709',
            '4639' => '0.613986076158938',
            'two' => '-0.283992226257545',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.626621951698338',
            '13725' => '0.730648595505865',
            'bias' => 0
          },
          '13725' => {
            'two' => 1,
            'bias' => 0
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.85558505928864',
            '1863' => '-3.52791857611295',
            '4639' => '-0.199695486355393',
            '4920' => '0.188133462100286',
            'two' => 10,
            'bias' => '0.0519777401975323',
            '601' => '-1.8807151551763'
          },
          '6083' => {
            'bias' => 1
          },
          '601' => {
            'one' => '-1.4093963318973',
            '4920' => '0.808172931852064',
            'two' => '-0.828653377196644',
            'bias' => '0.256852026758671'
          },
          '1863' => {
            'one' => '0.444393822451282',
            '4639' => '0.935831987339043',
            'two' => '-0.0205432146563809',
            'bias' => 0,
            '6083' => '-0.222490965157467',
            '601' => '0.599671455944881'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999998702',
      'func' => sub { "DUMMY" }
    },
    '13389' => {
      'penalty' => '10.257248737481',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999998811',
        '0.749999999998811',
        '0.749999999998811',
        '0.749999999998811',
        '0.749999999998811',
        '0.749999999998811',
        '0.749999999998811',
        '0.749999999998796',
        '0.749999999998377',
        '0.749999999998319',
        '0.749999999998319',
        '0.749999999997957',
        '0.749999999997957',
        '0.749999999996997',
        '0.749999999996997',
        '0.749999999996997',
        '0.749999999996997',
        '0.749999999996885',
        '0.749999999996885',
        '0.749999999996885',
        '0.749999999996885',
        '0.749999999996885',
        '0.749999999996885',
        '0.749999999996885',
        '0.749999999996885',
        '0.749999999996885',
        '0.749999999996885',
        '0.749999999996885',
        '0.749999999996824',
        '0.749999999996823',
        '0.749999999996823',
        '0.749999999996823',
        '0.749999999996823',
        '0.749999999996823',
        '0.749999999996654'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999998811',
        'topology' => 13389,
        'nodes' => {
          '4639' => {
            'one' => '-0.666521696081104',
            'two' => '0.913981382245595',
            'bias' => 0
          },
          '4920' => {
            'one' => '0.955894619525918',
            '4639' => '0.740501581475188',
            'bias' => 0,
            'two' => '-0.2738432436208'
          },
          'output' => {
            '1863' => '-3.96301787020719',
            'one' => 10,
            '4920' => '0.15702695994088',
            '4639' => '-0.226041303834584',
            'bias' => '0.0366312885686327',
            'two' => 10,
            '601' => '-1.47192936243319'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-1.43583300808831',
            '4920' => '0.754104470698366',
            'bias' => '0.228787338285082',
            'two' => '-0.966815957793215'
          },
          '1863' => {
            'one' => '0.376468339062185',
            '4639' => '0.971656515902561',
            '4920' => '0.972052490344174',
            'bias' => 0,
            'two' => '-0.0230102312005166',
            '601' => '0.653189098044895'
          },
          'one' => {}
        },
        'elite' => 1,
        'id' => 14812
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999998811',
      'func' => sub { "DUMMY" }
    },
    '5371' => {
      'penalty' => '10.92947',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749765815059903',
        '0.749765815059903',
        '0.749765815059903',
        '0.749765815059903',
        '0.749765815059903',
        '0.749765815059903',
        '0.749763117374702',
        '0.749763117374702',
        '0.749763117374702',
        '0.749763117374702',
        '0.749763117374702',
        '0.749763091214004',
        '0.749763091214004',
        '0.749763091214004',
        '0.749763091214004',
        '0.749762630207075',
        '0.749762630207075',
        '0.749762630207075',
        '0.749762630207075',
        '0.749762630207075',
        '0.749762204439269',
        '0.749762204439269',
        '0.749761477366673',
        '0.749761472175914'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749765815059903',
        'topology' => 5371,
        'nodes' => {
          '4639' => {
            'two' => '0.97955920128946',
            'bias' => 0
          },
          '4920' => {
            '4639' => '0.957034273607727',
            'bias' => 0
          },
          'output' => {
            '1863' => '-0.989544804182196',
            'one' => '3.20523224797128',
            '4639' => '-0.135800061574209',
            'bias' => '0.068571056900321',
            'two' => '3.14927581474822',
            '601' => '-0.487140941288331'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.803701691413352',
            '4920' => '0.803646918676541',
            'two' => '-0.862393121837776',
            'bias' => '0.321085511447368'
          },
          '1863' => {
            'one' => '0.513351698528216',
            '4920' => '-0.243994943510252',
            '4639' => '0.748730898051697',
            'bias' => 0,
            'two' => '-0.0495088379816815',
            '601' => '0.922448773980746'
          },
          'one' => {}
        },
        'elite' => 0,
        'id' => 6279
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749765815059903',
      'func' => sub { "DUMMY" }
    },
    '5775' => {
      'penalty' => '10.7540703777253',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749814189798402',
        '0.749814189798402',
        '0.749814189798402',
        '0.749814189798402',
        '0.749814189798402',
        '0.749814189798402',
        '0.749814170991448',
        '0.749813835919387',
        '0.749813835057604',
        '0.749813835057604',
        '0.749813835057604',
        '0.749813835057604',
        '0.749813798798848',
        '0.749813798798848',
        '0.749813783538663',
        '0.749812196453578',
        '0.749812196453578',
        '0.749802685041601',
        '0.749802685041601',
        '0.749802685041601',
        '0.749802685041601',
        '0.749802685041601',
        '0.749802685041601',
        '0.749802685041601',
        '0.749802684894514',
        '0.749802684894514',
        '0.749802663570435',
        '0.74980264984384',
        '0.74980264984384',
        '0.749802537483959',
        '0.749802537483959',
        '0.749802519513505',
        '0.749802477266945',
        '0.74980247693831',
        '0.74980247693831',
        '0.74980247693831',
        '0.74980247693831',
        '0.74980247693831',
        '0.749802452908792',
        '0.749802452853904',
        '0.749802452853904',
        '0.749802452853904',
        '0.749802452853904',
        '0.749802426233794',
        '0.749802426233794',
        '0.749802426233794',
        '0.749802426233794',
        '0.749802426233794',
        '0.749802426233794',
        '0.749802426233794'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749814189798402',
        'topology' => 5775,
        'nodes' => {
          '4920' => {
            '4639' => '1.14644485855717',
            'bias' => 0
          },
          '4639' => {
            'one' => '0.811988486269054',
            'two' => '0.921112366896459',
            'bias' => 0
          },
          'output' => {
            '1863' => '-1.11823547443776',
            'one' => '4.25433902437785',
            'bias' => '0.074429753902327',
            'two' => '3.15939663495568',
            '601' => '-0.526647115749034'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '-0.820561918025545',
            '4920' => '0.948258485748543',
            'bias' => '0.321085511447368'
          },
          'one' => {},
          '1863' => {
            'one' => '0.395913356081658',
            'bias' => 0,
            'two' => '-0.0488988040863143',
            '601' => '0.88316747995409'
          }
        },
        'elite' => 1,
        'id' => 7576
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749814189798402',
      'func' => sub { "DUMMY" }
    },
    '12370' => {
      'penalty' => '2.32430157093293',
      'max' => '0.749149631621584',
      'adj-total' => '0.749149631621584',
      'ignore' => {},
      'adj-count' => 1,
      'order' => [
        'bias',
        '3130',
        'one',
        '549',
        'two',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3130\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3130\'}->{\'bias\'}), 5 ); $v->{\'549\'} = sigmoid( ($v->{\'3130\'}*$n->{\'nodes\'}->{\'549\'}->{\'3130\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'549\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'549\'}->{\'one\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'549\'}*$n->{\'nodes\'}->{\'output\'}->{\'549\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749149631621584',
        '0.748672296730443',
        '0.747923730520459',
        '0.747918276643383',
        '0.747855657318848',
        '0.747855657318848',
        '0.747855657318848',
        '0.747834526471799',
        '0.747585018087332',
        '0.747048198590096',
        '0.746025994790022',
        '0.746014212858393',
        '0.746002902845582',
        '0.745662250124692',
        '0.745657251045694',
        '0.745657251045694',
        '0.7456255744665',
        '0.745599586388016',
        '0.745491828623347',
        '0.745491828623347',
        '0.745021321590866',
        '0.745017908245221',
        '0.744645700151326',
        '0.743946968172434',
        '0.742305525090372',
        '0.742241320337066',
        '0.742241320337066',
        '0.742241320337066',
        '0.742241320337066',
        '0.742241320337066',
        '0.7406142137046',
        '0.740602834974688',
        '0.740582813756786',
        '0.740582813756786',
        '0.740580552057654',
        '0.740579601441979',
        '0.740579601441979',
        '0.74057849248327',
        '0.74057849248327',
        '0.740364512761559',
        '0.740364512761559',
        '0.740364512761559',
        '0.740364512761559',
        '0.740364437240332',
        '0.740364437240332',
        '0.740364437240332',
        '0.73847021436573',
        '0.738310465158302',
        '0.738310465158302',
        '0.738310465158302',
        '0.73826818291894',
        '0.73826818291894',
        '0.738197159185373',
        '0.738197159185373',
        '0.738197159185373',
        '0.738197159185373',
        '0.73641222992887',
        '0.73641222992887',
        '0.735280595933507',
        '0.735280595933507',
        '0.733634033339717',
        '0.729861131320946',
        '0.729861131320946',
        '0.727125259613498',
        '0.727125259613498',
        '0.725619714983804',
        '0.725617594618567',
        '0.723714225230476',
        '0.723712221542715',
        '0.721795878437105',
        '0.718690408543942',
        '0.714163832058805',
        '0.714055045399284',
        '0.708461167474792',
        '0.708461167474792',
        '0.707501388176912',
        '0.707158841786269'
      ],
      'count' => 3,
      'adjusted' => '0.748671308651995',
      'avg' => '0.748831408360823',
      'min' => '0.748672296730443',
      'last' => '0.748175325072923',
      'champion' => {
        'fitness' => '0.748672296730443',
        'topology' => 12370,
        'nodes' => {
          'one' => {},
          '549' => {
            'one' => '-1.16722106754512',
            'bias' => 0,
            '3130' => '0.139687066047136'
          },
          '3130' => {
            'bias' => '0.959639515084801'
          },
          'output' => {
            '549' => '5.22729849337435',
            'two' => '-2.38069129120954',
            'bias' => '1.11934881507844'
          },
          'bias' => {},
          'two' => {}
        },
        'elite' => 0,
        'id' => 16148
      },
      'adj-avg' => '0.749149631621584',
      'total' => '2.24649422508247',
      'offspring' => 0,
      'members' => [
        16212,
        16148,
        16211
      ],
      'best' => '0.749149631621584',
      'func' => sub { "DUMMY" }
    },
    '6124' => {
      'penalty' => '10.2680250515113',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'two',
        '4639',
        '4920',
        'one',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'601\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749873720501748',
        '0.749873720501748',
        '0.749873720501748',
        '0.749873720501748',
        '0.749873720501748',
        '0.749873583692304',
        '0.749873583692304',
        '0.749873583692304',
        '0.749873046140847',
        '0.749873031322002',
        '0.749866232201795',
        '0.749866090582891',
        '0.749866090582891',
        '0.749866090582891',
        '0.749860065463098',
        '0.749860065463098',
        '0.749854749258987',
        '0.749854749258987',
        '0.749854749258987',
        '0.749854749258987',
        '0.749854749258987',
        '0.749849816739651',
        '0.749848736015989',
        '0.749848736015989',
        '0.749848736015989',
        '0.749847613038862',
        '0.749842861300174',
        '0.749842843643206',
        '0.749842843643206',
        '0.749842842930704',
        '0.749842842930704',
        '0.749842300761146',
        '0.749842300761146',
        '0.749842300761146',
        '0.749842293048811',
        '0.749842293048811',
        '0.749842293048811',
        '0.749842284824878',
        '0.749834253823321',
        '0.749834253823321'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749873720501748',
        'topology' => 6124,
        'id' => 7501,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '0.911972845649077',
            'two' => '-0.289715992135936',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '0.977658933967196'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '3.20523224797128',
            '1863' => '-1.12160114674337',
            '4639' => '-0.146204524552916',
            'two' => '3.57951348142397',
            'bias' => '0.0707777632750202',
            '601' => '-0.527525615967228'
          },
          '601' => {
            'one' => '-0.936425107586442',
            '4639' => '0.205796607953613',
            '4920' => '0.670288212807878',
            'bias' => '0.308685609491241'
          },
          '1863' => {
            'one' => '0.447648975532499',
            '4639' => '0.828178344781033',
            'two' => '-0.0485027036571635',
            'bias' => 0,
            '601' => '0.937151914680315'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749873720501748',
      'func' => sub { "DUMMY" }
    },
    '832' => {
      'penalty' => 10,
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {
        'two' => 1
      },
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        '601',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'601\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'}), 5 ); }',
      'history' => [
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5',
        '0.5'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.5',
        'topology' => 832,
        'nodes' => {
          'one' => {},
          'output' => {
            'bias' => 0,
            '601' => '-0.390562420329345'
          },
          'bias' => {},
          'two' => {},
          '601' => {
            'one' => '0.610887394894519',
            'bias' => '1.04155149256474'
          }
        },
        'elite' => 1,
        'id' => 1169
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.5',
      'func' => sub { "DUMMY" }
    },
    '7026' => {
      'penalty' => '10.3728027029125',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        '3880',
        'two',
        '4639',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'3880\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'3880\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'3880\'}->{\'one\'}), 5 ); $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'3880\'}*$n->{\'nodes\'}->{\'1863\'}->{\'3880\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749989270168002',
        '0.749989270168002',
        '0.749989270168002',
        '0.749989270168002',
        '0.749989270125838',
        '0.749989270125838',
        '0.749989270125838',
        '0.749989270125838',
        '0.749989270125838',
        '0.749989270125838',
        '0.749989269807107',
        '0.749984784275478',
        '0.749977466065978',
        '0.749977466065978',
        '0.749977445129789',
        '0.749977445129344',
        '0.749977445129344',
        '0.749974483323038',
        '0.749974483323038',
        '0.749974483323038',
        '0.749968221793139',
        '0.749968221793139',
        '0.749968221793139',
        '0.749966278165246',
        '0.749963589474151',
        '0.749963589474151',
        '0.749963589474151',
        '0.749963589474151',
        '0.749963281327769',
        '0.749962682851611',
        '0.749958511413464',
        '0.749952581139427',
        '0.749952581139427',
        '0.749952581139427',
        '0.749952581139427',
        '0.749952581139427',
        '0.749940402551226',
        '0.749938809356446',
        '0.749938809356446',
        '0.749938806053971',
        '0.749938702218987',
        '0.749938702198852',
        '0.749937755064682',
        '0.749937755064682',
        '0.749937755064682',
        '0.749937755064682',
        '0.749937755064682',
        '0.749931381411774'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749989270168002',
        'topology' => 7026,
        'id' => 9292,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            '4639' => '1.11877258696903',
            'two' => '-0.260792906843633',
            'bias' => 0
          },
          '4639' => {
            'bias' => 0,
            'two' => '1.02877263322459'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '4.36707495591271',
            '1863' => '-1.44175686524837',
            '4639' => '-0.138885834919773',
            'two' => '4.6193138377114',
            'bias' => '0.0598239717340278',
            '601' => '-0.586405930220287'
          },
          '601' => {
            'one' => '-1.04380510402748',
            '4920' => '0.763600756599903',
            'two' => '-0.457022088812069',
            'bias' => '0.246461080367532'
          },
          '1863' => {
            '3880' => '0.385563848867331',
            '4639' => '0.810282296485643',
            'two' => '-0.0580260519034752',
            'bias' => 0,
            '601' => '1.19355344821832'
          },
          'one' => {},
          '3880' => {
            'one' => '0.845884099661267',
            'bias' => 0
          }
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749989270168002',
      'func' => sub { "DUMMY" }
    },
    '705' => {
      'penalty' => '10.1455112886221',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'output\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.74999999998708',
        '0.74999999998708',
        '0.74999999998708',
        '0.74999999998708',
        '0.749999999982977',
        '0.749999999982977',
        '0.749999999970503',
        '0.749999999970503',
        '0.749999999970503',
        '0.749999999970503',
        '0.749999999970503',
        '0.749999999907767',
        '0.749999999907767',
        '0.749999999907767',
        '0.749999999907767',
        '0.749999999904629',
        '0.749999999842946',
        '0.749999999842946',
        '0.749999999842946',
        '0.749999999669524',
        '0.749999999669524',
        '0.749999999394956',
        '0.749999999394956',
        '0.749999999394956',
        '0.749999999393021',
        '0.749999998373614',
        '0.749999998361075',
        '0.749999997955549',
        '0.749999997955549',
        '0.749999997927956',
        '0.7499999970371',
        '0.749999996478303',
        '0.749999993248589',
        '0.749999991041886',
        '0.749999989990649',
        '0.749999968585834',
        '0.749999876297152',
        '0.749999699485436',
        '0.74999966590138',
        '0.74999966587829',
        '0.749999416698044',
        '0.749999416698044',
        '0.749998422502641',
        '0.749998133968231',
        '0.749998133518353',
        '0.749998133185453',
        '0.749998129172881',
        '0.749998129172881',
        '0.749998129172881',
        '0.749998129172881',
        '0.749998122523963',
        '0.749998122523963',
        '0.749998122523963',
        '0.749996849237917',
        '0.749996849237917',
        '0.749995724948738',
        '0.749995720874359',
        '0.749993018875631',
        '0.749993018875631',
        '0.749989677383197',
        '0.749987997663598',
        '0.749987991789134',
        '0.749987991749735',
        '0.749987991749735',
        '0.749987961029832',
        '0.749982582485971',
        '0.749968563120396',
        '0.74996849078946',
        '0.74996849078946',
        '0.74996849078946',
        '0.74996849078946',
        '0.74996849078946',
        '0.74996849078946',
        '0.749968336634739',
        '0.749939114459079',
        '0.749938863474566',
        '0.749938863474566',
        '0.749938863474566',
        '0.749938863474566',
        '0.749938863474566',
        '0.74993182914621',
        '0.74993182914621',
        '0.749882919093028',
        '0.749882919093028',
        '0.749882919093028',
        '0.74977614447128',
        '0.749776115534636',
        '0.749697281243085',
        '0.749523286054483',
        '0.74952305232722',
        '0.74952305232722',
        '0.749522964951117',
        '0.749522267668961',
        '0.749522267668961',
        '0.749521878808269',
        '0.749521878808269',
        '0.74923207385866',
        '0.749231318611122',
        '0.749229604835576',
        '0.749229604835576'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.74999999998708',
        'topology' => 705,
        'nodes' => {
          'one' => {},
          'output' => {
            'one' => 10,
            'bias' => '-4.77569127840195',
            'two' => 10
          },
          'bias' => {},
          'two' => {}
        },
        'elite' => 0,
        'id' => 11555
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.74999999998708',
      'func' => sub { "DUMMY" }
    },
    '13354' => {
      'penalty' => '10.04676620827',
      'max' => '-1e+99',
      'adj-total' => 0,
      'ignore' => {},
      'adj-count' => 0,
      'order' => [
        'bias',
        'one',
        'two',
        '4639',
        '6083',
        '4920',
        '601',
        '1863',
        'output'
      ],
      'code' => 'sub { my ( $n, $v ) = @_; $v->{\'4639\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'4639\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4639\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4639\'}->{\'two\'}), 5 ); $v->{\'6083\'} = sigmoid( ($v->{\'bias\'}*$n->{\'nodes\'}->{\'6083\'}->{\'bias\'}), 5 ); $v->{\'4920\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'4920\'}->{\'4639\'})+($v->{\'6083\'}*$n->{\'nodes\'}->{\'4920\'}->{\'6083\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'4920\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'4920\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'4920\'}->{\'two\'}), 5 ); $v->{\'601\'} = sigmoid( ($v->{\'4920\'}*$n->{\'nodes\'}->{\'601\'}->{\'4920\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'601\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'601\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'601\'}->{\'two\'}), 5 ); $v->{\'1863\'} = sigmoid( ($v->{\'4639\'}*$n->{\'nodes\'}->{\'1863\'}->{\'4639\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'1863\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'1863\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'1863\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'1863\'}->{\'two\'}), 5 ); $v->{\'output\'} = sigmoid( ($v->{\'1863\'}*$n->{\'nodes\'}->{\'output\'}->{\'1863\'})+($v->{\'4639\'}*$n->{\'nodes\'}->{\'output\'}->{\'4639\'})+($v->{\'4920\'}*$n->{\'nodes\'}->{\'output\'}->{\'4920\'})+($v->{\'601\'}*$n->{\'nodes\'}->{\'output\'}->{\'601\'})+($v->{\'bias\'}*$n->{\'nodes\'}->{\'output\'}->{\'bias\'})+($v->{\'one\'}*$n->{\'nodes\'}->{\'output\'}->{\'one\'})+($v->{\'two\'}*$n->{\'nodes\'}->{\'output\'}->{\'two\'}), 5 ); }',
      'history' => [
        '0.749999999999133',
        '0.749999999999133',
        '0.749999999999133',
        '0.749999999999133',
        '0.749999999999133',
        '0.749999999999133',
        '0.749999999999099',
        '0.749999999999099',
        '0.749999999999099',
        '0.749999999999099',
        '0.749999999998821',
        '0.749999999998821',
        '0.749999999998821',
        '0.749999999998821',
        '0.749999999998821',
        '0.74999999999833',
        '0.749999999998324',
        '0.749999999998324',
        '0.749999999998322',
        '0.749999999998322',
        '0.749999999998322',
        '0.74999999999813',
        '0.749999999997923',
        '0.749999999997916',
        '0.749999999997916',
        '0.749999999997916',
        '0.749999999997916',
        '0.749999999997793',
        '0.749999999997793',
        '0.749999999996987',
        '0.749999999995',
        '0.749999999995',
        '0.749999999995'
      ],
      'count' => 0,
      'adjusted' => 0,
      'avg' => 0,
      'min' => '1e+99',
      'last' => 0,
      'champion' => {
        'fitness' => '0.749999999999133',
        'topology' => 13354,
        'id' => 14503,
        'elite' => 1,
        'nodes' => {
          '4920' => {
            'one' => '0.970834714833647',
            '4639' => '0.679972478874642',
            'two' => '-0.266531617884673',
            '6083' => 0,
            'bias' => 0
          },
          '4639' => {
            'one' => '-0.712169200326607',
            'bias' => 0,
            'two' => '0.924984555287825'
          },
          'two' => {},
          'bias' => {},
          'output' => {
            'one' => '9.09607621390779',
            '1863' => '-3.68486456385691',
            '4639' => '-0.22371578464281',
            '4920' => '0.174490973177659',
            'two' => 10,
            'bias' => '0.0515912294955894',
            '601' => '-1.80498600987678'
          },
          '6083' => {
            'bias' => '1.04462325457099'
          },
          '601' => {
            'one' => '-1.50986179336065',
            '4920' => '0.64709786901821',
            'two' => '-0.894252009528762',
            'bias' => '0.258456158786827'
          },
          '1863' => {
            'one' => '0.45457465638839',
            '4639' => '0.905644144003548',
            'two' => '-0.0204152672076425',
            'bias' => 0,
            '601' => '0.650026667208747'
          },
          'one' => {}
        }
      },
      'adj-avg' => 0,
      'total' => 0,
      'offspring' => 0,
      'members' => [],
      'best' => '0.749999999999133',
      'func' => sub { "DUMMY" }
    }
  },
  'champions' => [
    15664,
    15925,
    15956,
    15967,
    15985,
    16013,
    16025,
    16027,
    16054,
    16061,
    16064,
    16069,
    16090,
    16097,
    16102,
    16103,
    16105,
    16107,
    16117,
    16120,
    16122,
    16128,
    16130,
    16133,
    16135,
    16139,
    16140,
    16148,
    16149,
    16151,
    16152,
    16154,
    16156,
    16157,
    16158,
    16160,
    16161,
    16162,
    16164,
    16166,
    16167,
    16169,
    16171,
    16173,
    16174,
    16175,
    16177,
    16179,
    16181,
    16183,
    16185,
    16187,
    16189,
    16192,
    16193,
    16195,
    16197,
    16199,
    16201,
    16202,
    16205,
    16206,
    16207,
    16209,
    16210,
    16212,
    16213
  ],
  'settings' => {
    'population' => 100,
    'experiment' => 'xor',
    'penalty' => 10,
    'gain' => 5,
    'activation' => 'perl',
    'topology-limit' => 50,
    'retest-elites' => 0,
    'save-epochs' => 0,
    'eval-func' => sub { "DUMMY" },
    'debug' => 0,
    'limit' => 10,
    'max-weight' => 10
  },
  'node-lookup' => {
    '1863:bias' => 4599,
    '601:bias' => 2016,
    'output:601' => 1863,
    '4920:bias' => 6083,
    '1863:two' => 3618,
    '549:bias' => 3130,
    '4639:two' => 13725,
    '981:two' => 4523,
    'output:bias' => 601,
    '1863:one' => 3880,
    '1863:601' => 3756,
    '4920:two' => 6948,
    'output:two' => 981,
    'output:4639' => 7065,
    '7065:4639' => 7106,
    '7065:bias' => 15400,
    'output:1863' => 2665,
    '601:4639' => 4920,
    '13725:two' => 13976,
    '601:two' => 4639,
    '601:4920' => 13535,
    '4920:4639' => 6794,
    'output:one' => 549,
    '601:one' => 5892,
    '6083:bias' => 14941,
    '1863:4639' => 5610,
    '14941:bias' => 15714,
    'output:4920' => 15005,
    '7106:bias' => 7268
  },
  'save' => {
    'max-fitness' => '0.749999999999973',
    'gen-min' => '0.500000003988709',
    'champion' => {
      'fitness' => '0.749999999999973',
      'topology' => 15776,
      'id' => 16161,
      'elite' => 0,
      'nodes' => {
        '14941' => {
          'bias' => '0.827849284299737'
        },
        '4920' => {
          'one' => '0.814314855490864',
          '4639' => '0.766397502379163',
          'two' => '-0.254630543343811',
          '6083' => 0,
          'bias' => 0
        },
        '4639' => {
          'one' => '-0.786572957152946',
          'bias' => 0,
          'two' => '0.880934693005357'
        },
        '7065' => {
          '14941' => '-0.0624284556390736',
          '4639' => '0.796833279917739',
          'bias' => 0,
          '601' => '0.541724466630369'
        },
        'two' => {},
        'bias' => {},
        'output' => {
          'one' => 10,
          '1863' => '-3.84563831680425',
          '4920' => '0.152471333958676',
          '7065' => '-0.213858023734793',
          'two' => 10,
          'bias' => '0.0520650055457408',
          '601' => '-2.4282240918725'
        },
        '6083' => {
          '14941' => '0.833834893500647',
          'bias' => 0
        },
        '601' => {
          'one' => '-1.75796436867988',
          '4920' => '0.660054318274124',
          '4639' => '-0.71170264364929',
          'two' => '-1.03123034479796',
          'bias' => '0.305029374076448'
        },
        '1863' => {
          'one' => '0.40671024734228',
          '4639' => '0.893570868447393',
          'two' => '-0.0171564060099979',
          'bias' => 0,
          '601' => '0.511101247527743'
        },
        'one' => {}
      }
    },
    'min-weight' => '-4.38474545662926',
    'generation' => 312,
    'max-fitness-generation' => 312,
    'gen-max' => '0.749999999999973',
    'max-weight' => 10,
    'unique-id' => 16214,
    'gen-avg' => '0.739008443360742'
  },
  'CLASSNAME' => 'neat',
  'nodes' => {
    '2016' => {
      'formed' => '601:bias',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 2016
    },
    '15400' => {
      'formed' => '7065:bias',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 15400
    },
    '549' => {
      'formed' => 'output:one',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 549
    },
    '7106' => {
      'formed' => '7065:4639',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 7106
    },
    '4639' => {
      'formed' => '601:two',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 4639
    },
    '3130' => {
      'formed' => '549:bias',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 3130
    },
    'two' => {
      'type' => 'input',
      'id' => 'two'
    },
    '4523' => {
      'formed' => '981:two',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 4523
    },
    '3756' => {
      'formed' => '1863:601',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 3756
    },
    '13535' => {
      'formed' => '601:4920',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 13535
    },
    '5610' => {
      'formed' => '1863:4639',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 5610
    },
    '2665' => {
      'formed' => 'output:1863',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 2665
    },
    'bias' => {
      'type' => 'input',
      'id' => 'bias'
    },
    'output' => {
      'function' => 'sigmoid',
      'gain' => '5',
      'type' => 'output',
      'id' => 'output'
    },
    '601' => {
      'formed' => 'output:bias',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 601
    },
    '15005' => {
      'formed' => 'output:4920',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 15005
    },
    '7268' => {
      'formed' => '7106:bias',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 7268
    },
    'one' => {
      'type' => 'input',
      'id' => 'one'
    },
    '3880' => {
      'formed' => '1863:one',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 3880
    },
    '981' => {
      'formed' => 'output:two',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 981
    },
    '4599' => {
      'formed' => '1863:bias',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 4599
    },
    '4920' => {
      'formed' => '601:4639',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 4920
    },
    '7065' => {
      'formed' => 'output:4639',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 7065
    },
    '13725' => {
      'formed' => '4639:two',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 13725
    },
    '1863' => {
      'formed' => 'output:601',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 1863
    },
    '3618' => {
      'formed' => '1863:two',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 3618
    },
    '6948' => {
      'formed' => '4920:two',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 6948
    },
    '13976' => {
      'formed' => '13725:two',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 13976
    },
    '14941' => {
      'formed' => '6083:bias',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 14941
    },
    '6083' => {
      'formed' => '4920:bias',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 6083
    },
    '6794' => {
      'formed' => '4920:4639',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 6794
    },
    '15714' => {
      'formed' => '14941:bias',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 15714
    },
    '5892' => {
      'formed' => '601:one',
      'function' => 'sigmoid',
      'gain' => 5,
      'type' => 'hidden',
      'id' => 5892
    }
  },
  'topology-lookup' => {
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,601:4920,601:bias,601:one,output:1863,output:601,output:bias,output:one,output:two' => 4921,
    'N=1863,4639,4920,601,6083,bias,one,output,two;C=1863:4639,1863:601,1863:6083,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,6083:one,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 14077,
    'N=3130,549,601,bias,one,output,two;C=3130:bias,549:3130,549:bias,549:one,601:bias,output:549,output:601,output:bias' => 3131,
    'N=1863,4639,4920,601,7065,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,7065:4639,7065:bias,output:1863,output:601,output:7065,output:bias,output:one,output:two' => 7066,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,601:4639,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 5489,
    'N=bias,one,output,two;C=output:bias,output:one' => 262,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 5528,
    'N=1863,4639,4920,601,6948,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6948,4920:bias,601:4920,601:bias,601:one,6948:bias,6948:two,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 8712,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:4920,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 5371,
    'N=13725,1863,4639,4920,601,6083,bias,one,output,two;C=13725:bias,13725:two,1863:4639,1863:601,1863:6083,1863:bias,1863:one,1863:two,4639:13725,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 13789,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 6873,
    'N=1863,4639,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,601:4639,601:bias,601:one,output:1863,output:601,output:bias,output:one,output:two' => 5694,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,601:bias,output:1863,output:bias,output:one' => 11987,
    'N=1863,2665,4639,4920,601,bias,one,output,two;C=1863:4639,1863:4920,1863:601,1863:bias,1863:one,1863:two,2665:1863,2665:bias,4639:bias,4639:two,4920:4639,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,output:2665,output:4639,output:601,output:bias,output:one,output:two' => 6558,
    'N=601,bias,one,output,two;C=601:bias,601:one,601:two,output:601,output:bias,output:one,output:two' => 12927,
    'N=bias,one,output,two;C=output:one,output:two' => 347,
    'N=1863,2016,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,2016:bias,2016:two,4639:bias,4639:two,4920:4639,4920:bias,601:2016,601:4639,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 15653,
    'N=601,bias,one,output,two;C=601:bias,601:one,output:601,output:bias,output:two' => 13461,
    'N=1863,549,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,549:bias,549:one,601:bias,output:1863,output:549,output:bias,output:two' => 3243,
    'N=1863,3880,601,bias,one,output,two;C=1863:3880,1863:601,1863:bias,1863:two,3880:bias,3880:one,3880:two,601:3880,601:bias,601:one,601:two,output:1863,output:bias,output:one,output:two' => 14877,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,601:bias,601:one,601:two,output:1863,output:bias' => 6326,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,1863:two,601:bias,601:one,601:two,output:1863,output:601,output:bias,output:one,output:two' => 5412,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,601:bias,601:two,output:1863,output:601,output:bias,output:one,output:two' => 3485,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:4920,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 11218,
    'N=1863,601,981,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,601:bias,601:two,981:bias,981:two,output:1863,output:601,output:981,output:bias,output:one' => 4561,
    'N=13535,1863,4639,4920,601,6083,bias,one,output,two;C=13535:4920,13535:bias,1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:13535,601:bias,601:one,601:two,6083:bias,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 13536,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,601:bias,output:1863,output:bias,output:one,output:two' => 1864,
    'N=14941,15714,1863,4639,4920,601,6083,7065,bias,one,output,two;C=14941:15714,14941:bias,15714:bias,1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:14941,6083:bias,7065:4639,7065:601,7065:6083,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 15715,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:two' => 5295,
    'N=1863,4639,4920,601,6083,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:bias,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 14388,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:one,601:4920,601:bias,601:one,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 5970,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,1863:two,601:bias,601:one,output:1863,output:bias,output:one,output:two' => 2865,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:two,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 5568,
    'N=1863,3618,601,bias,one,output,two;C=1863:3618,1863:601,1863:bias,3618:bias,3618:two,601:bias,601:one,output:1863,output:bias,output:one,output:two' => 7783,
    'N=1863,4639,4920,601,6948,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:6948,4920:bias,601:4920,601:bias,601:one,6948:bias,6948:two,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 6949,
    'N=14941,1863,4639,4920,601,6083,7065,bias,one,output,two;C=14941:bias,1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:14941,6083:bias,7065:4639,7065:601,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 15478,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,601:bias,601:one,601:two,output:1863,output:bias,output:one,output:two' => 3550,
    'N=1863,3618,601,bias,one,output,two;C=1863:3618,1863:601,1863:bias,3618:bias,3618:two,601:bias,output:1863,output:bias,output:one,output:two' => 3687,
    'N=549,601,bias,one,output,two;C=549:bias,549:one,601:bias,output:549,output:601,output:bias,output:two' => 1716,
    'N=601,bias,one,output,two;C=601:bias,output:601,output:bias,output:one' => 602,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4639,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 6124,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,1863:two,601:bias,601:two,output:1863,output:bias,output:one,output:two' => 3064,
    'N=601,981,bias,one,output,two;C=601:bias,981:bias,981:two,output:601,output:981,output:bias' => 3301,
    'N=1863,4639,4920,601,6083,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 13354,
    'N=bias,one,output,two;C=' => 1,
    'N=1863,3880,601,bias,one,output,two;C=1863:3880,1863:601,1863:bias,1863:two,3880:bias,3880:one,601:bias,601:two,output:1863,output:601,output:bias,output:one,output:two' => 4466,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:bias,4920:two,601:4639,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 11335,
    'N=1863,4639,4920,601,7065,7106,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,7065:7106,7065:bias,7106:4639,7106:bias,output:1863,output:601,output:7065,output:bias,output:one,output:two' => 7107,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:two,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:two' => 5854,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,601:bias,output:1863,output:bias,output:one,output:two' => 2591,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:bias,4920:one,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 16150,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:4920,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:two,601:4920,601:bias,601:one,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 12871,
    'N=1863,4639,4920,601,6083,bias,one,output,two;C=1863:4639,1863:601,1863:6083,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 13612,
    'N=601,981,bias,one,output,two;C=601:bias,981:bias,981:two,output:601,output:981,output:bias,output:one' => 1942,
    'N=1863,2665,601,bias,one,output,two;C=1863:601,1863:bias,2665:1863,2665:bias,601:bias,601:one,output:2665,output:bias' => 14152,
    'N=1863,3618,3756,601,bias,one,output,two;C=1863:3618,1863:3756,1863:bias,3618:bias,3618:two,3756:601,3756:bias,601:bias,output:1863,output:bias,output:one,output:two' => 5255,
    'N=601,bias,one,output,two;C=601:bias,output:601,output:bias,output:one,output:two' => 1207,
    'N=1863,4639,4920,601,981,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,981:bias,981:two,output:1863,output:4639,output:601,output:981,output:bias,output:one' => 6836,
    'N=13725,13976,1863,4639,4920,601,6083,bias,one,output,two;C=13725:13976,13725:bias,13976:bias,13976:two,1863:4639,1863:601,1863:6083,1863:bias,1863:one,1863:two,4639:13725,4639:bias,4639:one,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 13977,
    'N=14941,1863,4639,4920,601,6083,7065,bias,one,output,two;C=14941:bias,1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:14941,6083:bias,7065:4639,7065:601,7065:6083,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 15515,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 5335,
    'N=1863,4639,4920,601,6083,7065,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:4639,6083:bias,7065:4639,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 14816,
    'N=1863,3880,601,bias,one,output,two;C=1863:3880,1863:601,1863:bias,1863:two,3880:bias,3880:one,601:bias,601:two,output:1863,output:bias,output:one,output:two' => 3881,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:4920,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4639,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 6286,
    'N=1863,3756,601,bias,one,output,two;C=1863:3756,1863:bias,1863:two,3756:601,3756:bias,601:bias,output:1863,output:bias,output:one,output:two' => 3757,
    'N=549,bias,one,output,two;C=549:bias,549:one,output:549,output:bias,output:two' => 765,
    'N=1863,3880,601,bias,one,output,two;C=1863:3880,1863:601,1863:bias,1863:two,3880:bias,3880:one,3880:two,601:bias,601:two,output:1863,output:601,output:bias,output:one,output:two' => 4797,
    'N=1863,4639,4920,601,6083,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 13689,
    'N=1863,2016,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,2016:bias,4639:bias,4639:two,4920:4639,4920:bias,601:2016,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 5088,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 10153,
    'N=1863,4523,601,981,bias,one,output,two;C=1863:601,1863:bias,4523:bias,4523:two,601:bias,981:4523,981:bias,output:1863,output:981,output:bias,output:one' => 11102,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 6162,
    'N=1863,4639,4920,601,7065,7106,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,7065:7106,7065:bias,7106:4639,7106:4920,7106:bias,output:1863,output:601,output:7065,output:bias,output:one,output:two' => 7428,
    'N=1863,4639,4920,601,6083,7065,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:bias,7065:4639,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 14546,
    'N=1863,3756,601,bias,one,output,two;C=1863:3756,1863:bias,1863:one,1863:two,3756:bias,601:bias,output:1863,output:bias,output:one,output:two' => 11664,
    'N=601,bias,one,output,two;C=601:bias,output:601,output:bias' => 654,
    'N=bias,one,output,two;C=output:bias,output:two' => 497,
    'N=1863,4639,4920,601,6083,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,output:1863,output:4639,output:4920,output:601,output:6083,output:bias,output:one,output:two' => 14232,
    'N=1863,4639,4920,601,6083,7065,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,7065:1863,7065:4639,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 14466,
    'N=1863,4639,4920,5892,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:bias,5892:bias,5892:one,601:4920,601:5892,601:bias,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 5893,
    'N=1863,4639,4920,601,6083,bias,one,output,two;C=1863:4639,1863:601,1863:6083,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,output:1863,output:4639,output:4920,output:601,output:6083,output:bias,output:one,output:two' => 14114,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:bias,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 5449,
    'N=1863,2016,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,2016:bias,4639:bias,4639:one,4639:two,4920:4639,4920:bias,4920:two,601:2016,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 13228,
    'N=15005,15400,1863,4639,4920,601,6083,7065,bias,one,output,two;C=15005:4920,15005:bias,15400:bias,1863:4639,1863:601,1863:7065,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:4639,6083:bias,7065:15400,7065:4639,7065:bias,output:15005,output:1863,output:601,output:7065,output:bias,output:one,output:two' => 16026,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,601:bias,601:one,601:two,output:1863,output:601,output:bias,output:one,output:two' => 4402,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one' => 6637,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,601:4920,601:bias,601:one,output:1863,output:4920,output:601,output:bias,output:one,output:two' => 4963,
    'N=1863,3880,601,bias,one,output,two;C=1863:3880,1863:601,1863:bias,1863:two,3880:bias,3880:one,3880:two,601:bias,601:one,601:two,output:1863,output:bias,output:one,output:two' => 4219,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,601:bias,601:one,601:two,output:1863,output:bias,output:one,output:two' => 12986,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,601:4639,601:4920,601:bias,601:one,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 10443,
    'N=13725,1863,4639,4920,601,6083,bias,one,output,two;C=13725:bias,13725:two,1863:4639,1863:601,1863:6083,1863:bias,1863:one,1863:two,4639:13725,4639:bias,4639:one,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 13726,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,1863:two,601:bias,output:1863,output:bias,output:one,output:two' => 2448,
    'N=549,601,bias,one,output,two;C=549:bias,549:one,601:bias,output:549,output:601,output:bias' => 1283,
    'N=1863,4639,4920,601,981,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,981:bias,981:two,output:1863,output:4639,output:601,output:981,output:bias,output:one' => 12481,
    'N=1863,3880,4639,4920,601,bias,one,output,two;C=1863:3880,1863:4639,1863:601,1863:bias,1863:two,3880:bias,3880:one,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 7026,
    'N=1863,4639,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,601:4639,601:bias,601:one,output:1863,output:601,output:bias,output:one,output:two' => 4839,
    'N=14941,1863,4639,4920,601,6083,7065,bias,one,output,two;C=14941:bias,1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:14941,6083:bias,7065:14941,7065:4639,7065:601,7065:bias,7065:one,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 15837,
    'N=14941,1863,4639,4920,601,6083,7065,bias,one,output,two;C=14941:bias,1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:14941,6083:bias,7065:14941,7065:4639,7065:601,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 15776,
    'N=601,bias,one,output,two;C=601:bias,601:one,output:601,output:bias,output:one' => 12760,
    'N=549,bias,one,output,two;C=549:bias,549:one,output:549,output:bias' => 550,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,601:bias,601:one,output:1863,output:bias' => 5173,
    'N=bias,one,output,two;C=output:bias' => 58,
    'N=601,bias,one,output,two;C=601:bias,output:601,output:bias,output:two' => 1130,
    'N=1863,3618,601,bias,one,output,two;C=1863:3618,1863:601,1863:bias,1863:one,3618:bias,3618:two,601:bias,601:two,output:1863,output:bias,output:one,output:two' => 3619,
    'N=1863,4639,4920,601,6083,7065,bias,one,output,two;C=1863:4639,1863:601,1863:7065,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,7065:4639,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 14753,
    'N=1863,4639,4920,601,6083,bias,one,output,two;C=1863:4639,1863:4920,1863:601,1863:6083,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,6083:one,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 14272,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,1863:two,601:bias,601:one,601:two,output:1863,output:bias,output:one,output:two' => 3935,
    'N=15005,15400,1863,4639,4920,601,6083,7065,bias,one,output,two;C=15005:4920,15005:bias,15400:bias,1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:4639,6083:bias,7065:15400,7065:4639,7065:bias,output:15005,output:1863,output:601,output:7065,output:bias,output:one,output:two' => 15401,
    'N=13725,1863,3618,4639,4920,601,6083,bias,one,output,two;C=13725:bias,13725:two,1863:3618,1863:4639,1863:601,1863:6083,1863:bias,1863:one,3618:bias,3618:two,4639:13725,4639:bias,4639:one,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 13851,
    'N=1863,3880,4639,4920,601,bias,one,output,two;C=1863:3880,1863:4639,1863:601,1863:bias,1863:two,3880:bias,3880:one,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 6987,
    'N=1863,4639,4920,601,6083,bias,one,output,two;C=1863:4639,1863:601,1863:6083,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:6083,601:bias,601:one,601:two,6083:bias,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 14041,
    'N=1863,4639,4920,5610,601,bias,one,output,two;C=1863:5610,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,5610:4639,5610:bias,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 5611,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,601:4920,601:bias,601:one,output:1863,output:601,output:bias,output:one,output:two' => 5005,
    'N=981,bias,one,output,two;C=981:bias,981:one,981:two,output:981,output:bias,output:one' => 14622,
    'N=15005,1863,4639,4920,601,6083,7065,bias,one,output,two;C=15005:4920,15005:bias,1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:4639,6083:bias,7065:4639,7065:bias,output:15005,output:1863,output:601,output:7065,output:bias,output:one,output:two' => 15006,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:bias,601:4920,601:bias,601:one,output:1863,output:601,output:bias,output:one,output:two' => 5775,
    'N=1863,4639,4920,601,7065,7106,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,7065:7106,7065:bias,7065:one,7106:4639,7106:bias,output:1863,output:601,output:7065,output:bias,output:one' => 7309,
    'N=15005,1863,4639,4920,601,6083,7065,bias,one,output,two;C=15005:4920,15005:bias,1863:4639,1863:4920,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:4639,6083:bias,7065:4639,7065:bias,output:15005,output:1863,output:601,output:7065,output:bias,output:one,output:two' => 15362,
    'N=1863,4639,4920,601,6083,7065,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,7065:4639,7065:bias,7065:two,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 14697,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,output:1863,output:4920,output:601,output:bias,output:one,output:two' => 13650,
    'N=981,bias,one,output,two;C=981:bias,981:one,981:two,output:981,output:bias,output:one,output:two' => 10746,
    'N=1863,4639,4920,601,7065,7106,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,7065:7106,7065:bias,7106:4639,7106:bias,output:1863,output:601,output:7065,output:bias,output:one,output:two' => 7147,
    'N=1863,4639,4920,601,7065,7106,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,7065:7106,7065:bias,7065:one,7106:4639,7106:bias,output:1863,output:601,output:7065,output:bias,output:one,output:two' => 7226,
    'N=1863,4639,4920,601,6083,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:6083,4920:bias,4920:two,601:4920,601:bias,601:one,6083:bias,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 6084,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 6405,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:4920,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 6521,
    'N=1863,4639,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,601:4639,601:bias,output:1863,output:601,output:bias,output:one,output:two' => 4640,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:bias,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 5816,
    'N=1863,4639,4920,601,6794,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:6794,4920:bias,4920:two,601:4920,601:bias,601:one,6794:4639,6794:bias,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 6795,
    'N=14941,1863,4639,4920,601,6083,7065,bias,one,output,two;C=14941:bias,1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:14941,601:4639,601:4920,601:bias,601:one,601:two,6083:14941,6083:7065,6083:bias,7065:4639,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 15326,
    'N=14941,1863,4639,4920,601,6083,7065,bias,one,output,two;C=14941:bias,1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:14941,6083:7065,6083:bias,7065:4639,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 15197,
    'N=1863,4599,601,bias,one,output,two;C=1863:4599,1863:601,1863:bias,1863:one,1863:two,4599:bias,601:bias,601:two,output:1863,output:601,output:bias,output:one,output:two' => 4600,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 13165,
    'N=1863,4639,4920,601,7065,7106,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:bias,7065:7106,7065:bias,7106:4639,7106:4920,7106:bias,output:1863,output:601,output:7065,output:bias,output:one,output:two' => 8655,
    'N=14941,1863,4639,4920,601,6083,7065,bias,one,output,two;C=14941:bias,1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:14941,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:14941,6083:bias,7065:4639,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 15134,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 6676,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,601:4920,601:bias,601:one,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 5213,
    'N=549,601,bias,one,output,two;C=549:bias,549:one,601:bias,601:one,601:two,output:549,output:601,output:bias,output:two' => 13046,
    'N=1863,3880,601,bias,one,output,two;C=1863:3880,1863:601,1863:bias,1863:two,3880:601,3880:bias,3880:one,3880:two,601:bias,601:two,output:1863,output:bias,output:one,output:two' => 4279,
    'N=3130,549,bias,one,output,two;C=3130:bias,549:3130,549:bias,549:one,output:549,output:bias,output:two' => 12370,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,601:bias,601:one,output:1863,output:bias,output:one,output:two' => 9062,
    'N=1863,4639,4920,601,7065,7106,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:bias,7065:7106,7065:bias,7106:4639,7106:bias,output:1863,output:601,output:7065,output:bias,output:one,output:two' => 7188,
    'N=1863,3756,601,bias,one,output,two;C=1863:3756,1863:bias,1863:two,3756:bias,601:bias,output:1863,output:bias,output:one,output:two' => 8886,
    'N=2016,601,bias,one,output,two;C=2016:bias,601:2016,601:bias,output:601,output:bias,output:one,output:two' => 2017,
    'N=1863,4639,4920,601,6083,7065,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,7065:4639,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 14429,
    'N=1863,4639,4920,601,6083,bias,one,output,two;C=1863:4639,1863:601,1863:6083,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:4639,6083:bias,6083:one,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 14309,
    'N=1863,2016,3880,601,bias,one,output,two;C=1863:3880,1863:601,1863:bias,1863:two,2016:bias,3880:bias,3880:one,3880:two,601:2016,601:bias,601:two,output:1863,output:bias,output:one,output:two' => 4160,
    'N=981,bias,one,output,two;C=981:bias,981:two,output:981,output:bias,output:one' => 982,
    'N=1863,4639,4920,601,6083,7065,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:4639,6083:bias,6083:two,7065:4639,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 15069,
    'N=1863,4639,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,601:4639,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 5649,
    'N=1863,4639,4920,549,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:549,4639:bias,4639:two,4920:4639,4920:bias,4920:two,549:bias,549:one,601:4920,601:bias,601:one,output:1863,output:4639,output:549,output:601,output:bias,output:two' => 16214,
    'N=601,bias,one,output,two;C=601:bias,601:one,output:601,output:bias,output:one,output:two' => 1641,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:4920,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 13389,
    'N=601,bias,one,output,two;C=601:bias,601:two,output:601,output:bias,output:one,output:two' => 1425,
    'N=981,bias,one,output,two;C=981:bias,981:two,output:981,output:bias,output:one,output:two' => 6911,
    'N=1863,3880,601,bias,one,output,two;C=1863:3880,1863:601,1863:bias,1863:two,3880:bias,3880:one,3880:two,601:bias,601:two,output:1863,output:bias,output:one,output:two' => 3990,
    'N=1863,2665,601,bias,one,output,two;C=1863:601,1863:bias,1863:two,2665:1863,2665:bias,601:bias,output:2665,output:601,output:bias,output:one,output:two' => 10622,
    'N=1863,4639,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,601:4639,601:bias,601:one,output:1863,output:601,output:bias,output:one,output:two' => 4757,
    'N=1863,4639,4920,601,6083,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,6083:two,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 13499,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:601,1863:bias,4639:bias,4639:one,4639:two,4920:4639,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:4920,output:bias,output:one,output:two' => 13291,
    'N=1863,2016,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,2016:bias,2016:two,4639:bias,4639:two,4920:4639,4920:bias,601:2016,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 5133,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:4920,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 6756,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:4920,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 6484,
    'N=1863,2665,601,bias,one,output,two;C=1863:601,1863:bias,1863:two,2665:1863,2665:bias,601:bias,output:2665,output:bias,output:one,output:two' => 2666,
    'N=1863,3756,4523,601,981,bias,one,output,two;C=1863:3756,1863:bias,3756:601,3756:bias,4523:bias,4523:two,601:bias,981:4523,981:bias,output:1863,output:981,output:bias,output:one' => 13575,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:4920,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 6204,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:4920,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 6599,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,601:bias,output:1863,output:601,output:bias,output:one,output:two' => 4340,
    'N=1863,4639,4920,601,6083,7065,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,7065:4639,7065:4920,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 14585,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,601:bias,601:two,output:1863,output:bias,output:one,output:two' => 3360,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 6007,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:4920,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 6242,
    'N=4523,601,981,bias,one,output,two;C=4523:bias,4523:two,601:bias,981:4523,981:bias,output:601,output:981,output:bias,output:one' => 4524,
    'N=601,bias,one,output,two;C=601:bias,601:one,output:601,output:bias' => 832,
    'N=1863,601,981,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,601:bias,601:two,981:bias,981:one,981:two,output:1863,output:601,output:981,output:bias,output:one' => 16088,
    'N=14941,1863,4639,4920,601,6083,7065,bias,one,output,two;C=14941:bias,1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:14941,6083:bias,7065:4639,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:two' => 15440,
    'N=1863,3880,601,bias,one,output,two;C=1863:3880,1863:601,1863:bias,1863:one,1863:two,3880:bias,3880:one,3880:two,601:bias,601:two,output:1863,output:bias,output:one,output:two' => 4103,
    'N=1863,4639,4920,601,7065,7106,7268,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,7065:7106,7065:bias,7065:one,7106:4639,7106:7268,7106:bias,7268:bias,output:1863,output:601,output:7065,output:bias,output:one,output:two' => 7269,
    'N=1863,601,981,bias,one,output,two;C=1863:601,1863:bias,1863:two,601:bias,981:bias,981:two,output:1863,output:981,output:bias,output:one' => 11276,
    'N=1863,4639,4920,601,7065,7106,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,7065:7106,7065:bias,7106:4639,7106:bias,7106:one,output:1863,output:601,output:7065,output:bias,output:one,output:two' => 7350,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,601:4639,601:4920,601:bias,601:one,output:1863,output:601,output:bias,output:one,output:two' => 15900,
    'N=1863,4639,4920,601,7065,7106,981,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,7065:7106,7065:bias,7065:one,7106:4639,7106:bias,981:bias,981:two,output:1863,output:601,output:7065,output:981,output:bias,output:one' => 7387,
    'N=14941,1863,4639,4920,601,6083,7065,bias,one,output,two;C=14941:bias,1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:14941,6083:bias,7065:4639,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 14942,
    'N=1863,4639,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,601:4639,601:bias,601:one,601:two,output:1863,output:601,output:bias,output:one,output:two' => 8427,
    'N=1863,3880,4639,4920,601,bias,one,output,two;C=1863:3880,1863:4639,1863:601,1863:bias,1863:two,3880:601,3880:bias,3880:one,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 9299,
    'N=14941,1863,4639,4920,601,6083,7065,bias,one,output,two;C=14941:bias,14941:two,1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:14941,6083:bias,7065:4639,7065:601,7065:6083,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 15589,
    'N=1863,2016,4639,4920,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,2016:bias,4639:bias,4639:two,4920:4639,4920:bias,601:2016,601:4920,601:bias,601:one,output:1863,output:601,output:bias,output:one,output:two' => 13913,
    'N=bias,one,output,two;C=output:bias,output:one,output:two' => 705,
    'N=1863,2016,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,2016:bias,2016:two,4639:bias,4639:two,4920:4639,4920:bias,601:2016,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 14346,
    'N=1863,549,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,549:bias,549:one,601:bias,601:two,output:1863,output:549,output:bias,output:two' => 3826,
    'N=1863,601,bias,one,output,two;C=1863:601,1863:bias,1863:two,601:bias,output:1863,output:601,output:bias,output:one,output:two' => 3001,
    'N=1863,4639,4920,601,6083,7065,bias,one,output,two;C=1863:4639,1863:601,1863:6083,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,7065:4639,7065:bias,output:1863,output:4920,output:601,output:7065,output:bias,output:one,output:two' => 14661,
    'N=1863,4639,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,601:4639,601:bias,output:1863,output:601,output:bias,output:one,output:two' => 4717,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 6714,
    'N=15005,15400,1863,4639,4920,601,6083,7065,bias,one,output,two;C=15005:4920,15005:bias,15400:4639,15400:bias,1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,6083:4639,6083:bias,7065:15400,7065:4639,7065:bias,output:15005,output:1863,output:601,output:7065,output:bias,output:one,output:two' => 15963,
    'N=bias,one,output,two;C=output:two' => 12,
    'N=1863,2016,4639,601,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,2016:bias,4639:bias,4639:two,601:2016,601:4639,601:bias,output:1863,output:601,output:bias,output:one,output:two' => 4678,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:4920,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:bias,4920:one,4920:two,601:4639,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 13425,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:two,601:4920,601:bias,601:one,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 5930,
    'N=1863,4639,4920,549,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,549:bias,549:one,601:4920,601:bias,601:one,output:1863,output:4639,output:549,output:601,output:bias,output:two' => 6045,
    'N=1863,4639,4920,601,6083,bias,one,output,two;C=1863:4639,1863:601,1863:6083,1863:bias,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 14505,
    'N=bias,one,output,two;C=output:one' => 31,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 5047,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:4920,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4639,601:4920,601:bias,601:one,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 6365,
    'N=1863,4639,4920,601,6083,bias,one,output,two;C=1863:4639,1863:4920,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:6083,4920:bias,4920:one,4920:two,601:4920,601:bias,601:one,601:two,6083:bias,output:1863,output:4639,output:4920,output:601,output:bias,output:one,output:two' => 14192,
    'N=1863,4639,4920,601,6083,bias,one,output,two;C=1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:two,4920:4639,4920:6083,4920:bias,601:4920,601:bias,601:one,6083:bias,output:1863,output:601,output:bias,output:one,output:two' => 15261,
    'N=1863,3618,4639,4920,601,bias,one,output,two;C=1863:3618,1863:4639,1863:4920,1863:601,1863:bias,1863:one,3618:bias,3618:two,4639:bias,4639:two,4920:4639,4920:bias,4920:two,601:4639,601:4920,601:bias,601:one,output:1863,output:4639,output:601,output:bias,output:one,output:two' => 6446,
    'N=1863,4639,4920,601,bias,one,output,two;C=1863:4639,1863:601,1863:bias,1863:one,1863:two,4639:bias,4639:one,4639:two,4920:4639,4920:bias,4920:two,601:4920,601:bias,601:one,601:two,output:1863,output:4639,output:4920,output:bias,output:one,output:two' => 13105
  }
}, 'neat' );
